<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>const限定符</title>
      <link href="/2023/02/13/cpp-primer%E7%AC%94%E8%AE%B0/const%E9%99%90%E5%AE%9A%E7%AC%A6/"/>
      <url>/2023/02/13/cpp-primer%E7%AC%94%E8%AE%B0/const%E9%99%90%E5%AE%9A%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="const初始化">const初始化</h2><div class="sourceCode" id="cb1"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> i <span class="op">=</span> <span class="dv">42</span><span class="op">;</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> ci <span class="op">=</span> i<span class="op">;</span><span class="co">//将i的值拷贝给了ci</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> j <span class="op">=</span> ci<span class="op">;</span><span class="co">//将ci的值拷贝给了j，只是拷贝了ci的值给j，不会影响ci</span></span></code></pre></div><ul><li>ci的常量特征仅仅在执行改变ci的操作时才会发生作用</li></ul><h3 id="默认状态下const对象只在文件内有效">默认状态下，const对象只在文件内有效</h3><p>不同文件中出现同名的const变量时，等价于分别定义了独立的变量。<strong>如果希望部分文件共享这个const对象，方法是：</strong><strong>一个文件定义，多个文件声明</strong></p><div class="sourceCode" id="cb2"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="co">//file.cc</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="at">extern</span> <span class="at">const</span> <span class="dt">int</span> bufSize <span class="op">=</span> fcn<span class="op">();</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="co">//file_1.h</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="at">extern</span> <span class="at">const</span> <span class="dt">int</span> bufSize<span class="op">;</span></span></code></pre></div><h2 id="const的引用常量引用">const的引用（常量引用）</h2><div class="sourceCode" id="cb3"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> ci <span class="op">=</span> <span class="dv">1024</span><span class="op">;</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">&amp;</span>rl <span class="op">=</span> ci<span class="op">;</span><span class="co">//常量 = 常量</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>rl <span class="op">=</span> <span class="dv">42</span><span class="op">;</span>           <span class="co">//错误：rl是给常量起别名，实质是常量，不可以被赋值</span></span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> <span class="op">&amp;</span>r2 <span class="op">=</span> ci<span class="op">;</span>      <span class="co">//错误：不可以使用变量名作为常量的别名</span></span></code></pre></div><ul><li>使用<strong>整型常量</strong>作为<strong>double类型的变量</strong>的别名（类比别的类型）</li></ul><div class="sourceCode" id="cb4"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="dt">double</span> dval <span class="op">=</span> <span class="fl">3.14</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">&amp;</span>ri <span class="op">=</span> dval<span class="op">;</span></span><span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="op">==&gt;</span></span><span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> temp <span class="op">=</span> dval<span class="op">;</span></span><span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">&amp;</span>rl <span class="op">=</span> temp<span class="op">;</span></span></code></pre></div><ul><li>不可以使用<strong>整型变量</strong>作为<strong>double类型的变量</strong>的别名（类比别的类型）</li></ul><div class="sourceCode" id="cb5"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="co">//double a = 3.14;</span></span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="co">//int &amp;b = a;</span></span><span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="co">//错误</span></span></code></pre></div><ul><li>对const的引用可能引用一个并非const的对象</li></ul><pre><code>int i = 42;int &amp;rl = i;  //变量给变量其别名，r1可以修改i的值（可以变）const int &amp;r2 = i;//常量给变量起别名，r2不可以修改i的值（常量不能变）r1 = 0;         //正确r2 = 0;         //错误</code></pre><h2 id="指针和const">指针和const</h2><h3 id="指针常量顶层const必须初始化因为初始化的是它的地址">指针常量（顶层const）<strong>必须初始化,因为初始化的是它的地址</strong></h3><p><strong>指针类型的常量</strong>不可以改变指针指向，可以改变指向对象的值</p><div class="sourceCode" id="cb7"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> a<span class="op">;</span></span><span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> <span class="op">*</span><span class="at">const</span> p <span class="op">=</span> <span class="op">&amp;</span>a<span class="op">;</span></span></code></pre></div><h3 id="常量指针底层const">常量指针（底层const）</h3><p><strong>指向常量的指针</strong>不可以改变指向对象的值，可以改变指针指向</p><div class="sourceCode" id="cb8"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> a<span class="op">;</span></span><span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">*</span>p<span class="op">;</span></span></code></pre></div><h3 id="指向常量的指针常量">指向常量的指针常量</h3><p>不可以改变指向对象的值,也不可以改变指针指向</p><div class="sourceCode" id="cb9"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> a<span class="op">;</span></span><span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">*</span><span class="at">const</span> p<span class="op">;</span></span></code></pre></div><p>###　常量不可以　＝　变量的引用</p><div class="sourceCode" id="cb10"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> ci <span class="op">=</span> <span class="dv">42</span><span class="op">;</span></span><span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> <span class="op">&amp;</span>ri <span class="op">=</span> ci<span class="op">;</span><span class="co">//错误</span></span></code></pre></div><h3 id="顶层const和底层const">顶层const和底层const</h3><p>指针本身是一个常量（存放的地址是一个常量）<strong>顶层const</strong>指针指向的值是一个常量（指向的值是一个常量）<strong>底层const</strong></p><pre><code>int i = 0;int *const p1 = &amp;i; //p1地址不能改变，顶层constconst int ci = 42;  //不能改变ci的值，这是一个顶层constconst int *p2 = &amp;ci;//p2地址可以改变，底层constconst int *const p3 = p2;//靠右的const是顶层const,靠做的是底层constconst int &amp;r = ci;  //用于声明引用的const都是底层const</code></pre><p><strong>底层const需要注意：</strong></p><div class="sourceCode" id="cb12"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> <span class="op">*</span>p <span class="op">=</span> p3<span class="op">;</span>        <span class="co">//错误，p3包含底层const的定义，而p没有</span></span><span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a>p2 <span class="op">=</span> p3<span class="op">;</span>            <span class="co">//正确，p2和p3都是底层const</span></span><span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a>p2 <span class="op">=</span> <span class="op">&amp;</span>i<span class="op">;</span>            <span class="co">//正确，int*能转换成const int*</span></span><span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> <span class="op">&amp;</span>r <span class="op">=</span> ci<span class="op">;</span>        <span class="co">//错误，常量不可以 = 变量的引用</span></span><span id="cb12-5"><a href="#cb12-5" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">&amp;</span>r2 <span class="op">=</span> i<span class="op">;</span>  <span class="co">//正确：const </span></span></code></pre></div><h2 id="constexpr变量">constexpr变量</h2><p><strong>作用：由编译器来验证变量的值是否是一个常量表达式</strong></p><ul><li>必须是constexpr函数才能给constexpr类型的变量初始化</li></ul><div class="sourceCode" id="cb13"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">*</span>p <span class="op">=</span> <span class="kw">nullptr</span><span class="op">;</span>  <span class="co">//p是一个指向整型常量的指针</span></span><span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a><span class="kw">constexpr</span> <span class="dt">int</span> <span class="op">*</span>q <span class="op">=</span> <span class="kw">nullptr</span><span class="op">;</span><span class="co">//q是一个指向整数的常量指针（常量指针） 所定义的变量置为了顶层                               //const</span></span></code></pre></div><p>constexpr指针既可以指向常量也可以指向一个非常量</p>]]></content>
      
      
      <categories>
          
          <category> c++ primer笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> const初始化 </tag>
            
            <tag> const引用（常量引用） </tag>
            
            <tag> 指针和const </tag>
            
            <tag> constexpr变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指针常量和常量指针</title>
      <link href="/2023/02/13/cpp-primer%E7%AC%94%E8%AE%B0/%E5%A4%84%E7%90%86%E7%B1%BB%E5%9E%8B/"/>
      <url>/2023/02/13/cpp-primer%E7%AC%94%E8%AE%B0/%E5%A4%84%E7%90%86%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> c++ primer笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>水下机器人技术</title>
      <link href="/2023/02/10/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%80%E6%9C%AF/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%80%E6%9C%AF/"/>
      <url>/2023/02/10/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%80%E6%9C%AF/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="水下机器人结构">水下机器人结构</h2><ol type="1"><li>耐压舱 电池、导航、控制、传感器</li><li>推进器设计</li></ol><p><img src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-12%20201748.png"></p><ol start="3" type="1"><li>通信技术</li></ol><ul><li><p>有线通信</p><p>光纤通信、以太网通信、载波通信等</p></li><li><p>无线通信</p><p>水声通信、激光通讯、无线电通信、卫星通信等</p></li></ul><ol start="4" type="1"><li>导航定位技术</li></ol><ul><li><p>导航技术</p><p>（1） 基于外部信息的导航</p><p>GPS,USBL,LBL,SBL，<strong>适用于系统在水面航行或在水下航行但有水面支持母船的场合</strong></p><p>（2） 基于自身传感器的导航</p><p><strong>依靠系统内部传感器进行导航不需要外部信号</strong></p><p>捷联惯导系统、航位推算、地形匹配、重力场导航</p></li><li><p>定位技术</p><p>LBL,SBL,USBL <img src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-12%20203742.png"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 水下机器人 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>对象特性</title>
      <link href="/2023/02/10/%E9%BB%91%E9%A9%ACcpp%E7%AC%94%E8%AE%B0/%E5%AF%B9%E8%B1%A1%E7%89%B9%E6%80%A7/"/>
      <url>/2023/02/10/%E9%BB%91%E9%A9%ACcpp%E7%AC%94%E8%AE%B0/%E5%AF%B9%E8%B1%A1%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="构造函数和析构函数">构造函数和析构函数</h2><p><strong>作用：对象的初始化和清理</strong></p><h3 id="构造函数语法类名">1. 构造函数语法：类名()</h3><ul><li>构造函数，没有返回值也不写void</li><li>函数名称与类名相同</li><li>构造函数可以有参数，因此可以发生重载</li><li>程序在调用对象时候自动调用构造，无需手动调用，而且只会调用一次</li></ul><h3 id="析构函数语法类名">2. 析构函数语法：~类名()</h3><ul><li>析构函数，没有返回值也不写void</li><li>函数名称与类名相同，在名称前加上符号～</li><li>析构函数不可以有参数，因此不可以发生重载</li><li>对象在销毁前自动调用析构，无需手动调用，而且只会调用一次</li></ul><h2 id="构造函数的分类和调用">构造函数的分类和调用</h2><p>两种分类方式： + 按参数分为：有参构造和无参构造（默认构造） +按类型分为：普通构造和拷贝构造</p><div class="sourceCode" id="cb1"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> Person</span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span><span class="op">:</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    Person<span class="op">(</span><span class="at">const</span> Person <span class="op">&amp;</span>p<span class="op">)</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>        <span class="co">//将传入的人身上所有属性，拷贝到我身上</span></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        age <span class="op">=</span> p<span class="op">.</span>age<span class="op">;</span></span><span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    </span><span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span><span class="op">:</span></span><span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> age<span class="op">;</span>    </span><span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a><span class="op">};</span></span></code></pre></div><p>三种调用方法： + 括号法</p><div class="sourceCode" id="cb2"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>Person p1<span class="op">;</span><span class="co">//无参</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>Person p2<span class="op">(</span><span class="dv">10</span><span class="op">);</span><span class="co">//有参</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>Person p3<span class="op">(</span>p2<span class="op">);</span><span class="co">//拷贝</span></span></code></pre></div><ul><li><p>显示法</p><div class="sourceCode" id="cb3"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a>Person p1<span class="op">;</span><span class="co">//无参</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>Person p2 <span class="op">=</span> Person<span class="op">(</span><span class="dv">10</span><span class="op">);</span><span class="co">//有参</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>Person p3 <span class="op">=</span> Person<span class="op">(</span>p2<span class="op">);</span><span class="co">//拷贝</span></span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>Person<span class="op">(</span><span class="dv">10</span><span class="op">);</span><span class="co">//匿名对象  特点：当前行执行结束后，系统会立即回收掉匿名对象</span></span><span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>Person<span class="op">(</span>p3<span class="op">);</span><span class="co">//注意事项：不要利用拷贝构造函数 初始化匿名对象  编译器会认为Person (p3) === Person p3 对象声明</span></span></code></pre></div></li><li><p>隐式转换法</p></li></ul><div class="sourceCode" id="cb4"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a>Person p4 <span class="op">=</span> <span class="dv">10</span><span class="op">;</span><span class="co">//相当于Person p4 = Person(10)</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>Person p5 <span class="op">=</span> p4<span class="op">;</span><span class="co">//拷贝构造</span></span></code></pre></div><h2 id="拷贝构造函数调用时机">拷贝构造函数调用时机</h2><ul><li><p>使用一个已经创建完毕的对象来初始化一个新对象</p></li><li><p>值传递的方式给函数传值</p><div class="sourceCode" id="cb5"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="dt">void</span> doWork<span class="op">(</span>Person p<span class="op">)</span></span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span><span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span><span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="dt">void</span> test02<span class="op">()</span></span><span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span><span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>  Person p<span class="op">;</span></span><span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>  doWork<span class="op">(</span>p<span class="op">);</span></span><span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div></li><li><p>以值方式返回局部对象</p></li></ul><div class="sourceCode" id="cb6"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a>Person doWork2<span class="op">()</span></span><span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span><span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>    Person p1<span class="op">;</span></span><span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> p1<span class="op">;</span><span class="co">//并不是返回p1,而是拷贝了一个p1返回</span></span><span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span><span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a><span class="dt">void</span> test03<span class="op">()</span></span><span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span><span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>    Person p <span class="op">=</span> doWork<span class="op">();</span></span><span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><h2 id="构造函数调用规则">构造函数调用规则</h2><p>默认提供三个函数：</p><ol type="1"><li>默认构造函数（无参，函数体为空）</li><li>默认析构函数（无参，函数体为空）</li><li>默认拷贝构造函数，对属性进行值拷贝</li></ol><p>构造函数调用规则：</p><ul><li>如果用户定义有参构造函数，c++不再提供默认无参构造，但是会提供默认拷贝构造</li><li>如果用户定义拷贝构造函数 c++不再提供其他构造函数</li></ul>]]></content>
      
      
      <categories>
          
          <category> 黑马c++学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 构造函数和析构函数 </tag>
            
            <tag> 构造函数的分类以及调用 </tag>
            
            <tag> 拷贝构造函数调用时机 </tag>
            
            <tag> 构造函数调用规则 </tag>
            
            <tag> 深拷贝和浅拷贝 </tag>
            
            <tag> 初始化列表 </tag>
            
            <tag> 类对象作为类成员 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指针常量和常量指针</title>
      <link href="/2023/02/10/cpp-primer%E7%AC%94%E8%AE%B0/%E6%8C%87%E9%92%88%E5%B8%B8%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F%E6%8C%87%E9%92%88/"/>
      <url>/2023/02/10/cpp-primer%E7%AC%94%E8%AE%B0/%E6%8C%87%E9%92%88%E5%B8%B8%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<h2 id="指针常量顶层const">指针常量（顶层const）</h2><p><strong>指针类型的常量</strong>不可以改变指针指向，可以改变指向对象的值</p><div class="sourceCode" id="cb1"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> a<span class="op">;</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> <span class="op">*</span><span class="at">const</span> p <span class="op">=</span> <span class="op">&amp;</span>a<span class="op">;</span></span></code></pre></div><p><strong>必须初始化</strong> ## 常量指针（底层const）<strong>指向常量的指针</strong>不可以改变指向对象的值，可以改变指针指向</p><div class="sourceCode" id="cb2"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> a<span class="op">;</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">*</span>p<span class="op">;</span></span></code></pre></div><h2 id="指向常量的指针常量">指向常量的指针常量</h2><p>不可以改变指向对象的值,也不可以改变指针指向</p><div class="sourceCode" id="cb3"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> a<span class="op">;</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">*</span><span class="at">const</span> p<span class="op">;</span></span></code></pre></div><p>##　常量不可以　＝　变量的引用</p><div class="sourceCode" id="cb4"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> ci <span class="op">=</span> <span class="dv">42</span><span class="op">;</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> <span class="op">&amp;</span>ri <span class="op">=</span> ci<span class="op">;</span><span class="co">//错误</span></span></code></pre></div>]]></content>
      
      
      <categories>
          
          <category> c++ primer笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 指针常量 </tag>
            
            <tag> 常量指针 </tag>
            
            <tag> 指向常量的指针常量 </tag>
            
            <tag> 常量不可以　＝　变量的引用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EKF算法（CTRV运动模型）</title>
      <link href="/2023/02/09/EKF/EKF/"/>
      <url>/2023/02/09/EKF/EKF/</url>
      
        <content type="html"><![CDATA[<h2 id="一参数准备">一、参数准备</h2><ul><li>控制变量矩阵 B = 0</li><li>状态控制向量 u = 0</li><li>卡尔曼增益 K （无需初始化）</li><li>观测值 z（外部输入，无需初始化）</li><li>先验估计协方差 P</li></ul><div class="sourceCode" id="cb1"><pre class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>P <span class="op">=</span> np.diag(np.ones(<span class="dv">5</span>))  <span class="co"># 先验估计协方差</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="co"># 主对角线是1，其他为0</span></span></code></pre></div><ul><li><p>滤波器输出状态 x = []</p></li><li><p>滤波器预测状态 G = []</p></li><li><p>状态转移矩阵 J_A = []<strong>与非线性系统的预测机制有关</strong></p></li><li><p>噪声协方差矩阵Q = []<strong>代表对控制系统的信任程度，预测过程上叠加一个高斯噪声，若希望跟踪的轨迹更光滑，可以调小</strong></p></li><li><p>观测矩阵H <strong>z = H * x, 状态：（坐标x, 坐标y, 速度x,速度y）,观测值：（坐标x, 坐标y）</strong></p><div class="sourceCode" id="cb2"><pre class="sourceCode python"><code class="sourceCode python"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>H <span class="op">=</span> np.eye(<span class="dv">2</span>, <span class="dv">5</span>)</span></code></pre></div></li><li><p>观测噪声协方差矩阵R<strong>代表对观测数据的信任程度，观测过程中存在一个高斯噪声，若观测结果中的值很准确，可以调小</strong></p><div class="sourceCode" id="cb3"><pre class="sourceCode python"><code class="sourceCode python"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a> R <span class="op">=</span> np.diag(np.ones(<span class="dv">2</span>)) <span class="op">*</span> <span class="fl">0.6</span><span class="co"># 主对角线是1，其他为0</span></span></code></pre></div></li></ul><h2 id="二参数初始化">二、参数初始化</h2><ul><li><p>B = 0</p></li><li><p>u = 0</p></li><li><p>K = null</p></li><li><p>z = null</p></li><li><p><span class="math display">\[P = \left[\matrix{  200 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\  0 &amp; 200 &amp; 0 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 10 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 10 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 0 &amp; 10\\}\right]\]</span></p></li><li><p><span class="math display">\[x = \left[\matrix{  坐标x &amp; 坐标y &amp; 速度 &amp; 航向 &amp; 航向角速度}\right]\]</span></p></li><li><p><span class="math display">\[G = \left[\matrix{  坐标x &amp; 坐标y &amp; 速度 &amp; 航向 &amp; 航向角速度}\right]\]</span></p></li><li><p><span class="math display">\[J\_A = \left[\matrix{  1 &amp; 0 &amp; \Delta t*cos(航向) &amp; -\Delta t*v*sin(航向) &amp;0\\  0 &amp; 1 &amp; \Delta t*sin(航向) &amp; \Delta t*v*cos(航向) &amp;0\\  0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 1 &amp; \Delta t\\  0 &amp; 0 &amp; 0 &amp; 0 &amp; 1}\right]\]</span></p></li><li><p>std_noise_a = 3 <strong>纵向加速度噪声</strong></p></li><li><p>std_noise_yaw_dd = 0.3 <strong>偏航角加速度噪声</strong></p></li><li><p><span class="math display">\[Q\_v = \left[\matrix{  (std\_noise\_a)^2  &amp; 0 \\  0 &amp; (std\_noise\_yaw\_dd)^2\\}\right]=\left[\matrix{  (\sigma_a)^2  &amp; 0 \\  0 &amp; (\sigma_{\psi}^{..})^2\\}\right]\]</span></p></li><li><p><span class="math display">\[temp = \left[\matrix{  0.5*(\Delta t)^2*cos(航向) &amp; 0\\  0.5*(\Delta t)^2*sin(航向) &amp; 0\\  \Delta t &amp; 0 \\  0 &amp; 0.5*(\Delta t)^2 \\  0 &amp; \Delta t \\}\right]\]</span></p></li><li><p><span class="math display">\[Q = (temp.*Q_v) * temp^{T}\]</span></p></li><li></li></ul><p><span class="math display">\[H = \left[\matrix{  1 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\  0 &amp; 1 &amp; 0 &amp; 0 &amp; 0\\}\right]\]</span></p><ul><li><span class="math display">\[R = \left[\matrix{  1 &amp; 0\\  0 &amp; 1\\}\right]\]</span></li></ul><h2 id="三函数定义">三、函数定义</h2><ol type="1"><li><p>控制航向角------psi角在 -pi ~ pi之间</p><div class="sourceCode" id="cb4"><pre class="sourceCode python"><code class="sourceCode python"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> control_psi(<span class="va">self</span>,psi):</span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a> <span class="cf">while</span> (psi <span class="op">&gt;</span> np.pi <span class="kw">or</span> psi <span class="op">&lt;</span> <span class="op">-</span>np.pi): </span><span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>     <span class="cf">if</span> psi <span class="op">&gt;</span> np.pi:</span><span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>         psi <span class="op">=</span> psi <span class="op">-</span> <span class="dv">2</span> <span class="op">*</span> np.pi</span><span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>     <span class="cf">if</span> psi <span class="op">&lt;</span> <span class="op">-</span>np.pi:</span><span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>         psi <span class="op">=</span> psi <span class="op">+</span> <span class="dv">2</span> <span class="op">*</span> np.pi</span><span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a> <span class="cf">return</span> psi</span></code></pre></div></li><li><p>更新状态</p></li></ol><div class="sourceCode" id="cb5"><pre class="sourceCode python"><code class="sourceCode python"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a>    <span class="kw">def</span> update(<span class="va">self</span>,dt):</span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> np.<span class="bu">abs</span>(<span class="va">self</span>.x[<span class="dv">4</span>])<span class="op">&lt;</span><span class="fl">0.0001</span>:<span class="co">#如果航向角速度很小</span></span><span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>            v <span class="op">=</span> <span class="va">self</span>.x[<span class="dv">2</span>] <span class="co"># 速度</span></span><span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>            heading <span class="op">=</span> <span class="va">self</span>.control_psi(<span class="va">self</span>.x[<span class="dv">3</span>])<span class="co"># 航向</span></span><span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>            <span class="co">###########################################预测部分</span></span><span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>            <span class="co"># xk_=g(xk,u)</span></span><span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>            xk_ <span class="op">=</span> np.array([v<span class="op">*</span>math.cos(heading)<span class="op">*</span>dt<span class="op">+</span><span class="va">self</span>.x[<span class="dv">0</span>],</span><span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a>                            v<span class="op">*</span>math.sin(heading)<span class="op">*</span>dt<span class="op">+</span><span class="va">self</span>.x[<span class="dv">1</span>],</span><span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a>                            v,</span><span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a>                            heading,</span><span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a>                            <span class="fl">0.0001</span>])</span><span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a>            </span><span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a>            <span class="va">self</span>.G <span class="op">=</span> xk_</span><span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a>            <span class="co">################更新####################</span></span><span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a>            v <span class="op">=</span> xk_[<span class="dv">2</span>]</span><span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a>            heading <span class="op">=</span> <span class="va">self</span>.control_psi(xk_[<span class="dv">3</span>])</span><span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a>            heading_rate <span class="op">=</span> xk_[<span class="dv">4</span>]</span><span id="cb5-19"><a href="#cb5-19" aria-hidden="true" tabindex="-1"></a>            <span class="co">###############使用新的航向计算J_A#############</span></span><span id="cb5-20"><a href="#cb5-20" aria-hidden="true" tabindex="-1"></a>            J_A02 <span class="op">=</span> dt<span class="op">*</span>np.cos(heading) </span><span id="cb5-21"><a href="#cb5-21" aria-hidden="true" tabindex="-1"></a>            J_A03 <span class="op">=</span> <span class="op">-</span>dt<span class="op">*</span>np.sin(heading)</span><span id="cb5-22"><a href="#cb5-22" aria-hidden="true" tabindex="-1"></a>            J_A04 <span class="op">=</span> <span class="dv">0</span></span><span id="cb5-23"><a href="#cb5-23" aria-hidden="true" tabindex="-1"></a>            J_A12 <span class="op">=</span> dt<span class="op">*</span>np.sin(heading)</span><span id="cb5-24"><a href="#cb5-24" aria-hidden="true" tabindex="-1"></a>            J_A13 <span class="op">=</span> dt<span class="op">**</span>np.cos(heading)</span><span id="cb5-25"><a href="#cb5-25" aria-hidden="true" tabindex="-1"></a>            J_A14 <span class="op">=</span> <span class="dv">0</span></span><span id="cb5-26"><a href="#cb5-26" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-27"><a href="#cb5-27" aria-hidden="true" tabindex="-1"></a>            <span class="va">self</span>.J_A <span class="op">=</span> np.array([[<span class="dv">1</span>, <span class="dv">0</span>, J_A02, J_A03, J_A04],</span><span id="cb5-28"><a href="#cb5-28" aria-hidden="true" tabindex="-1"></a>                                [<span class="dv">0</span>, <span class="dv">1</span>, J_A12, J_A13, J_A14],</span><span id="cb5-29"><a href="#cb5-29" aria-hidden="true" tabindex="-1"></a>                                [<span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">1</span>, <span class="dv">0</span>, <span class="dv">0</span>],</span><span id="cb5-30"><a href="#cb5-30" aria-hidden="true" tabindex="-1"></a>                                [<span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">1</span>, dt],</span><span id="cb5-31"><a href="#cb5-31" aria-hidden="true" tabindex="-1"></a>                                [<span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">1</span>],</span><span id="cb5-32"><a href="#cb5-32" aria-hidden="true" tabindex="-1"></a>                                ])</span><span id="cb5-33"><a href="#cb5-33" aria-hidden="true" tabindex="-1"></a>                </span><span id="cb5-34"><a href="#cb5-34" aria-hidden="true" tabindex="-1"></a>            </span><span id="cb5-35"><a href="#cb5-35" aria-hidden="true" tabindex="-1"></a>        <span class="cf">else</span>:</span><span id="cb5-36"><a href="#cb5-36" aria-hidden="true" tabindex="-1"></a>            one_divide_heading_rate <span class="op">=</span> <span class="dv">1</span> <span class="op">/</span> <span class="va">self</span>.x[<span class="dv">4</span>]</span><span id="cb5-37"><a href="#cb5-37" aria-hidden="true" tabindex="-1"></a>            heading_rate <span class="op">=</span> <span class="va">self</span>.x[<span class="dv">4</span>]</span><span id="cb5-38"><a href="#cb5-38" aria-hidden="true" tabindex="-1"></a>            v <span class="op">=</span> <span class="va">self</span>.x[<span class="dv">2</span>]</span><span id="cb5-39"><a href="#cb5-39" aria-hidden="true" tabindex="-1"></a>            heading <span class="op">=</span> <span class="va">self</span>.control_psi(<span class="va">self</span>.x[<span class="dv">3</span>])</span><span id="cb5-40"><a href="#cb5-40" aria-hidden="true" tabindex="-1"></a>            xk_ <span class="op">=</span> np.array([v <span class="op">*</span> one_divide_heading_rate <span class="op">*</span> math.sin(heading_rate <span class="op">*</span> dt<span class="op">+</span>heading) <span class="op">-</span> v <span class="op">*</span> one_divide_heading_rate <span class="op">*</span> math.sin(heading) <span class="op">+</span> <span class="va">self</span>.x[<span class="dv">0</span>],</span><span id="cb5-41"><a href="#cb5-41" aria-hidden="true" tabindex="-1"></a>                            <span class="op">-</span>v <span class="op">*</span> one_divide_heading_rate <span class="op">*</span> math.cos(heading_rate <span class="op">*</span> dt<span class="op">+</span>heading) <span class="op">+</span> v <span class="op">*</span> one_divide_heading_rate <span class="op">*</span> math.cos(heading) <span class="op">+</span> <span class="va">self</span>.x[<span class="dv">1</span>],</span><span id="cb5-42"><a href="#cb5-42" aria-hidden="true" tabindex="-1"></a>                            v,</span><span id="cb5-43"><a href="#cb5-43" aria-hidden="true" tabindex="-1"></a>                            <span class="va">self</span>.control_psi(heading_rate <span class="op">*</span> dt <span class="op">+</span> heading),</span><span id="cb5-44"><a href="#cb5-44" aria-hidden="true" tabindex="-1"></a>                            heading_rate])</span><span id="cb5-45"><a href="#cb5-45" aria-hidden="true" tabindex="-1"></a>            <span class="va">self</span>.G <span class="op">=</span> xk_</span><span id="cb5-46"><a href="#cb5-46" aria-hidden="true" tabindex="-1"></a>            <span class="co">#############更新##################</span></span><span id="cb5-47"><a href="#cb5-47" aria-hidden="true" tabindex="-1"></a>            v <span class="op">=</span> xk_[<span class="dv">2</span>]</span><span id="cb5-48"><a href="#cb5-48" aria-hidden="true" tabindex="-1"></a>            heading <span class="op">=</span> xk_[<span class="dv">3</span>]</span><span id="cb5-49"><a href="#cb5-49" aria-hidden="true" tabindex="-1"></a>            heading_rate <span class="op">=</span> xk_[<span class="dv">4</span>]</span><span id="cb5-50"><a href="#cb5-50" aria-hidden="true" tabindex="-1"></a>            J_A02 <span class="op">=</span> <span class="dv">1</span> <span class="op">/</span> heading_rate <span class="op">*</span> (np.sin(dt <span class="op">*</span> heading_rate <span class="op">+</span> heading) <span class="op">-</span> np.sin(heading))</span><span id="cb5-51"><a href="#cb5-51" aria-hidden="true" tabindex="-1"></a>            J_A03 <span class="op">=</span> v <span class="op">/</span> heading_rate <span class="op">*</span> (np.cos(dt <span class="op">*</span> heading_rate <span class="op">+</span> heading) <span class="op">-</span> np.cos(heading))</span><span id="cb5-52"><a href="#cb5-52" aria-hidden="true" tabindex="-1"></a>            J_A04 <span class="op">=</span> (dt <span class="op">*</span> v <span class="op">/</span> heading_rate) <span class="op">*</span> np.sin(dt <span class="op">*</span> heading_rate <span class="op">+</span> heading) <span class="op">-</span>(v <span class="op">/</span>(heading_rate <span class="op">**</span> <span class="dv">2</span>)) <span class="op">*</span> (</span><span id="cb5-53"><a href="#cb5-53" aria-hidden="true" tabindex="-1"></a>                        np.cos(dt <span class="op">*</span> heading_rate <span class="op">+</span> heading) <span class="op">-</span> np.cos(heading))</span><span id="cb5-54"><a href="#cb5-54" aria-hidden="true" tabindex="-1"></a>            J_A12 <span class="op">=</span> <span class="dv">1</span> <span class="op">/</span> heading_rate <span class="op">*</span> (np.cos(heading) <span class="op">-</span> np.cos(dt <span class="op">*</span> heading_rate <span class="op">+</span> heading))</span><span id="cb5-55"><a href="#cb5-55" aria-hidden="true" tabindex="-1"></a>            J_A13 <span class="op">=</span> v <span class="op">/</span> heading_rate <span class="op">*</span> (np.sin(dt <span class="op">*</span> heading_rate <span class="op">+</span> heading) <span class="op">-</span> np.sin(heading))</span><span id="cb5-56"><a href="#cb5-56" aria-hidden="true" tabindex="-1"></a>            J_A14 <span class="op">=</span> (dt <span class="op">*</span> v <span class="op">/</span> heading_rate )<span class="op">*</span> np.cos(dt <span class="op">*</span> heading_rate <span class="op">+</span> heading) <span class="op">-</span> (v<span class="op">/</span>(heading_rate <span class="op">**</span> <span class="dv">2</span>)) <span class="op">*</span> (</span><span id="cb5-57"><a href="#cb5-57" aria-hidden="true" tabindex="-1"></a>                        np.sin(heading) <span class="op">-</span> np.sin(dt <span class="op">*</span> heading_rate <span class="op">+</span> heading))</span><span id="cb5-58"><a href="#cb5-58" aria-hidden="true" tabindex="-1"></a>            <span class="va">self</span>.J_A <span class="op">=</span> np.array([[<span class="dv">1</span>, <span class="dv">0</span>, J_A02, J_A03, J_A04],</span><span id="cb5-59"><a href="#cb5-59" aria-hidden="true" tabindex="-1"></a>                                [<span class="dv">0</span>, <span class="dv">1</span>, J_A12, J_A13, J_A14],</span><span id="cb5-60"><a href="#cb5-60" aria-hidden="true" tabindex="-1"></a>                                [<span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">1</span> , <span class="dv">0</span>, <span class="dv">0</span>],</span><span id="cb5-61"><a href="#cb5-61" aria-hidden="true" tabindex="-1"></a>                                [<span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">1</span>, dt],</span><span id="cb5-62"><a href="#cb5-62" aria-hidden="true" tabindex="-1"></a>                                [<span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">0</span>, <span class="dv">1</span>],</span><span id="cb5-63"><a href="#cb5-63" aria-hidden="true" tabindex="-1"></a>                                ])</span><span id="cb5-64"><a href="#cb5-64" aria-hidden="true" tabindex="-1"></a>        Q_v <span class="op">=</span> np.diag([<span class="va">self</span>.std_noise_a <span class="op">*</span> <span class="va">self</span>.std_noise_a, <span class="va">self</span>.std_noise_yaw_dd <span class="op">*</span> <span class="va">self</span>.std_noise_yaw_dd])</span><span id="cb5-65"><a href="#cb5-65" aria-hidden="true" tabindex="-1"></a>        temp<span class="op">=</span>np.zeros([<span class="dv">5</span>,<span class="dv">2</span>])</span><span id="cb5-66"><a href="#cb5-66" aria-hidden="true" tabindex="-1"></a>        temp[<span class="dv">0</span>, <span class="dv">0</span>] <span class="op">=</span> <span class="fl">0.5</span> <span class="op">*</span> dt <span class="op">*</span> dt <span class="op">*</span> np.cos(heading)</span><span id="cb5-67"><a href="#cb5-67" aria-hidden="true" tabindex="-1"></a>        temp[<span class="dv">1</span>, <span class="dv">0</span>] <span class="op">=</span> <span class="fl">0.5</span> <span class="op">*</span> dt <span class="op">*</span> dt <span class="op">*</span> np.sin(heading)</span><span id="cb5-68"><a href="#cb5-68" aria-hidden="true" tabindex="-1"></a>        temp[<span class="dv">2</span>, <span class="dv">0</span>] <span class="op">=</span> dt</span><span id="cb5-69"><a href="#cb5-69" aria-hidden="true" tabindex="-1"></a>        temp[<span class="dv">3</span>, <span class="dv">1</span>] <span class="op">=</span> <span class="fl">0.5</span> <span class="op">*</span> dt <span class="op">*</span> dt</span><span id="cb5-70"><a href="#cb5-70" aria-hidden="true" tabindex="-1"></a>        temp[<span class="dv">4</span>, <span class="dv">1</span>] <span class="op">=</span> dt</span><span id="cb5-71"><a href="#cb5-71" aria-hidden="true" tabindex="-1"></a>        <span class="co">############## 更新Q ########################</span></span><span id="cb5-72"><a href="#cb5-72" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.Q <span class="op">=</span> np.dot(np.dot(temp, Q_v), temp.T)</span><span id="cb5-73"><a href="#cb5-73" aria-hidden="true" tabindex="-1"></a>    </span><span id="cb5-74"><a href="#cb5-74" aria-hidden="true" tabindex="-1"></a>        b1<span class="op">=</span>np.dot(<span class="va">self</span>.J_A,<span class="va">self</span>.P)</span><span id="cb5-75"><a href="#cb5-75" aria-hidden="true" tabindex="-1"></a>        b2<span class="op">=</span>np.dot(b1,np.transpose(<span class="va">self</span>.J_A))</span><span id="cb5-76"><a href="#cb5-76" aria-hidden="true" tabindex="-1"></a>        pk_<span class="op">=</span>np.array(b2)<span class="op">+</span>np.array(<span class="va">self</span>.Q)</span><span id="cb5-77"><a href="#cb5-77" aria-hidden="true" tabindex="-1"></a>        <span class="co">############################################更新部分</span></span><span id="cb5-78"><a href="#cb5-78" aria-hidden="true" tabindex="-1"></a>        <span class="co"># Kk = Pk_*J_Hk'/(J_Hk*Pk_*Hk'+R)</span></span><span id="cb5-79"><a href="#cb5-79" aria-hidden="true" tabindex="-1"></a>        c1 <span class="op">=</span> np.dot(pk_, np.transpose(<span class="va">self</span>.H))</span><span id="cb5-80"><a href="#cb5-80" aria-hidden="true" tabindex="-1"></a>        c2 <span class="op">=</span> np.dot(<span class="va">self</span>.H, pk_)</span><span id="cb5-81"><a href="#cb5-81" aria-hidden="true" tabindex="-1"></a>        c3 <span class="op">=</span> np.dot(c2, np.transpose(<span class="va">self</span>.H))</span><span id="cb5-82"><a href="#cb5-82" aria-hidden="true" tabindex="-1"></a>        c4 <span class="op">=</span> np.array(c3) <span class="op">+</span> np.array(<span class="va">self</span>.R)</span><span id="cb5-83"><a href="#cb5-83" aria-hidden="true" tabindex="-1"></a>        c5 <span class="op">=</span> np.linalg.matrix_power(c4, <span class="op">-</span><span class="dv">1</span>)</span><span id="cb5-84"><a href="#cb5-84" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.K <span class="op">=</span> np.dot(c1, c5)</span><span id="cb5-85"><a href="#cb5-85" aria-hidden="true" tabindex="-1"></a></span><span id="cb5-86"><a href="#cb5-86" aria-hidden="true" tabindex="-1"></a>        <span class="co"># Xk = Xk_+Kk(Zk-Hk*Xk_)</span></span><span id="cb5-87"><a href="#cb5-87" aria-hidden="true" tabindex="-1"></a>        d1 <span class="op">=</span> np.dot(<span class="va">self</span>.H, xk_)</span><span id="cb5-88"><a href="#cb5-88" aria-hidden="true" tabindex="-1"></a>        d2 <span class="op">=</span> np.array(<span class="va">self</span>.z) <span class="op">-</span> np.array(d1)</span><span id="cb5-89"><a href="#cb5-89" aria-hidden="true" tabindex="-1"></a>        d3 <span class="op">=</span> np.dot(<span class="va">self</span>.K, d2)</span><span id="cb5-90"><a href="#cb5-90" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.x <span class="op">=</span> np.array(xk_) <span class="op">+</span> np.array(d3)</span><span id="cb5-91"><a href="#cb5-91" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.x[<span class="dv">3</span>]<span class="op">=</span> <span class="va">self</span>.control_psi(<span class="va">self</span>.x[<span class="dv">3</span>])</span><span id="cb5-92"><a href="#cb5-92" aria-hidden="true" tabindex="-1"></a>        </span><span id="cb5-93"><a href="#cb5-93" aria-hidden="true" tabindex="-1"></a>        <span class="co"># Pk = Pk_-Kk*J_Hk*Pk_</span></span><span id="cb5-94"><a href="#cb5-94" aria-hidden="true" tabindex="-1"></a>        e1 <span class="op">=</span> np.dot(<span class="va">self</span>.K, <span class="va">self</span>.H)</span><span id="cb5-95"><a href="#cb5-95" aria-hidden="true" tabindex="-1"></a>        e2 <span class="op">=</span> np.dot(e1, pk_)</span><span id="cb5-96"><a href="#cb5-96" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.P <span class="op">=</span> np.array(pk_) <span class="op">-</span> np.array(e2)</span><span id="cb5-97"><a href="#cb5-97" aria-hidden="true" tabindex="-1"></a>        <span class="co">#print(self.R)</span></span></code></pre></div><ul><li><p><span class="math display">\[   航向角小于0.0001时，xk\_ = \left[   \matrix{     v*\Delta t*cos(航向)+x[0]\\     v*\Delta t*sin(航向)+x[1]\\     v\\     航向 \\     0.0001 \\   }    \hspace{1cm}\right]   \]</span></p></li><li><p><span class="math display">\[   J\_A = \left[   \matrix{     1 &amp; 0 &amp; \Delta t*cos(航向) &amp; -\Delta t*v*sin(航向)&amp; 0\\     0 &amp; 1 &amp; \Delta t*sin(航向) &amp; \Delta t*v*cos(航向) &amp;0\\     0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\     0 &amp; 0 &amp; 0 &amp; 1 &amp; \Delta t\\     0 &amp; 0 &amp; 0 &amp; 0 &amp; 1   }   \right]   \]</span></p></li></ul><p>​</p><p><strong>航向角大于等于0.0001时，</strong></p><ul><li><p><span class="math display">\[\small xk\_ = \left[\matrix{  v/航向角速度*sin(航向角速度*\Delta t+航向)-v *sin(航向)/航向角速度 +x[0]\\  -v/航向角速度 * cos(航向角速度 * \Delta t+航向) + v /航向角速度 *cos(航向) + x[1]\\  v\\  control\_psi(航向角速度*\Delta t+航向角)\\  航向角速度}\hspace{3cm}\right]\]</span></p></li><li><p><code>txt           J_A02 = 1 / 航向角速度 * (sin(dt * 航向角速度 + 航向) - sin(航向))           J_A03 = v / 航向角速度 * (cos(dt * 航向角速度 + 航向) - cos(航向))           J_A04 = (dt * v / 航向角速度) * sin(dt * 航向角速度 + 航向) -(v /(航向角速度 ** 2)) * (cos(dt * 航向角速度 + 航向) - cos(航向))           J_A12 = 1 / 航向角速度 * (cos(航向) - cos(dt * 航向角速度 + 航向))           J_A13 = v / 航向角速度 * (sin(dt * 航向角速度 + 航向) - sin(航向))           J_A14 = (dt * v / 航向角速度 )* cos(dt * 航向角速度 + 航向) - (v/(航向角速度 ** 2)) * (sin(航向) - sin(dt * 航向角速度 + 航向))</code></p></li><li><p><span class="math display">\[J\_A = \left[\matrix{  1 &amp; 0 &amp; J\_A02 &amp; J\_A03 &amp; J\_A04\\  0 &amp; 1 &amp; J\_A12 &amp; J\_A13 &amp; J\_A14\\  0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 1 &amp; \Delta t\\  0 &amp; 0 &amp; 0 &amp; 0 &amp; 1}\right]\]</span></p></li><li><p><span class="math display">\[b_1 = J\_A*P\\b_2 = b_1*J\_A^{T}\\pk\_ = b_2+Q\]</span></p></li><li><p><span class="math display">\[c_1 = pk\_*H^T\\c_2 = H*pk\_\\c_3 = c_2*H^T\\c_4 = c_3+R\\c_5 = c_4^{-1}\\K = c_1*c_5\]</span></p></li><li><p><span class="math display">\[d_1 = H*xk\_\\d_2 = z-d_1\\d_3 = K*d_2\\x = xk\_+d_3\\航向 = control\_psi(航向)\\\]</span></p></li><li><p><span class="math display">\[e_1 = K*H\\e_2 = e_1*pk\_\\P = pk\_-e_2\]</span></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 卡尔曼滤波系列算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 参数准备 </tag>
            
            <tag> 参数初始化 </tag>
            
            <tag> 函数定义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>封装</title>
      <link href="/2023/02/09/%E9%BB%91%E9%A9%ACcpp%E7%AC%94%E8%AE%B0/%E5%B0%81%E8%A3%85/"/>
      <url>/2023/02/09/%E9%BB%91%E9%A9%ACcpp%E7%AC%94%E8%AE%B0/%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="一.-封装的意义">一. 封装的意义</h2><h3 id="将属性和行为作为一个整体表现生活中的事物">1.将属性和行为作为一个整体，表现生活中的事物</h3><h3 id="将属性和行为加以权限控制">2. 将属性和行为加以权限控制</h3><ul><li>语法：class 类名（访问权限：属性/行为）；</li><li>属性使用变量，行为使用函数</li></ul><h3 id="属性和行为放在不同的权限中加以控制">3.属性和行为放在不同的权限中，加以控制</h3><p>访问权限有三种：public、protected、private</p><ol type="1"><li><p>public：类内外均可访问</p></li><li><p>protected: 类内可以访问，类外不可以访问儿子可以访问父亲的保护内容</p></li><li><p>private：类内可以访问，类外不可以访问儿子不可以访问父亲的私有内容</p></li></ol><h2 id="二.-class和struct的区别">二. class和struct的区别</h2><ol type="1"><li>struct默认权限为公共</li><li>class默认权限是私有</li></ol><h2 id="三.-成员属性设置为私有">三. 成员属性设置为私有</h2><ol type="1"><li>优点1：将所有成员属性设置为私有，可以控制读写权限</li><li>优点2：对于写权限，我们可以检测数据的有效性</li><li>类内给出设置和输出成员变量的函数，主函数可以通过设置函数和输出函数读写成员变量。如下代码：</li></ol><div class="sourceCode" id="cb1"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> Person</span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span><span class="op">:</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>    <span class="dt">void</span> setName<span class="op">(</span>string name<span class="op">)</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>        <span class="va">m_Age</span> <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        <span class="va">m_Name</span> <span class="op">=</span> name<span class="op">;</span></span><span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>    string getName<span class="op">()</span></span><span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="va">m_Name</span><span class="op">;</span></span><span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> getAge<span class="op">()</span></span><span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="va">m_Age</span><span class="op">;</span></span><span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>    <span class="dt">void</span> setAge<span class="op">(</span><span class="dt">int</span> age<span class="op">)</span></span><span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(</span>age<span class="op">&lt;</span><span class="dv">0</span><span class="op">||</span>age<span class="op">&gt;</span><span class="dv">150</span><span class="op">)</span></span><span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>        <span class="op">{</span></span><span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>            <span class="va">m_Age</span> <span class="op">=</span> <span class="dv">0</span><span class="op">;</span></span><span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>            cout<span class="op">&lt;&lt;</span><span class="st">"你这个老妖精!"</span><span class="op">&lt;&lt;</span>endl<span class="op">;</span></span><span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span><span class="op">;</span></span><span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>        <span class="va">m_Age</span> <span class="op">=</span> age<span class="op">;</span></span><span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>    <span class="dt">void</span> setLover<span class="op">(</span>string lover<span class="op">)</span></span><span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>        <span class="va">m_Lover</span> <span class="op">=</span> lover<span class="op">;</span></span><span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a><span class="kw">private</span><span class="op">:</span></span><span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a>    string <span class="va">m_Name</span><span class="op">;</span></span><span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> <span class="va">m_Age</span><span class="op">;</span></span><span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>    string <span class="va">m_Lover</span><span class="op">;</span></span><span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a></span><span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a><span class="op">};</span></span></code></pre></div><h2 id="四.-案例--设计立方体类">四. 案例--设计立方体类</h2><ul><li>求出立方体的面积和体积</li><li>分别用全局函数和成员函数判断两个立方体是否相等</li></ul><figure><img src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/image-20230209202331391.png" alt="image-20230209202331391"><figcaption aria-hidden="true">image-20230209202331391</figcaption></figure><ul><li>全局函数判断是否相等：</li></ul><div class="sourceCode" id="cb2"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="dt">bool</span> isame<span class="op">(</span>Cube <span class="op">&amp;</span>c1<span class="op">,</span> Cube <span class="op">&amp;</span>c2<span class="op">)</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span><span class="op">(</span>c1<span class="op">.</span>getL<span class="op">()</span> <span class="op">==</span> c2<span class="op">.</span>getL<span class="op">()</span> <span class="op">&amp;&amp;</span> <span class="op">(</span>c1<span class="op">.</span>getW<span class="op">()</span> <span class="op">==</span> c2<span class="op">.</span>getW<span class="op">()</span> <span class="op">&amp;&amp;</span> <span class="op">(</span>c1<span class="op">.</span>getH<span class="op">()</span> <span class="op">==</span> c2<span class="op">.</span>getH<span class="op">))</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>       <span class="cf">return</span> <span class="kw">false</span><span class="op">;</span></span><span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><ul><li>成员函数判断是否相等：</li></ul><div class="sourceCode" id="cb3"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> Cube</span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="op">{</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span><span class="op">:</span></span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> <span class="va">m_L</span><span class="op">;</span></span><span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> <span class="va">m_W</span><span class="op">;</span></span><span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> <span class="va">m_H</span><span class="op">;</span></span><span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> getL<span class="op">()</span></span><span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="va">m_L</span><span class="op">;</span></span><span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> getW<span class="op">()</span></span><span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="va">m_W</span><span class="op">;</span></span><span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> getH<span class="op">()</span></span><span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="va">m_H</span><span class="op">;</span></span><span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb3-19"><a href="#cb3-19" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> setL<span class="op">(</span><span class="dt">int</span> l<span class="op">)</span></span><span id="cb3-20"><a href="#cb3-20" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb3-21"><a href="#cb3-21" aria-hidden="true" tabindex="-1"></a>        <span class="va">m_L</span> <span class="op">=</span> l<span class="op">;</span></span><span id="cb3-22"><a href="#cb3-22" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb3-23"><a href="#cb3-23" aria-hidden="true" tabindex="-1"></a>     <span class="dt">int</span> setW<span class="op">(</span><span class="dt">int</span> w<span class="op">)</span></span><span id="cb3-24"><a href="#cb3-24" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb3-25"><a href="#cb3-25" aria-hidden="true" tabindex="-1"></a>        <span class="va">m_W</span> <span class="op">=</span> w<span class="op">;</span></span><span id="cb3-26"><a href="#cb3-26" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span>   </span><span id="cb3-27"><a href="#cb3-27" aria-hidden="true" tabindex="-1"></a>     <span class="dt">int</span> setH<span class="op">(</span><span class="dt">int</span> h<span class="op">)</span></span><span id="cb3-28"><a href="#cb3-28" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb3-29"><a href="#cb3-29" aria-hidden="true" tabindex="-1"></a>        <span class="va">m_H</span> <span class="op">=</span> h<span class="op">;</span></span><span id="cb3-30"><a href="#cb3-30" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span>   </span><span id="cb3-31"><a href="#cb3-31" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> size<span class="op">()</span></span><span id="cb3-32"><a href="#cb3-32" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb3-33"><a href="#cb3-33" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="dv">2</span><span class="op">*</span><span class="va">m_L</span><span class="op">*</span><span class="va">m_W</span><span class="op">+</span><span class="dv">2</span><span class="op">*</span><span class="va">m_L</span><span class="op">*</span><span class="va">m_H</span><span class="op">+</span><span class="dv">2</span><span class="op">*</span><span class="va">m_W</span><span class="op">*</span><span class="va">m_H</span><span class="op">;</span></span><span id="cb3-34"><a href="#cb3-34" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb3-35"><a href="#cb3-35" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> volume<span class="op">()</span></span><span id="cb3-36"><a href="#cb3-36" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb3-37"><a href="#cb3-37" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="va">m_W</span><span class="op">*</span><span class="va">m_H</span><span class="op">*</span><span class="va">m_L</span><span class="op">;</span></span><span id="cb3-38"><a href="#cb3-38" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb3-39"><a href="#cb3-39" aria-hidden="true" tabindex="-1"></a>    <span class="dt">bool</span> isame<span class="op">(</span>Cube <span class="op">&amp;</span>c<span class="op">)</span></span><span id="cb3-40"><a href="#cb3-40" aria-hidden="true" tabindex="-1"></a>    <span class="op">{</span></span><span id="cb3-41"><a href="#cb3-41" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span><span class="op">(</span><span class="va">m_L</span> <span class="op">==</span> c<span class="op">.</span>getL<span class="op">()</span> <span class="op">&amp;&amp;</span> <span class="va">m_W</span> <span class="op">==</span> c<span class="op">.</span>getW<span class="op">()</span> <span class="op">&amp;&amp;</span> <span class="va">m_H</span> <span class="op">==</span> c<span class="op">.</span>getH<span class="op">())</span></span><span id="cb3-42"><a href="#cb3-42" aria-hidden="true" tabindex="-1"></a>        <span class="op">{</span></span><span id="cb3-43"><a href="#cb3-43" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb3-44"><a href="#cb3-44" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb3-45"><a href="#cb3-45" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">false</span><span class="op">;</span></span><span id="cb3-46"><a href="#cb3-46" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb3-47"><a href="#cb3-47" aria-hidden="true" tabindex="-1"></a><span class="op">};</span></span></code></pre></div><h2 id="五.-案例--点和圆的关系">五. 案例--点和圆的关系</h2><ul><li>根据点与圆心距离与半径比较，判断点和圆的关系</li><li>略。</li><li><strong>类中可以允许存在类成员变量和函数</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 黑马c++学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 封装的意义 </tag>
            
            <tag> class和struct的区别 </tag>
            
            <tag> 成员属性设置为私有 </tag>
            
            <tag> 案例-设计立方体类 </tag>
            
            <tag> 案例-点和圆的关系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水下威胁评估</title>
      <link href="/2023/02/09/710%E9%A1%B9%E7%9B%AE/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0%E6%80%BB%E7%BB%93/"/>
      <url>/2023/02/09/710%E9%A1%B9%E7%9B%AE/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="一主要任务">一、主要任务</h1><p>根据状态估计获得的目标的位置和运动状态信息，对水下运动目标（移动声靶、蛙人）进行威胁评估，给出目标对AUV的威胁程度。</p><h1 id="二威胁评估指标选择">二、威胁评估指标选择</h1><p>距离（AUV与目标）、碰撞风险、航向差、速度差、AUV数量（同类目标数量）</p><h1 id="三主要方法">三、主要方法</h1><p><strong>基于结构熵的威胁要素权重评估、基于层次分析法威胁评估预测</strong></p><h2 id="数据准备">3.1 数据准备</h2><p>给出某一时刻探测到目标信息：距离（AUV与目标）、碰撞风险、航向差、速度差、AUV数量</p><h2 id="基于结构熵的威胁要素权重评估">3.2基于结构熵的威胁要素权重评估</h2><p>设定6个专家，每个专家对5个指标的重要性进行排序</p><table><thead><tr class="header"><th></th><th>专家1</th><th>专家2</th><th>专家3</th><th>专家4</th><th>专家5</th><th>专家6</th></tr></thead><tbody><tr class="odd"><td>距离（AUV与目标）</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td></tr><tr class="even"><td>碰撞风险</td><td>2</td><td>1</td><td>4</td><td>3</td><td>6</td><td>5</td></tr><tr class="odd"><td>航向差</td><td>2</td><td>3</td><td>1</td><td>4</td><td>6</td><td>5</td></tr><tr class="even"><td>速度差</td><td>3</td><td>2</td><td>1</td><td>4</td><td>5</td><td>6</td></tr><tr class="odd"><td>AUV数量</td><td>6</td><td>4</td><td>2</td><td>1</td><td>3</td><td>5</td></tr></tbody></table><p>给定认识度权重 ： imp_weight = [0.3,0.23,0.17,0.1,0.1,0.1]</p><h3 id="计算隶属度矩阵d">3.2.1 计算隶属度矩阵D</h3><div class="sourceCode" id="cb1"><pre class="sourceCode matlab"><code class="sourceCode matlab"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>    <span class="kw">for</span> <span class="va">kk</span> <span class="op">=</span> <span class="fl">1</span><span class="op">:</span><span class="fl">6</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>        <span class="kw">for</span> <span class="va">jj</span> <span class="op">=</span> <span class="fl">1</span><span class="op">:</span><span class="fl">5</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>            <span class="va">F</span>(<span class="va">kk</span><span class="op">,</span><span class="va">jj</span>) <span class="op">=</span> <span class="op">-</span>((<span class="va">m</span><span class="op">-</span><span class="va">imp_sort</span>(<span class="va">kk</span><span class="op">,</span><span class="va">jj</span>))<span class="op">*</span>(<span class="va">log</span>(<span class="va">m</span><span class="op">-</span><span class="va">imp_sort</span>(<span class="va">kk</span><span class="op">,</span><span class="va">jj</span>))))<span class="op">/</span>((<span class="va">m</span><span class="op">-</span><span class="fl">1</span>)<span class="op">*</span>(<span class="va">log</span>(<span class="va">m</span><span class="op">-</span><span class="fl">1</span>)))<span class="op">+</span>(<span class="va">m</span><span class="op">-</span><span class="va">imp_sort</span>(<span class="va">kk</span><span class="op">,</span><span class="va">jj</span>))<span class="op">/</span>(<span class="va">m</span><span class="op">-</span><span class="fl">1</span>)<span class="op">;</span></span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>            <span class="va">D</span>(<span class="va">kk</span><span class="op">,</span><span class="va">jj</span>) <span class="op">=</span> (<span class="fl">1</span><span class="op">-</span><span class="va">F</span>(<span class="va">kk</span><span class="op">,</span><span class="va">jj</span>))<span class="op">/</span>(<span class="va">m</span><span class="op">-</span><span class="va">imp_sort</span>(<span class="va">kk</span><span class="op">,</span><span class="va">jj</span>))<span class="op">*</span>(<span class="va">m</span><span class="op">-</span><span class="fl">1</span>)<span class="op">;</span></span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>            <span class="co">%M(kk,jj) = log(m-imp_sort(kk,jj))/log(m-1)-1+(m-1)/(m-imp_sort(kk,jj));</span></span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>        <span class="kw">end</span></span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">end</span></span></code></pre></div><h3 id="计算每个指标的平均认识度c">3.2.2 计算每个指标的平均认识度C</h3><div class="sourceCode" id="cb2"><pre class="sourceCode matlab"><code class="sourceCode matlab"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>    <span class="kw">for</span> <span class="va">mm</span> <span class="op">=</span> <span class="fl">1</span><span class="op">:</span><span class="fl">5</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>        <span class="kw">for</span> <span class="va">nn</span> <span class="op">=</span> <span class="fl">1</span><span class="op">:</span><span class="fl">6</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>             <span class="va">C</span>(<span class="va">mm</span>) <span class="op">=</span> <span class="va">C</span>(<span class="va">mm</span>) <span class="op">+</span> <span class="va">D</span>(<span class="va">nn</span><span class="op">,</span><span class="va">mm</span>)<span class="op">*</span><span class="va">imp_weight</span>(<span class="va">nn</span>)<span class="op">;</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>        <span class="kw">end</span></span><span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>    <span class="kw">end</span></span></code></pre></div><h3 id="计算每个指标的认识盲度b和总体认识度a">3.2.3计算每个指标的认识盲度B和总体认识度A</h3><div class="sourceCode" id="cb3"><pre class="sourceCode matlab"><code class="sourceCode matlab"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a>    <span class="kw">for</span> <span class="va">mm</span> <span class="op">=</span> <span class="fl">1</span><span class="op">:</span><span class="fl">5</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>        <span class="kw">for</span> <span class="va">nn</span> <span class="op">=</span> <span class="fl">1</span><span class="op">:</span><span class="fl">6</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>             <span class="va">B</span>(<span class="va">mm</span>) <span class="op">=</span> <span class="va">B</span>(<span class="va">mm</span>) <span class="op">+</span> ((<span class="va">D</span>(<span class="va">nn</span><span class="op">,</span><span class="va">mm</span>)<span class="op">-</span><span class="va">C</span>(<span class="va">mm</span>))<span class="op">^</span><span class="fl">2</span>)<span class="op">*</span><span class="va">imp_weight</span>(<span class="va">nn</span>)<span class="op">;</span></span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a>        <span class="kw">end</span></span><span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a>        <span class="va">B</span>(<span class="va">mm</span>) <span class="op">=</span> <span class="va">sqrt</span>(<span class="va">B</span>(<span class="va">mm</span>))<span class="op">;</span></span><span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a>        <span class="va">A</span>(<span class="va">mm</span>) <span class="op">=</span> <span class="va">C</span>(<span class="va">mm</span>)<span class="op">*</span>(<span class="fl">1</span><span class="op">-</span><span class="va">B</span>(<span class="va">mm</span>))<span class="op">;</span></span><span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>    <span class="kw">end</span></span></code></pre></div><h3 id="对总体认识度a进行归一化得到目标威胁评估指标的权值">3.2.4对总体认识度A进行归一化，得到目标威胁评估指标的权值</h3><div class="sourceCode" id="cb4"><pre class="sourceCode matlab"><code class="sourceCode matlab"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a>    <span class="kw">for</span> <span class="va">mm</span> <span class="op">=</span> <span class="fl">1</span><span class="op">:</span><span class="fl">5</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>        <span class="va">omega</span>(<span class="va">mm</span>) <span class="op">=</span> <span class="va">A</span>(<span class="va">mm</span>)<span class="op">/</span><span class="va">sum</span>(<span class="va">A</span>)<span class="op">;</span></span><span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">end</span></span></code></pre></div><h3 id="结果">3.2.5 结果</h3><p><strong>omega = (0.2039,0.1668,0.2382,0.1523,0.2389)</strong></p><div class="sourceCode" id="cb5"><pre class="sourceCode matlab"><code class="sourceCode matlab"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="co">%使用一个函数实现</span></span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="va">omega</span> <span class="op">=</span> <span class="va">weight_estimation</span>(<span class="va">n</span>)<span class="op">;</span><span class="co">%权重确定</span></span></code></pre></div><h2 id="基于层次分析法威胁评估预测">3.3 基于层次分析法威胁评估预测</h2><h3 id="数据准备-1">3.3.1 数据准备</h3><table><thead><tr class="header"><th>距离（AUV与目标）</th><th>碰撞风险</th><th>航向差</th><th>速度差</th><th>AUV数量（同类数量）</th></tr></thead><tbody><tr class="odd"><td>13</td><td>14.34</td><td>0.924</td><td>0.047</td><td>1</td></tr><tr class="even"><td>12.25</td><td>14.25</td><td>1.1</td><td>0.047</td><td>1</td></tr><tr class="odd"><td>13.04</td><td>15.04</td><td>1.281</td><td>0.047</td><td>1</td></tr><tr class="even"><td>11.05</td><td>13.05</td><td>1.462</td><td>0.049</td><td>1</td></tr><tr class="odd"><td>11.81</td><td>13.81</td><td>1.635</td><td>0.049</td><td>2</td></tr><tr class="even"><td>11.67</td><td>13.67</td><td>1.656</td><td>0.0492</td><td>2</td></tr></tbody></table><h3 id="计算每个指标的判断矩阵">3.3.2 计算每个指标的判断矩阵</h3><div class="sourceCode" id="cb6"><pre class="sourceCode matlab"><code class="sourceCode matlab"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="kw">for</span> <span class="va">t</span> <span class="op">=</span> <span class="fl">1</span><span class="op">:</span><span class="va">n</span></span><span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">for</span> <span class="va">nn</span> <span class="op">=</span> <span class="fl">1</span><span class="op">:</span><span class="va">m</span></span><span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>        <span class="kw">for</span> <span class="va">mm</span> <span class="op">=</span> <span class="fl">1</span><span class="op">:</span><span class="va">m</span></span><span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>            <span class="kw">if</span> <span class="va">t</span> <span class="op">~=</span> <span class="fl">2</span> <span class="op">||</span> <span class="va">t</span> <span class="op">~=</span><span class="va">n</span></span><span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>                <span class="va">matrix</span>{<span class="va">t</span>}(<span class="va">mm</span><span class="op">,</span><span class="va">nn</span>) <span class="op">=</span> <span class="va">new_data</span>(<span class="va">nn</span><span class="op">,</span><span class="va">t</span>)<span class="op">/</span><span class="va">new_data</span>(<span class="va">mm</span><span class="op">,</span><span class="va">t</span>)<span class="op">;</span></span><span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a>            <span class="kw">else</span></span><span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>                <span class="va">matrix</span>{<span class="va">t</span>}(<span class="va">mm</span><span class="op">,</span><span class="va">nn</span>) <span class="op">=</span> <span class="va">new_data</span>(<span class="va">mm</span><span class="op">,</span><span class="va">t</span>)<span class="op">/</span><span class="va">new_data</span>(<span class="va">nn</span><span class="op">,</span><span class="va">t</span>)<span class="op">;</span></span><span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a>            <span class="kw">end</span></span><span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>        <span class="kw">end</span></span><span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>    <span class="kw">end</span></span><span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span></code></pre></div><h3 id="构造特征向量矩阵w">3.3.3 构造特征向量矩阵W</h3><p>根据每个指标的判断矩阵计算这个指标的特征向量矩阵W</p><div class="sourceCode" id="cb7"><pre class="sourceCode matlab"><code class="sourceCode matlab"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="kw">for</span> <span class="va">t</span> <span class="op">=</span> <span class="fl">1</span><span class="op">:</span><span class="va">n</span></span><span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">for</span> <span class="va">mm</span> <span class="op">=</span> <span class="fl">1</span><span class="op">:</span><span class="va">m</span></span><span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>        <span class="va">W</span>(<span class="va">t</span><span class="op">,</span><span class="va">mm</span>) <span class="op">=</span> <span class="fl">1</span><span class="op">/</span><span class="va">sum</span>(<span class="va">matrix</span>{<span class="va">t</span>}(<span class="op">:,</span><span class="va">mm</span>))<span class="op">;</span></span><span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>    <span class="kw">end</span></span><span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span></code></pre></div><ul><li><p>距离（AUV与目标）判断矩阵</p><figure><img src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/%E5%88%A4%E6%96%AD%E7%9F%A9%E9%98%B5.png" alt="判断矩阵"><figcaption aria-hidden="true">判断矩阵</figcaption></figure></li></ul><h3 id="计算威胁评估指标并进行排序">3.3.4计算威胁评估指标并进行排序</h3><p>每个指标的特征向量矩阵W × 每个指标的权值omega</p><div class="sourceCode" id="cb8"><pre class="sourceCode matlab"><code class="sourceCode matlab"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="va">threat_degree</span> <span class="op">=</span> <span class="va">zeros</span>(<span class="fl">1</span><span class="op">,</span><span class="fl">5</span>)<span class="op">;</span></span><span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a><span class="kw">for</span> <span class="va">uu</span> <span class="op">=</span> <span class="fl">1</span><span class="op">:</span><span class="va">m</span></span><span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>    <span class="va">threat_degree</span>(<span class="va">uu</span>) <span class="op">=</span> <span class="va">omega</span>(<span class="op">:,:</span>)<span class="op">*</span><span class="va">W</span>(<span class="op">:,</span><span class="va">uu</span>)<span class="op">;</span></span><span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a><span class="kw">end</span></span></code></pre></div><h3 id="最终结果">3.3.5 最终结果</h3><p>0.1924 ， 0.1843 ， 0.1676 ， 0.1623 ， 0.1487， 0.1447</p><h1 id="四总结">四、总结</h1><p>仿真层面：使用仿真系统获取到的数据，假定某一时刻的距离（AUV与目标）、碰撞风险、航向差、速度差、AUV数量，然后计算获得结果。</p><p>实际：需要AUV进行下海实验，获取真实目标的信息</p><p>验证：</p><ol type="1"><li><p>理解一：将本实验使用的层次分析法和其他方法（比如主成分分析法）进行对比，验证它的优势。</p></li><li><p>理解二：使用真实目标状态信息算出的威胁评估值和使用状态估计出来的目标状态信息进行比较。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> project_710 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习路线</title>
      <link href="/2023/02/06/others/C++%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
      <url>/2023/02/06/others/C++%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<figure><img src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/C%2B%2B%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.png" alt="C++学习路线"><figcaption aria-hidden="true">C++学习路线</figcaption></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>论文写作技巧</title>
      <link href="/2023/02/06/Writing/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/"/>
      <url>/2023/02/06/Writing/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="一学术论文两要素专业的知识科学的表达">一、学术论文两要素：专业的知识、科学的表达</h1><h2 id="专业的知识包括以下特点你写的这篇文章要具备的要素">1.专业的知识包括以下特点（你写的这篇文章要具备的要素）</h2><ul><li><p>新颖性：创新点</p></li><li><p>普适性：提出的方法、理论、发现、实验等不仅适用于单一的情况</p></li><li><p>学术性：从项目中提炼科学问题</p></li></ul><h2 id="科学的表达">2. 科学的表达</h2><ul><li>清晰的表达思路：想好文章的中心思想，为了论证它怎么摆事实、讲道理；（围绕基于xx的一种方法，围绕方法进行验证，实验和结果展示（摆事实），这些结果说明了这个方法好（讲道理））</li><li>良好的文章结构：题目、摘要、前言、问题描述、方法、验证、结论</li><li>公认的科学语言：要用业内的专业术语来表述提出的方法或理论 #二、论文选题 ## 1. 阅读国内外本领域高水平的大学博士论文可以获得第一手全面的背景、方法、逻辑以及进展 ## 2.广泛阅读高水平期刊论文（学会检索文献） 看什么决定想什么，做什么，如何做## 3. 确定论文的方向，确定几个可能的内容</li><li>很难在选题阶段就将要做的内容“算计”很全面</li><li>关键是把握方向，研究过程中不停地修正</li><li>很多论文与选题报告相差甚远 # 三、选题建议 <strong>1.本领域国际学术界研究热点但未能突破的问题</strong>模仿别人，跟风随大流，容易出成果，比较难出高水平成果（跟别人解决一样的问题，使用不同的方法，并且解决得比他好）</li></ul><p><strong>2.基于课题组的学术成果进行拓展延伸（做的好的论文可以进行拓展研究）</strong>可能并非当前热门的领域，但研究扎实，论文水平高 <strong>3.当前工程中尚未解决的难题（项目过程中发现的问题）</strong>需要提炼科学问题，比较难，很有价值 <strong>4.考虑课题组的实验条件、经费及个人兴趣</strong> # 四、如何研究 1.尽快建立自己的信心和兴趣：建立正反馈机制，不断制定小目标然后实现，逐渐找到科研的感觉；2.<strong>要制定严格的计划</strong>：计划完不成可以修正，但没计划可能无限拖延；3.不放过任何灵感：时刻记录下自己的想法，不成熟的可以完善，不可行的再放弃；4.研究的内容可以并行：不要被一个点卡住就止步，先做别的，再回过头来想新的方法。# 五、创新点 <strong>干了别人没干过的事，就是创新</strong> 1.发现别人没发现的现象 2. 提出别人没提出的理论或方法 3.解决了别人没解决的问题 4. 设计了别人没做过的实验 # 六、创新的境界 1.无中生有（最高境界） 2. 标新立异：原始创新，发现新问题，提出新方法；<strong>3.新瓶装旧酒，旧瓶装新酒：提出新方法解决旧问题，发现新问题使用旧方法解决。4. 移花接木：旧问题，旧方法，新的排列组合</strong> 5. 批判式创新指出别人文献中的问题，并对其作出了解释。 #七、基本学术道德和规范必须遵守</p><h1 id="八文献检索">八、文献检索</h1><ul><li>中文检索库：</li><li>中国知网、东北大学学位论文（https://202.118.8.24/）</li><li>外文检索库：IEEE(IEEEXplore)、Elsevier(www.sciencedi)、Springer(https://link.springer.com/)、SAGE(https://journals.sagepub.com/)、</li><li>SCI-Hub论文下载：(https://tool.yovisun.com/)</li><li>检索收录： EI：https://www.engineeringvillage.com/ SCI：web ofscience: https://www.webofscience.com/SCI分区：http://www.letpub.com.cn/index.php?page=journalapp #九、阅读文献的目的</li></ul><ol type="1"><li>研究该领域的背景和进展</li><li>了解研究热点和前沿</li><li>寻找前人研究的不足、缺陷</li><li>学习论文的写作技巧</li><li>学习他人提出的优秀的方法</li></ol><p><strong>步骤：</strong> 1. 找5～10篇中文的博士论文和综述型期刊论文博士论文：主要了解领域的背景、进展、主要研究方法和手段等，<strong>3～7天一篇，英文论文1-2周一篇，重点关注前言和用了哪些方法，具体方法的细节看不懂没关系</strong>2. 研究型论文（顶刊顶会）了解领域内的热点、前沿，学习先进新颖的想法、方法，学习写作技巧，<strong>1周1篇到1天-N篇，复现1-3篇经典高质量论文</strong># 十、研究型论文阅读方法 1. 看题目，研究对象和方法（1） 2.看作者，有没有大牛（10s） 3.看摘要，具体是什么问题，用了什么方法，取得了什么效果(5~10) 4.前言，建模，方法，验证统统过 5. 看原理图，整体框架图（3～5） 6.方法和我们的方向关系密切的话就仔细看，公式推导和细节（20～30） 7.看图，是否表达了需要表达的信息（画得好的可以仿照着画，2～3） 8.看结论，贡献和效果</p><h1 id="十一引用论文的技巧">十一、引用论文的技巧</h1><ol type="1"><li>数量要多（全面），20起步，30合格，40优秀</li><li>质量要高（水准）： 高水平SCI期刊论文：参考文献的主体构成<ul><li>权威会议的论文：不要过多引用，0～5篇</li><li>经典、权威的英文专著：适当引用1～2部</li><li>中文文献和非SCI论文：能少则少</li></ul></li></ol><h1 id="十二写作建议">十二、写作建议</h1><ol type="1"><li>一气呵成</li><li>写作和实践相结合：白天写论文，晚上做实验/调仿真</li><li>制定计划，严格执行，尽快完成初稿</li><li>反复修改（修改10遍）</li></ol><h1 id="十三写作顺序">十三、写作顺序</h1><ol type="1"><li>题目/摘要（初步写一个）</li><li>问题描述/建立模型</li><li>方法和验证分析</li><li>结论</li><li>前言</li><li>摘要（认真修改）：表述前因后果讲清楚、创新点更加详细、贡献更加突出<ul><li>描述对象/问题及其重要性</li><li>说明难点或者未解决的难题</li><li>本论文提出了什么方法</li><li>提出的方法是怎样实现的/解决问题的</li><li>方法取得了什么效果，有什么贡献，有哪些拓展应用，未来还能怎么研究等等</li></ul></li><li>题目（反复推敲）</li></ol><h1 id="十四新手第一篇先抄袭再超越">十四、新手第一篇——先抄袭再超越</h1><ol type="1"><li>找一篇与自己研究内容最类似的高水平论文</li><li>反复阅读（3～5遍）</li><li>学习论文中的表达方式（问题描述、结果分析等）</li><li>对照着写论文（卡壳了就看看别人怎么写的）</li><li>过程中要想清楚自己的论文的优势</li><li>写完反复修改语言</li></ol><ul><li>题目：</li></ul><ol type="1"><li>对象+问题+方法 XXX（Method）of XXX (object) for XXX(problem)</li><li>对象/问题（可以简化）+方法（描述其创新性、独特性）<strong>用这个</strong>XXX（Method）of XXX（object/problem）with/based on/consideringXXX(characteristics)</li><li>对象/问题+方法（描述其创新性和普适性） XXX(Method) ofXXX（object/problem）with/based on/considering XXX(characteristics) +??(设计和实验)</li></ol><h1 id="十五前言">十五、前言</h1><ol type="1"><li>交代研究背景</li><li>说明研究内容的重要性</li><li><strong>目前研究的不足</strong></li><li>提出研究的问题</li><li>简要说明解决方法</li><li>说明为什么用上述方法</li><li><strong>创新点和贡献</strong></li><li>给出文章结构</li></ol><p><strong>内容：</strong> 1. 问题背景 2. 研究进展 3. 问题描述 4.动机和创新点 5. 文章结构（有加有不加）</p><h1 id="十六介绍他人工作">十六、介绍他人工作</h1><p><strong>吹：</strong>正面积极地评价他人工作，使用修饰词，如new、novel、firstly、greatly、effective、important等，篇幅长<strong>黑：委婉</strong>前人研究的不足，引出本文的工作（研究的问题），少用but,用however，不要直接评论他人工作不足，而是说某个问题前面研究没考虑。话不要说死，留后路，asfar as authors/we know</p><h1 id="十七建模和问题描述">十七、建模和问题描述</h1><p><strong>归纳建立一个简洁又不失深度的问题/数学模型</strong> <strong>1.建立模型</strong> 自己提出的模型，要重点描述 引用别人的就简单描述自己的改进的部分，重点描述改进的部分 <strong>2. 归纳问题</strong>科学问题，有学术性，专业的学术语言 # 十八、仿真和实验设计一个有说服力的实验/仿真验证，选择具有代表性的，可以出好看的图片的实验多进行<strong>消融实验</strong>，结果分析充分详尽（可以学习别人的） #十九、结论 <strong>总结一个有学术价值的结论</strong>本文针对XX问题，提出了XX方法，从而解决了其中XX难题，取得了XX效果（有数据最好）。本文的主要贡献在于：1）提出了XX方法，和之前研究相比有什么特点或创新；2）解决了什么问题，克服了哪些困难，取得了什么样的效果3）该方法还能扩展应用到哪些方面。本文工作还有哪些不足，未来工作将从哪几个方面进行。<strong>（要委婉）</strong></p>]]></content>
      
      
      <categories>
          
          <category> 论文写作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Typora使用方法</title>
      <link href="/2023/02/06/others/Typora%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2023/02/06/others/Typora%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="一markdown纯文本基本语法">一、Markdown纯文本基本语法</h1><h2 id="标题">1. 标题</h2><pre><code># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><ul><li>注意事项：#号后面要有空格 ## 2. 字体</li></ul><pre><code>**加粗**__加粗__*倾斜*_倾斜_***加粗倾斜***~~加删除线~~</code></pre><ul><li>注意事项：强调也可以直接插在文字中间，但是如果你的 * 和 _两边都有空白的话，它们就只会被当成普通的符号。如果要在文字前后直接插入普通的星号或底线，你可以用反斜线 &nbsp;。 ## 3.分割线</li></ul><pre><code>* * ****************- - -__________________</code></pre><h2 id="引用">4. 引用</h2><pre><code>&gt; xxxxxxxxx&gt;&gt; xxxxxxxxxx&gt;&gt;&gt; xxxxxxxxxxx........</code></pre><h2 id="列表">5. 列表</h2><h3 id="有序列表">5.1 有序列表</h3><pre><code>- 列表内容+ 列表内容* 列表内容注意：- + * 跟内容之间都要有一个空格</code></pre><h3 id="无序列表">5.2 无序列表</h3><pre><code>1. 列表内容2. 列表内容3. 列表内容注意：序号跟内容之间要有空格</code></pre><h3 id="无序列表嵌套">5.3 无序列表嵌套</h3><pre><code>* 一级无序列表内容   * 二级无序列表内容   * 二级无序列表内容   * 二级无序列表内容</code></pre><h2 id="表格">6. 表格</h2><pre><code>表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略</code></pre><table><thead><tr class="header"><th>表头</th><th style="text-align: center;">表头</th><th style="text-align: right;">表头</th></tr></thead><tbody><tr class="odd"><td>内容</td><td style="text-align: center;">内容</td><td style="text-align: right;">内容</td></tr><tr class="even"><td>内容</td><td style="text-align: center;">内容</td><td style="text-align: right;">内容</td></tr></tbody></table><h2 id="代码">7. 代码</h2><pre><code>\```  代码...  代码...  代码...\```\ 是为了防止转译，实际是没有的。</code></pre><h1 id="二markdown纯文本进阶语法">二、Markdown纯文本进阶语法</h1><h2 id="更改字体大小颜色">1. 更改字体、大小、颜色</h2><pre><code>&lt;font face="黑体"&gt;我是黑体字&lt;/font&gt;&lt;font face="微软雅黑"&gt;我是微软雅黑&lt;/font&gt;&lt;font face="STCAIYUN"&gt;我是华文彩云&lt;/font&gt;&lt;font color=red&gt;我是红色&lt;/font&gt;&lt;font color=#008000&gt;我是绿色&lt;/font&gt;&lt;font color=Blue&gt;我是蓝色&lt;/font&gt;&lt;font size=5&gt;我是尺寸&lt;/font&gt;&lt;font face="黑体" color=green size=5&gt;我是黑体，绿色，尺寸为5&lt;/font&gt;</code></pre><p><font face="黑体">我是黑体字</font><font face="微软雅黑">我是微软雅黑</font><font face="STCAIYUN">我是华文彩云</font><font color="red">我是红色</font> <font color="#008000">我是绿色</font><font color="Blue">我是蓝色</font> <font size="5">我是尺寸</font><font face="黑体" color="green" size="5">我是黑体，绿色，尺寸为5</font> ##2. 为文字添加背景色</p><pre><code>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=yellow&gt;背景色yellow&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</code></pre><table><tbody><tr><td bgcolor="yellow">背景色yellow</td></tr></tbody></table><h2 id="设置文字居中">3. 设置文字居中</h2><pre><code>&lt;center&gt;居中&lt;/center&gt;&lt;p align="left"&gt;左对齐&lt;/p&gt;&lt;p align="right"&gt;右对齐&lt;/p&gt;</code></pre><center>居中</center><p align="left">左对齐</p><p align="right">右对齐</p><h2 id="加入上下标">4. 加入上下标</h2><pre><code>H&lt;sub&gt;2&lt;/sub&gt;O  CO&lt;sub&gt;2&lt;/sub&gt;爆米&lt;sup&gt;TM&lt;/sup&gt;</code></pre><p>H<sub>2</sub>O CO<sub>2</sub> 爆米<sup>TM</sup></p><h1 id="三markdown进阶使用">三、Markdown进阶使用</h1><h2 id="超链接">1. 超链接</h2><h3 id="行内式">1.1 行内式</h3><pre><code>This is [an example](http://example.com/ "Title") inline link.[This link](http://example.net/) has no title attribute.</code></pre><p>This is <span class="exturl" data-url="aHR0cDovL2V4YW1wbGUuY29tLw==">an example</span>inline link.</p><p><span class="exturl" data-url="aHR0cDovL2V4YW1wbGUubmV0Lw==">This link</span> has no titleattribute.</p><ul><li>如果想在新页面中打开的话用html语言的a标签代替</li></ul><pre><code>&lt;a href="www.baidu.com" target="_blank"&gt;超链接名&lt;/a&gt;</code></pre><p><a href="www.baidu.com" target="_blank">超链接名</a></p><h3 id="参考式">1.2 参考式</h3><pre><code>I get 10 times more traffic from [Google] [1] than from[Yahoo] [2] or [MSN] [3].  [1]: http://google.com/        "Google"  [2]: http://search.yahoo.com/  "Yahoo Search"  [3]: http://search.msn.com/    "MSN Search"</code></pre><pre><code>I get 10 times more traffic from [Google][] than from[Yahoo][] or [MSN][].  [google]: http://google.com/        "Google"  [yahoo]:  http://search.yahoo.com/  "Yahoo Search"  [msn]:    http://search.msn.com/    "MSN Search"</code></pre><h2 id="自动链接">2. 自动链接</h2><pre><code>&lt;http://example.com/&gt;</code></pre><p><span class="exturl" data-url="aHR0cDovL2V4YW1wbGUuY29tLw==">http://example.com/</span></p><figure><img src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/p2886693452.jpg" alt="p2886693452"><figcaption aria-hidden="true">p2886693452</figcaption></figure><h2 id="插入并上传图片">3. 插入并上传图片</h2><ol type="1"><li>打开typora和picgo</li><li>正常插入图片</li><li>右击上传图片(github的resposibity里的文件夹) ### 3.1图片位置--居中，左，右</li></ol><pre><code>&lt;div align=center&gt;![Alt pic] (http:...)如果想将图片位于右侧，只需要将center改为right</code></pre><h3 id="设置图片大小">3.2 设置图片大小</h3><pre><code>&lt;img src="http:..." width = "100" height = "100" div align=right /&gt;</code></pre><h2 id="latex公式">4. Latex公式</h2><pre><code>$ X\stackrel{F}{\longrightarrow}Y $</code></pre><p>$ XY $</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>欢迎各位大佬观摩！</title>
      <link href="/2023/02/01/others/hello-world/"/>
      <url>/2023/02/01/others/hello-world/</url>
      
        <content type="html"><![CDATA[<p>​</p><p>没东西！唬人的！</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
