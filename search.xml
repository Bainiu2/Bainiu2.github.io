<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一个简单的c++发布订阅程序</title>
      <link href="/2023/04/03/ros%E5%AD%A6%E4%B9%A0/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84c++%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E7%A8%8B%E5%BA%8F/"/>
      <url>/2023/04/03/ros%E5%AD%A6%E4%B9%A0/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84c++%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<pre><code class="language-c++">#include &lt;ros/ros.h&gt;#include &lt;std_msgs/String.h&gt;void callback(const std_msgs::String::ConstPtr &amp;msg){    ROS_INFO("I heard: %s", msg-&gt;data.c_str());}int main(int argc, char **argv){    ros::init(argc, argv, "example_pub_sub");//初始化一个叫example_pub_sub的节点    ros::NodeHandle nh;//类似于婚介所，两个功能：收集别人的信息（发布），把一个人的信息发给另一个人（发布）    ros::Subscriber sub = nh.subscribe&lt;std_msgs::String&gt;("example_topic", 10, callback);//订阅了一个叫"example_topic"的话题    ros::Publisher pub = nh.advertise&lt;std_msgs::String&gt;("example_topic", 10);//发布了一个叫"example_topic"的话题    ros::Rate loop_rate(10);    int count = 0;    while (ros::ok())    {        std_msgs::String msg;        std::stringstream ss;        ss &lt;&lt; "Hello World " &lt;&lt; count;        msg.data = ss.str();        pub.publish(msg);        ROS_INFO("I sent: %s", msg.data.c_str());        ros::spinOnce();        loop_rate.sleep();        count++;    }    return 0;}</code></pre><ul><li><p>以上代码中，我们创建了一个 ROS 节点，该节点同时包括一个发布者和一个订阅者。订阅者订阅了名为 "example_topic" 的话题，并在接收到消息时调用 callback 函数进行处理；发布者向同一话题发布消息，在 while 循环中不断发送消息并打印发送的消息内容以及收到的消息内容。</p><p>需要注意的是，在执行上述代码之前，你需要先创建一个 ROS 工作区，然后在工作区下创建一个 C++ 程序包，并在程序包下创建一个节点文件夹，将上述代码保存在该节点文件夹中的.cpp 源文件中。并且在工作区的根目录下执行 catkin_make 命令进行编译。</p><p>另外，类似于 callback 函数，ROS 中的回调函数通常需要使用 ROS 消息数据类型的<strong>指针</strong>进行参数传递，以确保在回调函数中可以正确地读取消息内容。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> ros学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>仿真系统中编队控制代码理解</title>
      <link href="/2023/04/03/others/%E4%BB%BF%E7%9C%9F%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%BC%96%E9%98%9F%E6%8E%A7%E5%88%B6%E4%BB%A3%E7%A0%81%E7%90%86%E8%A7%A3/"/>
      <url>/2023/04/03/others/%E4%BB%BF%E7%9C%9F%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%BC%96%E9%98%9F%E6%8E%A7%E5%88%B6%E4%BB%A3%E7%A0%81%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="实现的功能"><a class="anchor" href="#实现的功能">#</a> 实现的功能</h2><ol><li>更新 AUV 的状态和邻居节点的信息</li><li>根据目标位置和当前位置计算速度和航向角，并更新到控制命令中</li><li>计算距离、角度等相关参数，并输出控制结果</li></ol>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>静态抵近</title>
      <link href="/2023/04/02/%E6%8A%B5%E8%BF%91%E7%AD%96%E7%95%A5/%E9%9D%99%E6%80%81%E6%8A%B5%E8%BF%91/"/>
      <url>/2023/04/02/%E6%8A%B5%E8%BF%91%E7%AD%96%E7%95%A5/%E9%9D%99%E6%80%81%E6%8A%B5%E8%BF%91/</url>
      
        <content type="html"><![CDATA[<ol><li>主要任务：目标静止，auv 靠近目标并与目标保持一定距离</li><li>输入：目标的经纬度，速度，航向角，auv 的经纬度，速度，航向角</li><li>输出：auv 的速度和航向（<strong>仅考虑二维平面</strong>）</li><li>思路</li></ol><ul><li>给定期望抵近距离 target_distance</li><li>e_d = (目标与 auv 的欧式距离 - target_distance)</li><li>(1) e_d=0: 稳定不动</li><li>(2) e_d&lt;0: 远离</li><li>(3) e_d&gt;0: 追赶</li><li>速度控制：v = kp*abs (e_d)</li></ul>]]></content>
      
      
      <categories>
          
          <category> 抵近策略 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ros概述与环境搭建</title>
      <link href="/2023/03/27/ros%E5%AD%A6%E4%B9%A0/ros%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/03/27/ros%E5%AD%A6%E4%B9%A0/ros%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="机器人"><a class="anchor" href="#机器人">#</a> 机器人</h2><p>机器人 = 硬件设计 + 嵌入式软件设计（<strong>小脑，stm32 等</strong>）+ 上层软件设计（<strong>大脑，ROS</strong>）+ 机械结构设计 + 机械加工</p><p>核心策略：基于复用的分工协作，<strong>“不重复造轮子”</strong>,ROS 呼之欲出。</p><h2 id="11-ros简介"><a class="anchor" href="#11-ros简介">#</a> 1.1 ROS 简介</h2><ol><li><p>集成了大量的工具，库，协议</p></li><li><p>用于在多台计算机上获取，构建，编写和运行代码的工具和库（<strong>分布式</strong>）</p></li></ol><p><img data-src="ros%E6%A6%82%E8%BF%B0%E4%B8%8E%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.assets/ros%E5%88%86%E5%B8%83%E5%BC%8F%E6%9E%B6%E6%9E%84.png" alt=""></p><ol start="3"><li><strong>ROS = 通信 (核心) + 工具（仿真） + 功能（调参） + 生态</strong></li></ol><h3 id="ros设计目标"><a class="anchor" href="#ros设计目标">#</a> ROS 设计目标</h3><ol><li><p>代码复用</p></li><li><p>分布式：ROS 是 ** 进程（Nodes）** 的分布式框架</p></li><li><p>松耦合：例子：不同厂商的雷达装在一台机器人上进行切换，ros 制定一套输出标准，每个雷达照着标准输出，想用谁的雷达替换即可。</p></li><li><p>精简：设计精简，便于与其他机器人软件框架一起使用。</p></li><li><p>语言独立性：包括 Java,C++,python 等</p></li><li><p>易于测试：有 rostest 的内置单元 / 集成测试框架，可轻松安装和拆卸测试工具</p></li><li><p>大型应用：适用于大型运行时系统和大型开发流程</p></li><li><p>丰富的组件化工具包：如 RVIZ（3D 可视化工具）</p></li><li><p>免费且开源：开发者众多，功能包多</p></li></ol><h3 id="ros官方网站"><a class="anchor" href="#ros官方网站">#</a> ROS 官方网站</h3><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucm9zLm9yZy9hYm91dC1yb3Mv">https://www.ros.org/about-ros/</span></p><p><span class="exturl" data-url="aHR0cDovL3dpa2kucm9zLm9yZy9ST1MvSW50cm9kdWN0aW9u">http://wiki.ros.org/ROS/Introduction</span></p><p><span class="exturl" data-url="aHR0cDovL3dpa2kucm9zLm9yZy9EaXN0cmlidXRpb25z">http://wiki.ros.org/Distributions</span></p><h2 id="12-ros安装"><a class="anchor" href="#12-ros安装">#</a> 1.2 ROS 安装</h2><p>版本：Noetic，ubuntu20.04</p><ol><li>虚拟机安装</li></ol><ul><li>安装虚拟机软件（virtualbox 或 VMware）</li><li>使用虚拟机软件虚拟一台主机</li><li>在虚拟机上安装 ubuntu20.04</li><li>在 ubutu 上安装 ROS（运行命令：wget <span class="exturl" data-url="aHR0cDovL2Zpc2hyb3MuY29tL2luc3RhbGw=">http://fishros.com/install</span> -O fishros &amp;&amp; . fishros）</li><li>测试 ROS 环境是否可以正常运行</li></ul><ol start="2"><li>双系统安装</li></ol><h3 id="安装构建依赖"><a class="anchor" href="#安装构建依赖">#</a> 安装构建依赖</h3><p>一键安装 rosdep：wget <span class="exturl" data-url="aHR0cDovL2Zpc2hyb3MuY29tL2luc3RhbGw=">http://fishros.com/install</span> -O fishros &amp;&amp; . fishros</p><p>##　1.3 helloworld 实现</p><h3 id="实现流程"><a class="anchor" href="#实现流程">#</a> 实现流程</h3><ol><li>创建一个工作空间</li></ol><pre><code>mkdir -p 自定义空间名称/srccd 自定义空间名称catkin_make</code></pre><ol start="2"><li>创建一个功能包</li></ol><pre><code>cd srccatkin_create_pkg 自定义ROS包名 roscpp rospy std_msgs</code></pre><ul><li>注意：虽然实现同一功能时，C<ins> 和 python 可以互换，但是具体选择哪种语言，需要视需求而定，**C</ins> 运行效率高但是编码效率低，而 python 则反之 **</li></ul><ol start="3"><li><p>编译源文件</p></li><li><p>编辑配置文件</p></li><li><p>编译并执行</p></li></ol><h3 id="c实现"><a class="anchor" href="#c实现">#</a> C++ 实现</h3><ol><li>进入功能包的 src 目录下</li></ol><pre><code>cd 自定义的包</code></pre><ol start="2"><li>C++ 源码实现（文件名自定义）</li></ol><pre><code class="language-c++">//1. 包含ros的头文件#include "ros/ros.h"//2. 编写main函数int main(int argc, char *argv[]){    //3.初始化ros节点    ros::init(argc,argv,"hello_node");    //4. 输出日志     ROS_INFO("hello world!");    return 0;}</code></pre><ol start="3"><li>编辑 ros 包下的 Cmakelist.txt 文件（<strong>注意是功能包下的 Cmakelists.txt</strong>）</li></ol><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>add_executable<span class="token punctuation">(</span>haha</pre></td></tr><tr><td data-num="2"></td><td><pre>  src<span class="token operator">/</span>源文件名<span class="token punctuation">.</span>cpp</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">)</span> <span class="token comment">## 将这个目录下的这个 cpp 文件生成名叫 haha 的可执行文件</span></pre></td></tr><tr><td data-num="4"></td><td><pre>target_link_libraries<span class="token punctuation">(</span>haha</pre></td></tr><tr><td data-num="5"></td><td><pre>  $<span class="token punctuation">{</span>catkin_LIBRARIES<span class="token punctuation">}</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><ol start="4"><li>进入工作空间目录并编译</li></ol><pre><code>cd 自定义空间名称catkin_make</code></pre><ol start="5"><li>执行</li></ol><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>roscore</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>cd 工作空间</pre></td></tr><tr><td data-num="4"></td><td><pre>source <span class="token punctuation">.</span><span class="token operator">/</span>devel<span class="token operator">/</span>setup<span class="token punctuation">.</span>bash <span class="token comment">#将工作空间刷新到当前窗口下的环境变量</span></pre></td></tr><tr><td data-num="5"></td><td><pre>rosrun 功能包名 haha</pre></td></tr></tbody></table></figure><p>输出：hello world!</p><ul><li>配置环境变量（执行工程之前最好直接配置好）</li></ul><pre><code>echo "source ~/demo01_ws/devel/setup.bash" &gt;&gt; ~/.bashrcsource ~/.bashrc</code></pre><h3 id="python实现"><a class="anchor" href="#python实现">#</a> python 实现</h3><ol><li>添加 scripts 目录</li></ol><pre><code>cd 功能包mkdir scripts</code></pre><ol start="2"><li>新建并编写 python 文件</li></ol><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">#! /usr/bin/env python</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment"># 制定解释器</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token triple-quoted-string string">"""</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    Python 版 HelloWorld</pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>"""</pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment"># 1. 导包</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> rospy</pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment"># 2. 编写主入口</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token comment">#3. 初始化 ROS 节点</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    rospy<span class="token punctuation">.</span>init_node<span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token comment">#4. 输出日志</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    rospy<span class="token punctuation">.</span>loginfo<span class="token punctuation">(</span><span class="token string">"Hello World by python!!!!"</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure><ol start="3"><li>添加可执行文件</li></ol><pre><code>chmod +x python文件名.py</code></pre><ol start="4"><li>编辑 ros 功能包下的 CmakeList.txt 文件</li></ol><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token number">2.</span> catkin_install_python<span class="token punctuation">(</span>PROGRAMS scripts<span class="token operator">/</span>python文件名<span class="token punctuation">.</span>py</pre></td></tr><tr><td data-num="2"></td><td><pre>  DESTINATION $<span class="token punctuation">{</span>CATKIN_PACKAGE_BIN_DESTINATION<span class="token punctuation">}</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">)</span> <span class="token comment">#给 python 找解释器</span></pre></td></tr></tbody></table></figure><ol start="5"><li>进入工作空间并编译</li></ol><pre><code>cd 自定义空间名称catkin_make</code></pre><ol start="6"><li>执行</li></ol><pre><code>roscorecd 工作空间source ./devel/setup.bashrosrun 功能包名 python文件名.py</code></pre><p>输出结果: <code>Hello World!!!!</code></p><h2 id="ros集成开发环境搭建"><a class="anchor" href="#ros集成开发环境搭建">#</a> ROS 集成开发环境搭建</h2><ol><li>安装 terminal</li></ol><pre><code>sudo apt install terminator</code></pre><ol start="2"><li>启动 vsocde</li></ol><p>工作空间路径下输入<strong> code .</strong></p><ul><li><p>设置编译的配置</p><p>crtl+shift+B</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> ros学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/03/05/qt%E5%AD%A6%E4%B9%A0/%E7%AE%80%E4%BB%8B/"/>
      <url>/2023/03/05/qt%E5%AD%A6%E4%B9%A0/%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<pre><code>title: 简介date: 2023-03-05 20:29:57categories:- [qt学习]</code></pre><ol><li><p><strong>实质：封装 c++ 的库，调用 qt 的库生成界面</strong></p></li><li><p>用途：方便使用 c++，帮我们可视化开发 QT creator 辅助工具。</p></li><li><p>跨平台</p><p>windows、Linux(ubuntu)</p></li><li><p>下载</p><p><span class="exturl" data-url="aHR0cDovL2Rvd25sb2FkLnF0LmlvL2FyY2hpdmUvcXQv">download.qt.io/archive/qt/</span></p></li><li><p>版本控制：协作开发</p></li><li><p>文件：头文件、源文件、界面文件（.ui）</p></li><li><p><strong>单独运行可执行文件需要从 qt 安装路径下复制依赖库</strong></p></li><li><p>程序的入口函数 main, 且整个应用程序只能有一个。</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QpushButton</title>
      <link href="/2023/03/04/qt%E5%AD%A6%E4%B9%A0/QPushButton/"/>
      <url>/2023/03/04/qt%E5%AD%A6%E4%B9%A0/QPushButton/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> qt学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>qt绘图</title>
      <link href="/2023/03/04/qt%E5%AD%A6%E4%B9%A0/qt%E7%BB%98%E5%9B%BE/"/>
      <url>/2023/03/04/qt%E5%AD%A6%E4%B9%A0/qt%E7%BB%98%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<p><strong>QWidget 继承了 QPaintDevice，我们可以使用 QPainter 来绘图</strong></p><p>需要调用 paintEvent 绘制事件，这个事件是 QWidget 这个类中自带的事件。</p><p>重写这个事件：如果父类有某个方法，此时子类需要有一个跟父类同样方法名称的。</p><pre><code class="language-c++">实例化对象写法：QPainter painter(this);//相当于QPainter *painter=new QPainter(this);</code></pre><pre><code class="language-c++">画直线：painter.drawLine(0,20,300,20);//(0,20)是起点，（300，20）是终点</code></pre><pre><code class="language-c++">设置渲染模式，使得平滑渲染painter.setRenderHint(QPainter::Antialiasing,true);//QPainter::Antialiasing代表平滑</code></pre><pre><code class="language-c++">画弧线（1度 = 16弧度）painter.drawArc(30,30,100,100,30*16,140*16);//30，30表示开始绘制位置，100，100表示弧度绘制范围宽高，30×16表示起始弧度，140×16表示跨越弧度</code></pre><pre><code class="language-c++">绘制饼图，类似于绘制弧线painter.drawRect(50,50,40100,0,90*16);//绘制矩形</code></pre><pre><code class="language-c++">绘制矩形图painter.drawRect(200,100,150,100);//200,100表示绘制起点，150，100表示绘制宽高</code></pre><pre><code class="language-c++">填充绘制矩形painter.fillRect(100,100,100,100,QBrush(QColor(255,0,0)));</code></pre><pre><code class="language-c++">绘制文字painter.drawText(300,210,"水平轴");</code></pre>]]></content>
      
      
      <categories>
          
          <category> qt学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>qt学习笔记</title>
      <link href="/2023/03/01/qt%E5%AD%A6%E4%B9%A0/qt%E7%BB%84%E4%BB%B6%E4%BB%8B%E7%BB%8D/"/>
      <url>/2023/03/01/qt%E5%AD%A6%E4%B9%A0/qt%E7%BB%84%E4%BB%B6%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<p><strong>所有的组件都是 QWidget，实际都是一个窗口</strong></p><p>窗体 -----------&gt; 各种控件</p><p>##　布局</p><ol><li><p>垂直布局（Vertical Layout）</p></li><li><p>水平布局（Horizonal Layout）</p></li><li><p>栅格布局（Grid Layout）</p></li><li><p>表单布局（Form Layout）文本 + 输入框</p></li></ol><h2 id="空格"><a class="anchor" href="#空格">#</a> 空格</h2><ol><li>水平弹簧（Horizonal Spacer）</li><li>垂直弹簧（Vertical Spacer）</li></ol><h2 id="按钮"><a class="anchor" href="#按钮">#</a> 按钮</h2><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/20210630200639308.png" alt="在这里插入图片描述"></p><ol><li><p>QPushButton: 下压按钮</p><p>QAbstractButton -&gt; QPushButton -&gt;QCommandLinkButton, 用于执行命令或触发事件。</p></li><li><p>QToolButton: 工具按钮</p><p>QAbstractButton -&gt; QPushButton, 与 QPushButton 差不多</p></li><li><p>QRadioButton: 选择按钮</p><p>单选框 <img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/image-20230301180951875.png" alt="image-20230301180951875"></p></li><li><p>QCheckBox: 检查框</p><p>复选框：<img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/image-20230301181034055.png" alt="image-20230301181034055"></p></li><li><p>QCommandLinkButton: 命令链接按钮</p></li><li><p>QDialogButtonBox: 对话框按钮</p></li></ol><h2 id="显示窗口部件"><a class="anchor" href="#显示窗口部件">#</a> 显示窗口部件</h2><p><img data-src="qt%E7%BB%84%E4%BB%B6%E4%BB%8B%E7%BB%8D.assets/20210705085821860.png" alt="在这里插入图片描述"></p><ol><li><p>Label：标签（只显示）</p><p>文本或图像显示的小部件。</p></li><li><p>Text Browser: 文本浏览器</p></li><li><p>Graphic View: 图形视图</p></li><li><p>Calendar Widget: 日历</p><p>供用户选择日期（月和年）</p></li><li><p>LCD Number: 液晶数字</p><p>显示类似于 lcd 的数字（十进制、十六进制、八进制、二进制）</p></li><li><p>Progress Bar: 进度条</p><p>提供一个水平或垂直的进度条，显示操作的进度</p></li><li><p>Horizontal Line: 水平线</p></li><li><p>Vertial Line: 垂直线</p></li><li><p>OpenGL Widget: 开放式图形库工具</p></li><li><p>QQuick Widget: 嵌入式 QML 工具</p></li></ol><h2 id="输入窗口部件"><a class="anchor" href="#输入窗口部件">#</a> 输入窗口部件</h2><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/20210701112406617.png" alt="在这里插入图片描述"></p><ol><li>Comb Box: 组合框</li><li>Font Comb Box: 字体组合框</li><li>Line Edit: 单行编辑框（可以输入）</li><li>Text Edit: 文本编辑框</li><li>Plain Text Edit: 纯文本编辑框</li><li>Spin Box: 数字旋转框</li><li>Double Spin Box: 双精度数字旋转框</li><li>Time Edit: 时间编辑框</li><li>Date Edit: 日期时间编辑框</li><li>Date/Time Edit: 日期时间编辑框</li><li>Dial: 数字拨盘框</li><li>Horizontal Scroll Bar: 水平滚动条</li><li>Vertical Scroll Bar: 垂直滚动条</li><li>Horizontal Slider: 水平滑动条</li><li>Vertical Silder: 垂直滑动条</li><li>Key sequence Edit: 按键序列编辑框</li></ol>]]></content>
      
      
      <categories>
          
          <category> qt学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>qt学习笔记</title>
      <link href="/2023/02/28/qt%E5%AD%A6%E4%B9%A0/qt%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/02/28/qt%E5%AD%A6%E4%B9%A0/qt%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="一个简单的qt程序"><a class="anchor" href="#一个简单的qt程序">#</a> 一个简单的 qt 程序</h2><pre><code class="language-c++">#include &lt;QApplication&gt;#include &lt;QLabel&gt;#include &lt;QLineEdit&gt;#include &lt;QPushButton&gt;#include &lt;QHBoxLayout&gt; //水平布局#include &lt;QVBoxLayout&gt; //垂直布局#include &lt;QWidget&gt;   /窗口int main(int argc, char *argv[]){    QApplication app(argc, argv);    QLabel *infoLabel = new QLabel;    QLabel *openLabel = new QLabel;    QLineEdit *cmdLineEdit = new QLineEdit;    QPushButton *commitButton = new QPushButton;    QPushButton *cancelButton = new QPushButton;    QPushButton *browseButton = new QPushButton;    infoLabel-&gt;setText("input cmd:");    openLabel-&gt;setText("open");    commitButton-&gt;setText("commit");    cancelButton-&gt;setText("cancel");    browseButton-&gt;setText("browse");    QHBoxLayout *cmdLayout = new QHBoxLayout; // 水平布局对象    cmdLayout-&gt;addWidget(openLabel);    cmdLayout-&gt;addWidget(cmdLineEdit);    QHBoxLayout *buttonLayout = new QHBoxLayout;    buttonLayout-&gt;addWidget(commitButton);    buttonLayout-&gt;addWidget(cancelButton);    buttonLayout-&gt;addWidget(browseButton);    QVBoxLayout *mainLayout = new QVBoxLayout;    mainLayout-&gt;addWidget(infoLabel);    mainLayout-&gt;addLayout(buttonButton)        QWidget w;    w.setLayout(mainLayout);    return app.exec();}</code></pre><h2 id="正式开干"><a class="anchor" href="#正式开干">#</a> 正式开干！</h2><ol><li><p>widget（比如运行窗口）和 mainWindows (有菜单栏，比如 Qt Creator 的界面)</p></li><li><p>继承：一个类继承一个父类后，会把父类的方法都继承下来。</p></li><li><p>qt 中槽：代表方法，我们需要通过信号到槽方法中。</p><p>信号：理解为事件</p></li><li><p>源文件和头文件切换：F4</p></li><li><p>ui 文件修改后需要编译一下（就是把 ui 文件的 xml 文件编译成 cpp 文件）</p></li><li><p>通过 qDebug ()&lt;&lt; 输出调试内容，在应用程序输出查看</p></li><li><p>：：可以访问 c++ 类最终的 static 定义的方法</p></li><li><p>-&gt; 访问类对象中的某个属性或方法</p></li><li><p>窗体出现在界面的本质：窗体被死循环</p></li></ol><h2 id="qt帮助文档"><a class="anchor" href="#qt帮助文档">#</a> qt 帮助文档</h2><ol><li><p>快捷键：F1</p></li><li><p>退出帮助 窗口 esc</p></li><li><p>只要是 Widgets 都是属于控件，最顶层的 Widgets 就是窗体</p></li><li><p>slot 槽 --- 方法（函数）</p></li><li><p>signal 信号 --- 事件</p></li><li><p>* 代表指针，&amp; 代表取指针指向的地址，此时修改的值是最为彻底。取地址</p></li><li><p>main 方法是 c++ 语言的入口方法，且所有的文件中出现一次</p></li><li><p>类的继承，使用冒号：</p></li><li><p>如果指针在使用的时候，我们将指针变量名称加上 *****, 意味着取得指针指向的内存中的值。就是说 ***** 代表取值。</p></li><li><p>自动在 cpp 文件中生成定义快捷键：Alt+Enter</p></li><li><p>connect 方法 信号与槽方法</p><p>connect 方法的四个参数依次是：信号发送者指针，发送了什么信号，接收者的指针，接收者的槽函数</p></li><li><p>编译项目快捷键：ctrl+b</p></li><li><p>拖新控件后，不能马上在代码处显示出来，需要先编译。</p></li><li><p>char 字符；string 字符串</p></li></ol><h2 id="qtime随机数"><a class="anchor" href="#qtime随机数">#</a> qtime, 随机数</h2><p>qrand () 默认产生 [1,32767]</p><p>qsrand () 设置随机数的开始数值</p><p>qsrand (100) 仅仅表示产生随机数的起始值</p><p>qsrand (100) 表示产生随机数范围为【100，32767】</p><p><strong>案例：猜数字</strong></p><p>生成一个随机数，范围【1，100】，代码 qrand ()%100+1</p><p><strong>案例：图片轮播</strong></p><p>资源的加载</p><p>QLabel 控件上载入图片、文件、视频</p><p>轮播：时钟控件 QTimer</p><p>QPixmap 承载图片、配置图片的容器</p><p>过程：</p><ol><li>创建 QPixmap 对象</li><li>在 QLabel 中载入 QPixmap 对象</li><li>通过时钟控件修改图片路径</li></ol><p>快捷键 alt+/ 可以代码提示</p>]]></content>
      
      
      <categories>
          
          <category> qt学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>qt工程配置</title>
      <link href="/2023/02/28/qt%E5%AD%A6%E4%B9%A0/qt%E5%B7%A5%E7%A8%8B%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/02/28/qt%E5%AD%A6%E4%B9%A0/qt%E5%B7%A5%E7%A8%8B%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<ol><li></li></ol><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/image-20230228094025300.png" alt="image-20230228094025300"></p><p>上述位置改成 /opt/ros/melodic</p><ol start="2"><li></li></ol><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/image-20230228094312516.png" alt="image-20230228094312516"></p><p>上述位置改为 /opt/ros/melodic</p><ol start="3"><li></li></ol><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/image-20230228095500409.png" alt="image-20230228095500409"></p><p>新建 Project 文件夹，构建目录修改到 Project 路径下</p><ol start="4"><li>重启 qtcreator</li><li>Add-dictory-</li></ol><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/image-20230228100826084.png" alt="image-20230228100826084"></p><ol start="6"><li></li></ol><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/image-20230228102621645.png" alt="image-20230228102621645"></p><ol start="7"><li>运行命令，工程目录下 rosrun qtros qtros</li></ol>]]></content>
      
      
      <categories>
          
          <category> qt学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>仿真系统</title>
      <link href="/2023/02/24/others/%E4%BB%BF%E7%9C%9F%E7%B3%BB%E7%BB%9F/"/>
      <url>/2023/02/24/others/%E4%BB%BF%E7%9C%9F%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p><span class="exturl" data-url="QzolNUNVc2VycyU1QzM1MjI5JTVDRGVza3RvcCU1QyVFNCVCQiVCRiVFNyU5QyU5RiVFNyVCMyVCQiVFNyVCQiU5Ri54bWluZA==">仿真系统.xmind</span></p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> project_710 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>QT5.9.8</title>
      <link href="/2023/02/23/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8F%8A%E9%81%BF%E5%9D%91%E6%8C%87%E5%8D%97/QT5.9.8/QT5.9.8%E5%AE%89%E8%A3%85/"/>
      <url>/2023/02/23/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8F%8A%E9%81%BF%E5%9D%91%E6%8C%87%E5%8D%97/QT5.9.8/QT5.9.8%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="下载qt-opensource-linux-xxxxxxrun最好下载50以上版本"><a class="anchor" href="#下载qt-opensource-linux-xxxxxxrun最好下载50以上版本">#</a> 下载 qt-opensource-linux-xxxxxx.run，最好下载 5.0 以上版本</h2><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/20210126213138949.png" alt="img"></p><h2 id="安装qt"><a class="anchor" href="#安装qt">#</a> 安装 QT</h2><p>终端输入命令，获取安装权限</p><figure class="highlight markdown"><figcaption data-lang="markdown"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>chmod 777 qt-opensource-linux-xxxxxx.run</pre></td></tr></tbody></table></figure><p>双击<em> chmod</em> 777 qt-opensource-linux-xxxxxx.run 即可安装 QT</p><p>登录注册</p><p>安装路径可以选择和 ROS 的相同目录下 /opt/Qt5.8.0</p><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/20210126215859945.png" alt="img"></p><p>全部打勾</p><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/20210126220010957.png" alt="img"></p><h2 id="安装qt依赖库和创建qt功能包"><a class="anchor" href="#安装qt依赖库和创建qt功能包">#</a> 安装 QT 依赖库和创建 QT 功能包</h2><p>依赖库：</p><pre><code>$ sudo add-apt-repository ppa:levi-armstrong/qt-libraries-xenial$ sudo add-apt-repository ppa:levi-armstrong/ppa$ sudo apt update &amp;&amp; sudo apt install qt57creator$ sudo apt install qt57creator-plugin-ros</code></pre><p>创建 QT 功能包安装，用于创建 ROS-QT GUI 模板</p><pre><code>$ sudo apt-get install ros-kinetic-qt-create$ sudo apt-get install ros-kinetic-qt-build</code></pre><p>安装依赖包在终端输入 qtcreator-ros 可以直接打开 qt 软件</p><pre><code>$ qtcreator-ros</code></pre><h2 id="创建qt-ros功能包在建好的工作空间catkin_demosrc目录下创建qt-ros功能包"><a class="anchor" href="#创建qt-ros功能包在建好的工作空间catkin_demosrc目录下创建qt-ros功能包">#</a> 创建 QT-ROS 功能包，在建好的工作空间 catkin_demo/src 目录下创建 QT-ROS 功能包</h2><pre><code>$ cd ~/catkin_demo/src$ catkin_create_qt_pkg qtros 依赖库1 依赖库2 .......依赖库n</code></pre><p>catkin_create_qt_pkg 命令用于创建带 UI 界面的 QT-ROS 功能包，依赖库根据需求填写例如：catkin_create_qt_pkg qtros std_msgs rospy roscpp</p><p>创建完功能包之后在工作空间下编译，到此建立了完整的功能包</p><pre><code>$ cd ~/catkin_demo/$ catkin_make$ source devel/setup.bash   //设置环境变量</code></pre><h2 id="启动qt建立工程"><a class="anchor" href="#启动qt建立工程">#</a> 启动 QT 建立工程</h2>]]></content>
      
      
      <categories>
          
          <category> 软件安装及避坑指南 </category>
          
          <category> QT5.9.8安装 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一章-线性空间和线性变换</title>
      <link href="/2023/02/21/%E7%9F%A9%E9%98%B5%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%BA%BF%E6%80%A7%E7%A9%BA%E9%97%B4%E4%B8%8E%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2/"/>
      <url>/2023/02/21/%E7%9F%A9%E9%98%B5%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/%E7%AC%AC%E4%B8%80%E7%AB%A0-%E7%BA%BF%E6%80%A7%E7%A9%BA%E9%97%B4%E4%B8%8E%E7%BA%BF%E6%80%A7%E5%8F%98%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="判断集合是否构成线性空间"><a class="anchor" href="#判断集合是否构成线性空间">#</a> 判断集合是否构成线性空间</h2>\begin{align}\alpha+\beta=\beta+\alpha \\(\alpha+\beta)+\gamma=\alpha+(\beta+\gamma) \\V中存在一个零元素，记作\overset{\rightarrow}{0}，对于任意\alpha,有\alpha+\overset{\rightarrow}{0}=\alpha \\都有\alpha的负元素，记作-\alpha \\1*\alpha = \alpha \\k(l\alpha)=(kl)\alpha \\(k+l)\alpha=k\alpha+l\alpha \\k(\alpha+\beta)=k\alpha+k\beta\end{align}<h2 id="基变换和坐标变换"><a class="anchor" href="#基变换和坐标变换">#</a> 基变换和坐标变换</h2><p><strong>1.  向量 alpha 基到 beta 基的过渡矩阵</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>方法一：（</mtext><mn>1</mn><mtext>）</mtext><mi>α</mi><mo>=</mo><msub><mi>k</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>ϵ</mi><mn>1</mn></msub><mo>+</mo><msub><mi>k</mi><mn>2</mn></msub><msub><mi>ϵ</mi><mn>2</mn></msub><mo>+</mo><msub><mi>k</mi><mn>3</mn></msub><msub><mi>ϵ</mi><mn>3</mn></msub><mspace linebreak="newline"></mspace><mtext>（</mtext><mn>2</mn><mtext>）列出关于</mtext><msub><mi>k</mi><mn>1</mn></msub><mtext>、</mtext><msub><mi>k</mi><mn>2</mn></msub><mtext>、</mtext><msub><mi>k</mi><mn>3</mn></msub><mtext>的三元方程组</mtext><mspace linebreak="newline"></mspace><mtext>（</mtext><mn>3</mn><mtext>）求出</mtext><msub><mi>k</mi><mn>1</mn></msub><mtext>、</mtext><msub><mi>k</mi><mn>2</mn></msub><mtext>、</mtext><msub><mi>k</mi><mn>3</mn></msub><mspace linebreak="newline"></mspace><mtext>（</mtext><mn>4</mn><mtext>）代入</mtext><msub><mi>k</mi><mn>1</mn></msub><mtext>、</mtext><msub><mi>k</mi><mn>2</mn></msub><mtext>、</mtext><msub><mi>k</mi><mn>3</mn></msub><mtext>，把（</mtext><mn>1</mn><mtext>）再列一下</mtext><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">方法一：（1） \alpha=k_1*\epsilon_1+k_2\epsilon_2+k_3\epsilon_3 \\（2）列出关于k_1、k_2、k_3的三元方程组 \\（3）求出k_1、k_2、k_3 \\（4）代入k_1、k_2、k_3，把（1）再列一下 \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">（</span><span class="mord">1</span><span class="mord cjk_fallback">）</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">（</span><span class="mord">2</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">列</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">关</span><span class="mord cjk_fallback">于</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">三</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">程</span><span class="mord cjk_fallback">组</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">（</span><span class="mord">3</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">求</span><span class="mord cjk_fallback">出</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">（</span><span class="mord">4</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">代</span><span class="mord cjk_fallback">入</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">把</span><span class="mord cjk_fallback">（</span><span class="mord">1</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">再</span><span class="mord cjk_fallback">列</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">下</span></span><span class="mspace newline"></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>方法二：（</mtext><mn>1</mn><mtext>）</mtext><msub><mi>e</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mtext>、</mtext><msub><mi>e</mi><mn>2</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mtext>、</mtext><msub><mi>e</mi><mn>3</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mspace linebreak="newline"></mspace><mtext>（</mtext><mn>2</mn><mtext>）（</mtext><msub><mi>ϵ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>ϵ</mi><mn>2</mn></msub><mtext>，</mtext><msub><mi>ϵ</mi><mn>3</mn></msub><mtext>）</mtext><mo>=</mo><mo stretchy="false">(</mo><msub><mi>e</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>e</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>e</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo>∗</mo><mi>A</mi><mspace linebreak="newline"></mspace><mtext>（</mtext><mn>3</mn><mtext>）求出</mtext><mi>A</mi><mtext>矩阵</mtext><mspace linebreak="newline"></mspace><mtext>（</mtext><mn>4</mn><mtext>）</mtext><msup><mi>α</mi><mi>T</mi></msup><mo>=</mo><mo stretchy="false">(</mo><msub><mi>e</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>e</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>e</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo>∗</mo><msup><mi>α</mi><mi>T</mi></msup><mo>=</mo><mtext>（</mtext><msub><mi>ϵ</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>ϵ</mi><mn>2</mn></msub><mtext>，</mtext><msub><mi>ϵ</mi><mn>3</mn></msub><mtext>）</mtext><mo>∗</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><msup><mi>α</mi><mi>T</mi></msup><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">方法二：（1）e_1=(1,0,0)^T、e_2=(0,1,0)^T、e_3=(0,0,1)^T \\（2）（\epsilon_1,\epsilon_2，\epsilon_3）=(e_1,e_2,e_3)*A \\（3）求出A矩阵 \\（4）\alpha^T=(e_1,e_2,e_3)*\alpha^T=（\epsilon_1,\epsilon_2，\epsilon_3）*A^{-1}*\alpha^T \\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">（</span><span class="mord">1</span><span class="mord cjk_fallback">）</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">、</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">（</span><span class="mord">2</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">（</span><span class="mord">3</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">求</span><span class="mord cjk_fallback">出</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">矩</span><span class="mord cjk_fallback">阵</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord cjk_fallback">（</span><span class="mord">4</span><span class="mord cjk_fallback">）</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span></span></span></span></p><p><strong>2. 向量 alpha 基到 beta 基的过渡矩阵</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>（</mtext><mn>1</mn><mtext>）（</mtext><msub><mi>β</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>β</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>β</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>β</mi><mn>4</mn></msub><mtext>）</mtext><mo>=</mo><mo stretchy="false">(</mo><msub><mi>α</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>α</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>α</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>α</mi><mn>4</mn></msub><mo stretchy="false">)</mo><mi>A</mi><mspace linebreak="newline"></mspace><mtext>（</mtext><mn>2</mn><mtext>）计算</mtext><mi>A</mi><mtext>矩阵</mtext></mrow><annotation encoding="application/x-tex">（1）（\beta_1,\beta_2,\beta_3,\beta_4）=(\alpha_1,\alpha_2,\alpha_3,\alpha_4)A \\（2）计算A矩阵</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">（</span><span class="mord">1</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">A</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">（</span><span class="mord">2</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">矩</span><span class="mord cjk_fallback">阵</span></span></span></span></span></p><p><strong>3. 向量 alpha 基到 beta 基的过渡矩阵</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><msubsup><mi>x</mi><mn>1</mn><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mn>2</mn><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msubsup><mo separator="true">,</mo><msubsup><mi>x</mi><mn>3</mn><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msubsup><mo separator="true">,</mo><msub><mi>x</mi><mn>4</mn></msub><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo>=</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><msubsup><mi>x</mi><mn>1</mn><mo separator="true">,</mo></msubsup><msubsup><mi>x</mi><mn>2</mn><mo separator="true">,</mo></msubsup><msubsup><mi>x</mi><mn>3</mn><mo separator="true">,</mo></msubsup><msub><mi>x</mi><mn>4</mn></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">(x_1^{'},x_2^{'},x_3^{'},x_4{'})^T=A^{-1}(x_1^,x_2^,x_3^,x_4)^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.24248em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9924799999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9924799999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9924799999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1576389999999999em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5547999999999998em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.180908em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mpunct mtight">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5547999999999998em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.180908em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mpunct mtight">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.5547999999999998em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.180908em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mpunct mtight">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></p><p><strong>4. 两个基有相同坐标的向量</strong></p>]]></content>
      
      
      <categories>
          
          <category> 线性空间与线性空间 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 判断集合是否构成线性空间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>目标状态估计</title>
      <link href="/2023/02/19/others/%E6%8A%B5%E8%BF%91%E7%AD%96%E7%95%A5/"/>
      <url>/2023/02/19/others/%E6%8A%B5%E8%BF%91%E7%AD%96%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<p>##　研究的问题<br><strong>通过被动声纳（水听器）获取目标角度信息，使用扩展卡尔曼滤波（EKF）估计目标的位置、航向、速度，根据得到的目标状态信息，使用跟踪控制算法控制 AUV 跟上目标</strong></p><h2 id="具体步骤"><a class="anchor" href="#具体步骤">#</a> 具体步骤</h2><ol><li><p>两个 AUV 上的被动声纳获取目标的角度信息</p></li><li><p>根据两个角度信息解算出目标的位置</p></li><li><p>定义两个目标运动状态：匀速直线运动和匀速圆周运动，建立 CTRV 模型.</p></li><li><p>输入目标位置信息，使用 EKF 估计 CTRV 模型，输出目标的位置、航向、速度</p></li><li><p>使用跟踪控制算法，控制 AUV 跟上目标（<strong>要求 AUV 侧对目标，且目标与 AUV 的相对距离不超过声纳最大探测距离</strong>）</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> project_710 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>目标状态估计</title>
      <link href="/2023/02/19/710%E9%A1%B9%E7%9B%AE/%E7%8A%B6%E6%80%81%E4%BC%B0%E8%AE%A1/%E7%9B%AE%E6%A0%87%E7%8A%B6%E6%80%81%E4%BC%B0%E8%AE%A1/"/>
      <url>/2023/02/19/710%E9%A1%B9%E7%9B%AE/%E7%8A%B6%E6%80%81%E4%BC%B0%E8%AE%A1/%E7%9B%AE%E6%A0%87%E7%8A%B6%E6%80%81%E4%BC%B0%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p>##　研究的问题<br><strong>通过被动声纳（水听器）获取目标角度信息，使用扩展卡尔曼滤波（EKF）估计目标的位置、航向、速度，根据得到的目标状态信息</strong></p><h2 id="具体步骤"><a class="anchor" href="#具体步骤">#</a> 具体步骤</h2><ol><li>两个 AUV 上的被动声纳获取目标的角度信息</li><li>根据两个角度信息解算出目标的位置</li><li>定义两个目标运动状态：匀速直线运动和匀速圆周运动，建立 CTRV 模型.</li><li>输入目标位置信息，使用 EKF 估计 CTRV 模型，输出目标的位置、航向、速度</li></ol><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/%E8%A2%AB%E5%8A%A8%E5%A3%B0%E7%BA%B3%E6%B5%8B%E9%87%8F.jpg" alt="被动声纳测量"></p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> project_710 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>指针常量和常量指针</title>
      <link href="/2023/02/13/cpp-primer%E7%AC%94%E8%AE%B0/%E5%A4%84%E7%90%86%E7%B1%BB%E5%9E%8B/"/>
      <url>/2023/02/13/cpp-primer%E7%AC%94%E8%AE%B0/%E5%A4%84%E7%90%86%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>##　类型别名</p><h3 id="typedef"><a class="anchor" href="#typedef">#</a> typedef</h3><pre><code class="language-c++">typedef double wages;// wage是double的别名typedef wages base, *p;//base是double的别名，p是double*的别名</code></pre><ul><li>别名声明</li></ul><pre><code class="language-c++">using SI = Sales_item;   //SI是Sales_item的同义词</code></pre><ul><li>指针、常量和类型别名（<strong>p69</strong>）</li></ul><pre><code>typedef char *pstring;const pstring cstr = 0;  //cstr是指向char的常量指针const pstring *ps;   //ps是一个指针，它的对象是char的常量指针</code></pre><h2 id="auto类型说明符"><a class="anchor" href="#auto类型说明符">#</a> auto 类型说明符</h2><p><strong>让编译器自己分析变量数据类型</strong><br>比如：</p><pre><code class="language-c++">auto item = val1 + val2;//由相加结果推断出item的类型</code></pre><p>auto 一般会忽略顶层 const，底层 const 会保留下来（当初始值是一个指向常量的指针时）</p><pre><code class="language-c++">const int ci = i, &amp;cr = ci;auto b = ci;  //b是一个整数（ci的顶层特性被忽略）auto c = cr;  //c是一个整数（cr是ci的别名，ci本身是一个顶层const）auto d = &amp;i;  //d是一个整型指针（整数的地址就是指向整数的指针）auto e = &amp;ci; //e是一个指向整数常量的指针（对常量对象取地址是一种底层const）</code></pre><ul><li>想要推断出类型是一个顶层 const，需要明确指出</li></ul><pre><code class="language-c++">const auto f = ci; //ci推演类型是int,f是const int</code></pre>]]></content>
      
      
      <categories>
          
          <category> c++ primer笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typedef </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>const限定符</title>
      <link href="/2023/02/13/cpp-primer%E7%AC%94%E8%AE%B0/const%E9%99%90%E5%AE%9A%E7%AC%A6/"/>
      <url>/2023/02/13/cpp-primer%E7%AC%94%E8%AE%B0/const%E9%99%90%E5%AE%9A%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="const初始化"><a class="anchor" href="#const初始化">#</a> const 初始化</h2><pre><code class="language-c++">int i = 42;const int ci = i;//将i的值拷贝给了ciint j = ci;//将ci的值拷贝给了j，只是拷贝了ci的值给j，不会影响ci</code></pre><ul><li>ci 的常量特征仅仅在执行改变 ci 的操作时才会发生作用</li></ul><h3 id="默认状态下const对象只在文件内有效"><a class="anchor" href="#默认状态下const对象只在文件内有效">#</a> 默认状态下，const 对象只在文件内有效</h3><p>不同文件中出现同名的 const 变量时，等价于分别定义了独立的变量。<br><strong>如果希望部分文件共享这个 const 对象，方法是：</strong><br><strong>一个文件定义，多个文件声明</strong></p><pre><code class="language-c++">//file.ccextern const int bufSize = fcn();//file_1.hextern const int bufSize;</code></pre><h2 id="const的引用常量引用"><a class="anchor" href="#const的引用常量引用">#</a> const 的引用（常量引用）</h2><pre><code class="language-c++">const int ci = 1024;const int &amp;rl = ci;//常量 = 常量rl = 42;           //错误：rl是给常量起别名，实质是常量，不可以被赋值int &amp;r2 = ci;      //错误：不可以使用变量名作为常量的别名</code></pre><ul><li>使用<strong>整型常量</strong>作为<strong> double 类型的变量</strong>的别名（类比别的类型）</li></ul><pre><code class="language-c++">double dval = 3.14const int &amp;ri = dval;==&gt;const int temp = dval;const int &amp;rl = temp;</code></pre><ul><li>不可以使用<strong>整型变量</strong>作为<strong> double 类型的变量</strong>的别名（类比别的类型）</li></ul><pre><code class="language-c++">//double a = 3.14;//int &amp;b = a;//错误</code></pre><ul><li>对 const 的引用可能引用一个并非 const 的对象</li></ul><pre><code>int i = 42;int &amp;rl = i;  //变量给变量其别名，r1可以修改i的值（可以变）const int &amp;r2 = i;//常量给变量起别名，r2不可以修改i的值（常量不能变）r1 = 0;         //正确r2 = 0;         //错误</code></pre><h2 id="指针和const"><a class="anchor" href="#指针和const">#</a> 指针和 const</h2><h3 id="指针常量顶层const必须初始化因为初始化的是它的地址"><a class="anchor" href="#指针常量顶层const必须初始化因为初始化的是它的地址">#</a> 指针常量（顶层 const）<strong>必须初始化，因为初始化的是它的地址</strong></h3><p><strong>指针类型的常量</strong><br>不可以改变指针指向，可以改变指向对象的值</p><pre><code class="language-c++">int a;int *const p = &amp;a;</code></pre><h3 id="常量指针底层const"><a class="anchor" href="#常量指针底层const">#</a> 常量指针（底层 const）</h3><p><strong>指向常量的指针</strong><br>不可以改变指向对象的值，可以改变指针指向</p><pre><code class="language-c++">int a;const int *p;</code></pre><h3 id="指向常量的指针常量"><a class="anchor" href="#指向常量的指针常量">#</a> 指向常量的指针常量</h3><p>不可以改变指向对象的值，也不可以改变指针指向</p><pre><code class="language-c++">int a;const int *const p;</code></pre><p>###　常量不可以　＝　变量的引用</p><pre><code class="language-c++">const int ci = 42;int &amp;ri = ci;//错误</code></pre><h3 id="顶层const和底层const"><a class="anchor" href="#顶层const和底层const">#</a> 顶层 const 和底层 const</h3><p>指针本身是一个常量（存放的地址是一个常量）<strong>顶层 const</strong><br> 指针指向的值是一个常量（指向的值是一个常量）<strong>底层 const</strong></p><pre><code>int i = 0;int *const p1 = &amp;i; //p1地址不能改变，顶层constconst int ci = 42;  //不能改变ci的值，这是一个顶层constconst int *p2 = &amp;ci;//p2地址可以改变，底层constconst int *const p3 = p2;//靠右的const是顶层const,靠做的是底层constconst int &amp;r = ci;  //用于声明引用的const都是底层const</code></pre><p><strong>底层 const 需要注意：</strong></p><pre><code class="language-c++">int *p = p3;        //错误，p3包含底层const的定义，而p没有p2 = p3;            //正确，p2和p3都是底层constp2 = &amp;i;//正确，int*能转换成const int*int &amp;r = ci;//错误，常量不可以 = 变量的引用const int &amp;r2 = i;//正确：const </code></pre><h2 id="constexpr变量"><a class="anchor" href="#constexpr变量">#</a> constexpr 变量</h2><p><strong>作用：由编译器来验证变量的值是否是一个常量表达式</strong></p><ul><li>必须是 constexpr 函数才能给 constexpr 类型的变量初始化</li></ul><pre><code class="language-c++">const int *p = nullptr;  //p是一个指向整型常量的指针constexpr int *q = nullptr;//q是一个指向整数的常量指针（常量指针） 所定义的变量置为了顶层       //const</code></pre><p>constexpr 指针既可以指向常量也可以指向一个非常量</p>]]></content>
      
      
      <categories>
          
          <category> c++ primer笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> const初始化 </tag>
            
            <tag> const引用（常量引用） </tag>
            
            <tag> 指针和const </tag>
            
            <tag> constexpr变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指针常量和常量指针</title>
      <link href="/2023/02/10/cpp-primer%E7%AC%94%E8%AE%B0/%E6%8C%87%E9%92%88%E5%B8%B8%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F%E6%8C%87%E9%92%88/"/>
      <url>/2023/02/10/cpp-primer%E7%AC%94%E8%AE%B0/%E6%8C%87%E9%92%88%E5%B8%B8%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<h2 id="指针常量顶层const"><a class="anchor" href="#指针常量顶层const">#</a> 指针常量（顶层 const）</h2><p><strong>指针类型的常量</strong><br>不可以改变指针指向，可以改变指向对象的值</p><pre><code class="language-c++">int a;int *const p = &amp;a;</code></pre><p><strong>必须初始化</strong></p><h2 id="常量指针底层const"><a class="anchor" href="#常量指针底层const">#</a> 常量指针（底层 const）</h2><p><strong>指向常量的指针</strong><br>不可以改变指向对象的值，可以改变指针指向</p><pre><code class="language-c++">int a;const int *p;</code></pre><h2 id="指向常量的指针常量"><a class="anchor" href="#指向常量的指针常量">#</a> 指向常量的指针常量</h2><p>不可以改变指向对象的值，也不可以改变指针指向</p><pre><code class="language-c++">int a;const int *const p;</code></pre><p>##　常量不可以　＝　变量的引用</p><pre><code class="language-c++">const int ci = 42;int &amp;ri = ci;//错误</code></pre>]]></content>
      
      
      <categories>
          
          <category> c++ primer笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 指针常量 </tag>
            
            <tag> 常量指针 </tag>
            
            <tag> 指向常量的指针常量 </tag>
            
            <tag> 常量不可以　＝　变量的引用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水下机器人技术</title>
      <link href="/2023/02/10/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%80%E6%9C%AF/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%80%E6%9C%AF/"/>
      <url>/2023/02/10/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%80%E6%9C%AF/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="水下机器人结构"><a class="anchor" href="#水下机器人结构">#</a> 水下机器人结构</h2><ol><li>耐压舱<br>电池、导航、控制、传感器</li><li>推进器设计</li></ol><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-12%20201748.png" alt=""></p><ol start="3"><li>通信技术</li></ol><ul><li><p>有线通信</p><p>光纤通信、以太网通信、载波通信等</p></li><li><p>无线通信</p><p>水声通信、激光通讯、无线电通信、卫星通信等</p></li></ul><ol start="4"><li>导航定位技术</li></ol><ul><li><p>导航技术</p><p>（1） 基于外部信息的导航</p><p>GPS,USBL,LBL,SBL，<strong>适用于系统在水面航行或在水下航行但有水面支持母船的场合</strong></p><p>（2） 基于自身传感器的导航</p><p><strong>依靠系统内部传感器进行导航不需要外部信号</strong></p><p>捷联惯导系统、航位推算、地形匹配、重力场导航</p></li><li><p>定位技术</p><p>LBL,SBL,USBL<br><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-12%20203742.png" alt=""></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 水下机器人 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>对象特性</title>
      <link href="/2023/02/10/%E9%BB%91%E9%A9%ACcpp%E7%AC%94%E8%AE%B0/%E5%AF%B9%E8%B1%A1%E7%89%B9%E6%80%A7/"/>
      <url>/2023/02/10/%E9%BB%91%E9%A9%ACcpp%E7%AC%94%E8%AE%B0/%E5%AF%B9%E8%B1%A1%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="构造函数和析构函数"><a class="anchor" href="#构造函数和析构函数">#</a> 构造函数和析构函数</h2><p><strong>作用：对象的初始化和清理</strong></p><h3 id="1-构造函数语法类名"><a class="anchor" href="#1-构造函数语法类名">#</a> 1. 构造函数语法：类名 (){}</h3><ul><li>构造函数，没有返回值也不写 void</li><li>函数名称与类名相同</li><li>构造函数可以有参数，因此可以发生重载</li><li>程序在调用对象时候自动调用构造，无需手动调用，而且只会调用一次</li></ul><h3 id="2-析构函数语法~类名"><a class="anchor" href="#2-析构函数语法~类名">#</a> 2. 析构函数语法：~ 类名 (){}</h3><ul><li>析构函数，没有返回值也不写 void</li><li>函数名称与类名相同，在名称前加上符号～</li><li>析构函数不可以有参数，因此不可以发生重载</li><li>对象在销毁前自动调用析构，无需手动调用，而且只会调用一次</li></ul><h2 id="构造函数的分类和调用"><a class="anchor" href="#构造函数的分类和调用">#</a> 构造函数的分类和调用</h2><p>两种分类方式：</p><ul><li>按参数分为：有参构造和无参构造（默认构造）</li><li>按类型分为：普通构造和拷贝构造</li></ul><pre><code class="language-c++">class Person{public:    Person(const Person &amp;p)    {        //将传入的人身上所有属性，拷贝到我身上age = p.age;    }    private:int age;    };</code></pre><p>三种调用方法：</p><ul><li><p>括号法</p><pre><code class="language-c++">Person p1;//无参Person p2(10);//有参Person p3(p2);//拷贝</code></pre></li><li><p>显示法</p><pre><code class="language-c++">Person p1;//无参Person p2 = Person(10);//有参Person p3 = Person(p2);//拷贝Person(10);//匿名对象  特点：当前行执行结束后，系统会立即回收掉匿名对象</code></pre></li></ul><p>Person (p3);// 注意事项：不要利用拷贝构造函数 初始化匿名对象  编译器会认为 Person (p3) === Person p3 对象声明</p><pre><code>+ 隐式转换法```c++Person p4 = 10;//相当于Person p4 = Person(10)Person p5 = p4;//拷贝构造</code></pre><h2 id="拷贝构造函数调用时机"><a class="anchor" href="#拷贝构造函数调用时机">#</a> 拷贝构造函数调用时机</h2><ul><li><p>使用一个已经创建完毕的对象来初始化一个新对象</p></li><li><p>值传递的方式给函数传值</p><pre><code class="language-c++">void doWork(Person p){}void test02(){Person p;doWork(p);}</code></pre></li><li><p>以值方式返回局部对象</p></li></ul><pre><code class="language-c++">Person doWork2(){Person p1;return p1;//并不是返回p1,而是拷贝了一个p1返回}void test03(){Person p = doWork();}</code></pre><h2 id="构造函数调用规则"><a class="anchor" href="#构造函数调用规则">#</a> 构造函数调用规则</h2><p>默认提供三个函数：</p><ol><li>默认构造函数（无参，函数体为空）</li><li>默认析构函数（无参，函数体为空）</li><li>默认拷贝构造函数，对属性进行值拷贝</li></ol><p>构造函数调用规则：</p><ul><li>如果用户定义有参构造函数，c++ 不再提供默认无参构造，但是会提供默认拷贝构造</li><li>如果用户定义拷贝构造函数 c++ 不再提供其他构造函数</li></ul>]]></content>
      
      
      <categories>
          
          <category> 黑马c++学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 构造函数和析构函数 </tag>
            
            <tag> 构造函数的分类以及调用 </tag>
            
            <tag> 拷贝构造函数调用时机 </tag>
            
            <tag> 构造函数调用规则 </tag>
            
            <tag> 深拷贝和浅拷贝 </tag>
            
            <tag> 初始化列表 </tag>
            
            <tag> 类对象作为类成员 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EKF算法（CTRV运动模型）</title>
      <link href="/2023/02/09/EKF/EKF/"/>
      <url>/2023/02/09/EKF/EKF/</url>
      
        <content type="html"><![CDATA[<h2 id="一-参数准备"><a class="anchor" href="#一-参数准备">#</a> 一、参数准备</h2><ul><li>控制变量矩阵 B = 0</li><li>状态控制向量 u = 0</li><li>卡尔曼增益 K （无需初始化）</li><li>观测值 z（外部输入，无需初始化）</li><li>先验估计协方差 P</li></ul><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>P <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 先验估计协方差</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment"># 主对角线是 1，其他为 0</span></pre></td></tr></tbody></table></figure><ul><li><p>滤波器输出状态 x = []</p></li><li><p>滤波器预测状态 G = []</p></li><li><p>状态转移矩阵 J_A = []  <strong>与非线性系统的预测机制有关</strong></p></li><li><p>噪声协方差矩阵 Q = [] <strong>代表对控制系统的信任程度，预测过程上叠加一个高斯噪声，若希望跟踪的轨迹更光滑，可以调小</strong></p></li><li><p>观测矩阵 H <strong>z = H * x, 状态：（坐标 x, 坐标 y, 速度 x, 速度 y）, 观测值：（坐标 x, 坐标 y）</strong></p><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>H <span class="token operator">=</span> np<span class="token punctuation">.</span>eye<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure></li><li><p>观测噪声协方差矩阵 R <strong>代表对观测数据的信任程度，观测过程中存在一个高斯噪声，若观测结果中的值很准确，可以调小</strong></p><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>R <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.6</span><span class="token comment"># 主对角线是 1，其他为 0</span></pre></td></tr></tbody></table></figure></li></ul><h2 id="二-参数初始化"><a class="anchor" href="#二-参数初始化">#</a> 二、参数初始化</h2><ul><li><p>B = 0</p></li><li><p>u = 0</p></li><li><p>K = null</p></li><li><p>z = null</p></li><li>P = \left[\matrix{  200 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\  0 &amp; 200 &amp; 0 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 10 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 10 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 0 &amp; 10\\}\right]</li><li>x = \left[\matrix{  坐标x &amp; 坐标y &amp; 速度 &amp; 航向 &amp; 航向角速度}\right]</li><li>G = \left[\matrix{  坐标x &amp; 坐标y &amp; 速度 &amp; 航向 &amp; 航向角速度}\right]</li><li>J\_A = \left[\matrix{  1 &amp; 0 &amp; \Delta t*cos(航向) &amp; -\Delta t*v*sin(航向) &amp; 0\\  0 &amp; 1 &amp; \Delta t*sin(航向) &amp; \Delta t*v*cos(航向) &amp; 0\\  0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 1 &amp; \Delta t\\  0 &amp; 0 &amp; 0 &amp; 0 &amp; 1}\right]</li><li><p>std_noise_a = 3 <strong>纵向加速度噪声</strong></p></li><li><p>std_noise_yaw_dd = 0.3 <strong>偏航角加速度噪声</strong></p></li><li>Q\_v = \left[\matrix{  (std\_noise\_a)^2  &amp; 0 \\  0 &amp; (std\_noise\_yaw\_dd)^2\\}\right]=\left[\matrix{  (\sigma_a)^2  &amp; 0 \\  0 &amp; (\sigma_{\psi}^{..})^2\\}\right]</li><li>temp = \left[\matrix{  0.5*(\Delta t)^2*cos(航向) &amp; 0\\  0.5*(\Delta t)^2*sin(航向) &amp; 0\\  \Delta t &amp; 0 \\  0 &amp; 0.5*(\Delta t)^2 \\  0 &amp; \Delta t \\}\right]</li><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>Q</mi><mo>=</mo><mo stretchy="false">(</mo><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant="normal">.</mi><mo>∗</mo><msub><mi>Q</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo>∗</mo><mi>t</mi><mi>e</mi><mi>m</mi><msup><mi>p</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">Q = (temp.*Q_v) * temp^{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0857709999999998em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></span></p></li><li></li></ul>H = \left[\matrix{  1 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\  0 &amp; 1 &amp; 0 &amp; 0 &amp; 0\\}\right]<ul><li>R = \left[\matrix{  1 &amp; 0\\  0 &amp; 1\\}\right]</li></ul><h2 id="三-函数定义"><a class="anchor" href="#三-函数定义">#</a> 三、函数定义</h2><ol><li><p>控制航向角 ------psi 角在 -pi ~ pi 之间</p><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">def</span> <span class="token function">control_psi</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>psi<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">while</span> <span class="token punctuation">(</span>psi <span class="token operator">&gt;</span> np<span class="token punctuation">.</span>pi <span class="token keyword">or</span> psi <span class="token operator">&lt;</span> <span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">)</span><span class="token punctuation">:</span> </pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">if</span> psi <span class="token operator">&gt;</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="4"></td><td><pre>psi <span class="token operator">=</span> psi <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">if</span> psi <span class="token operator">&lt;</span> <span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="6"></td><td><pre>psi <span class="token operator">=</span> psi <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi</pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">return</span> psi</pre></td></tr></tbody></table></figure></li><li><p>更新状态</p></li></ol><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>dt<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token keyword">if</span> np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0.0001</span><span class="token punctuation">:</span><span class="token comment">#如果航向角速度很小</span></pre></td></tr><tr><td data-num="3"></td><td><pre>            v <span class="token operator">=</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment"># 速度</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            heading <span class="token operator">=</span> self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 航向</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token comment">########################################### 预测部分</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token comment"># xk_=g(xk,u)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            xk_ <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>v<span class="token operator">*</span>math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token operator">*</span>dt<span class="token operator">+</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>                            v<span class="token operator">*</span>math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token operator">*</span>dt<span class="token operator">+</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                            v<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>                            heading<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>                            <span class="token number">0.0001</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            </pre></td></tr><tr><td data-num="14"></td><td><pre>            self<span class="token punctuation">.</span>G <span class="token operator">=</span> xk_</pre></td></tr><tr><td data-num="15"></td><td><pre>            <span class="token comment">################ 更新 ####################</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            v <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            heading <span class="token operator">=</span> self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>xk_<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            heading_rate <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            <span class="token comment">############### 使用新的航向计算 J_A#############</span></pre></td></tr><tr><td data-num="20"></td><td><pre>            J_A02 <span class="token operator">=</span> dt<span class="token operator">*</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="21"></td><td><pre>            J_A03 <span class="token operator">=</span> <span class="token operator">-</span>dt<span class="token operator">*</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre>            J_A04 <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="23"></td><td><pre>            J_A12 <span class="token operator">=</span> dt<span class="token operator">*</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            J_A13 <span class="token operator">=</span> dt<span class="token operator">**</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            J_A14 <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>            self<span class="token punctuation">.</span>J_A <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> J_A02<span class="token punctuation">,</span> J_A03<span class="token punctuation">,</span> J_A04<span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> J_A12<span class="token punctuation">,</span> J_A13<span class="token punctuation">,</span> J_A14<span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dt<span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="32"></td><td><pre>                                <span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre>                </pre></td></tr><tr><td data-num="34"></td><td><pre>            </pre></td></tr><tr><td data-num="35"></td><td><pre>        <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="36"></td><td><pre>            one_divide_heading_rate <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="37"></td><td><pre>            heading_rate <span class="token operator">=</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="38"></td><td><pre>            v <span class="token operator">=</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="39"></td><td><pre>            heading <span class="token operator">=</span> self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="40"></td><td><pre>            xk_ <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>v <span class="token operator">*</span> one_divide_heading_rate <span class="token operator">*</span> math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading_rate <span class="token operator">*</span> dt<span class="token operator">+</span>heading<span class="token punctuation">)</span> <span class="token operator">-</span> v <span class="token operator">*</span> one_divide_heading_rate <span class="token operator">*</span> math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="41"></td><td><pre>                            <span class="token operator">-</span>v <span class="token operator">*</span> one_divide_heading_rate <span class="token operator">*</span> math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading_rate <span class="token operator">*</span> dt<span class="token operator">+</span>heading<span class="token punctuation">)</span> <span class="token operator">+</span> v <span class="token operator">*</span> one_divide_heading_rate <span class="token operator">*</span> math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="42"></td><td><pre>                            v<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="43"></td><td><pre>                            self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>heading_rate <span class="token operator">*</span> dt <span class="token operator">+</span> heading<span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                            heading_rate<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="45"></td><td><pre>            self<span class="token punctuation">.</span>G <span class="token operator">=</span> xk_</pre></td></tr><tr><td data-num="46"></td><td><pre>            <span class="token comment">############# 更新 ##################</span></pre></td></tr><tr><td data-num="47"></td><td><pre>            v <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="48"></td><td><pre>            heading <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="49"></td><td><pre>            heading_rate <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="50"></td><td><pre>            J_A02 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> heading_rate <span class="token operator">*</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="51"></td><td><pre>            J_A03 <span class="token operator">=</span> v <span class="token operator">/</span> heading_rate <span class="token operator">*</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="52"></td><td><pre>            J_A04 <span class="token operator">=</span> <span class="token punctuation">(</span>dt <span class="token operator">*</span> v <span class="token operator">/</span> heading_rate<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token punctuation">(</span>v <span class="token operator">/</span><span class="token punctuation">(</span>heading_rate <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="53"></td><td><pre>                        np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="54"></td><td><pre>            J_A12 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> heading_rate <span class="token operator">*</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="55"></td><td><pre>            J_A13 <span class="token operator">=</span> v <span class="token operator">/</span> heading_rate <span class="token operator">*</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="56"></td><td><pre>            J_A14 <span class="token operator">=</span> <span class="token punctuation">(</span>dt <span class="token operator">*</span> v <span class="token operator">/</span> heading_rate <span class="token punctuation">)</span><span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>v<span class="token operator">/</span><span class="token punctuation">(</span>heading_rate <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="57"></td><td><pre>                        np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="58"></td><td><pre>            self<span class="token punctuation">.</span>J_A <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> J_A02<span class="token punctuation">,</span> J_A03<span class="token punctuation">,</span> J_A04<span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="59"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> J_A12<span class="token punctuation">,</span> J_A13<span class="token punctuation">,</span> J_A14<span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="60"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="61"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dt<span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="62"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="63"></td><td><pre>                                <span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="64"></td><td><pre>        Q_v <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>std_noise_a <span class="token operator">*</span> self<span class="token punctuation">.</span>std_noise_a<span class="token punctuation">,</span> self<span class="token punctuation">.</span>std_noise_yaw_dd <span class="token operator">*</span> self<span class="token punctuation">.</span>std_noise_yaw_dd<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="65"></td><td><pre>        temp<span class="token operator">=</span>np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="66"></td><td><pre>        temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> dt <span class="token operator">*</span> dt <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="67"></td><td><pre>        temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> dt <span class="token operator">*</span> dt <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="68"></td><td><pre>        temp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> dt</pre></td></tr><tr><td data-num="69"></td><td><pre>        temp<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> dt <span class="token operator">*</span> dt</pre></td></tr><tr><td data-num="70"></td><td><pre>        temp<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> dt</pre></td></tr><tr><td data-num="71"></td><td><pre>        <span class="token comment">############## 更新 Q ########################</span></pre></td></tr><tr><td data-num="72"></td><td><pre>        self<span class="token punctuation">.</span>Q <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>temp<span class="token punctuation">,</span> Q_v<span class="token punctuation">)</span><span class="token punctuation">,</span> temp<span class="token punctuation">.</span>T<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="73"></td><td><pre>    </pre></td></tr><tr><td data-num="74"></td><td><pre>        b1<span class="token operator">=</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>J_A<span class="token punctuation">,</span>self<span class="token punctuation">.</span>P<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="75"></td><td><pre>        b2<span class="token operator">=</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>b1<span class="token punctuation">,</span>np<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>self<span class="token punctuation">.</span>J_A<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="76"></td><td><pre>        pk_<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token operator">+</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>self<span class="token punctuation">.</span>Q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="77"></td><td><pre>        <span class="token comment">############################################ 更新部分</span></pre></td></tr><tr><td data-num="78"></td><td><pre>        <span class="token comment"># Kk = Pk_*J_Hk'/(J_Hk*Pk_*Hk'+R)</span></pre></td></tr><tr><td data-num="79"></td><td><pre>        c1 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>pk_<span class="token punctuation">,</span> np<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>self<span class="token punctuation">.</span>H<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="80"></td><td><pre>        c2 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>H<span class="token punctuation">,</span> pk_<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="81"></td><td><pre>        c3 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>c2<span class="token punctuation">,</span> np<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>self<span class="token punctuation">.</span>H<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="82"></td><td><pre>        c4 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>c3<span class="token punctuation">)</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>self<span class="token punctuation">.</span>R<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="83"></td><td><pre>        c5 <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>matrix_power<span class="token punctuation">(</span>c4<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="84"></td><td><pre>        self<span class="token punctuation">.</span>K <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>c1<span class="token punctuation">,</span> c5<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="85"></td><td><pre></pre></td></tr><tr><td data-num="86"></td><td><pre>        <span class="token comment"># Xk = Xk_+Kk(Zk-Hk*Xk_)</span></pre></td></tr><tr><td data-num="87"></td><td><pre>        d1 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>H<span class="token punctuation">,</span> xk_<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="88"></td><td><pre>        d2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>self<span class="token punctuation">.</span>z<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>d1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="89"></td><td><pre>        d3 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>K<span class="token punctuation">,</span> d2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="90"></td><td><pre>        self<span class="token punctuation">.</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>xk_<span class="token punctuation">)</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>d3<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="91"></td><td><pre>        self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span> self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="92"></td><td><pre>        </pre></td></tr><tr><td data-num="93"></td><td><pre>        <span class="token comment"># Pk = Pk_-Kk*J_Hk*Pk_</span></pre></td></tr><tr><td data-num="94"></td><td><pre>        e1 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>K<span class="token punctuation">,</span> self<span class="token punctuation">.</span>H<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="95"></td><td><pre>        e2 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>e1<span class="token punctuation">,</span> pk_<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="96"></td><td><pre>        self<span class="token punctuation">.</span>P <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>pk_<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>e2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="97"></td><td><pre>        <span class="token comment">#print(self.R)</span></pre></td></tr></tbody></table></figure><ul><li>   航向角小于0.0001时，xk\_ = \left[   \matrix{     v*\Delta t*cos(航向)+x[0]\\     v*\Delta t*sin(航向)+x[1]\\     v\\     航向 \\     0.0001 \\   }    \hspace{1cm}\right]</li><li>   J\_A = \left[   \matrix{     1 &amp; 0 &amp; \Delta t*cos(航向) &amp; -\Delta t*v*sin(航向) &amp; 0\\     0 &amp; 1 &amp; \Delta t*sin(航向) &amp; \Delta t*v*cos(航向) &amp; 0\\     0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\     0 &amp; 0 &amp; 0 &amp; 1 &amp; \Delta t\\     0 &amp; 0 &amp; 0 &amp; 0 &amp; 1   }   \right]</li></ul><p>​</p><p><strong>航向角大于等于 0.0001 时，</strong></p><ul><li>\small xk\_ = \left[\matrix{  v/航向角速度*sin(航向角速度*\Delta t+航向)-v *sin(航向)/航向角速度 + x[0]\\  -v/航向角速度 * cos(航向角速度 * \Delta t+航向) + v /航向角速度 * cos(航向) + x[1]\\  v\\  control\_psi(航向角速度*\Delta t+航向角)\\  航向角速度 }\hspace{3cm}\right]</li><li><figure class="highlight txt"><figcaption data-lang="txt"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>J_A02 = 1 / 航向角速度 * (sin(dt * 航向角速度 + 航向) - sin(航向))</pre></td></tr><tr><td data-num="2"></td><td><pre>        J_A03 = v / 航向角速度 * (cos(dt * 航向角速度 + 航向) - cos(航向))</pre></td></tr><tr><td data-num="3"></td><td><pre>        J_A04 = (dt * v / 航向角速度) * sin(dt * 航向角速度 + 航向) -(v /(航向角速度 ** 2)) * (cos(dt * 航向角速度 + 航向) - cos(航向))</pre></td></tr><tr><td data-num="4"></td><td><pre>        J_A12 = 1 / 航向角速度 * (cos(航向) - cos(dt * 航向角速度 + 航向))</pre></td></tr><tr><td data-num="5"></td><td><pre>        J_A13 = v / 航向角速度 * (sin(dt * 航向角速度 + 航向) - sin(航向))</pre></td></tr><tr><td data-num="6"></td><td><pre>        J_A14 = (dt * v / 航向角速度 )* cos(dt * 航向角速度 + 航向) - (v/(航向角速度 ** 2)) * (sin(航向) - sin(dt * 航向角速度 + 航向))</pre></td></tr><tr><td data-num="7"></td><td><pre>    ```</pre></td></tr></tbody></table></figure></li><li>J\_A = \left[\matrix{  1 &amp; 0 &amp; J\_A02 &amp; J\_A03 &amp; J\_A04\\  0 &amp; 1 &amp; J\_A12 &amp; J\_A13 &amp; J\_A14\\  0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 1 &amp; \Delta t\\  0 &amp; 0 &amp; 0 &amp; 0 &amp; 1}\right]</li><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>b</mi><mn>1</mn></msub><mo>=</mo><mi>J</mi><mi mathvariant="normal">_</mi><mi>A</mi><mo>∗</mo><mi>P</mi><mspace linebreak="newline"></mspace><msub><mi>b</mi><mn>2</mn></msub><mo>=</mo><msub><mi>b</mi><mn>1</mn></msub><mo>∗</mo><mi>J</mi><mi mathvariant="normal">_</mi><msup><mi>A</mi><mi>T</mi></msup><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">b_1 = J\_A*P\\b_2 = b_1*J\_A^{T}\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.201331em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p><p>c_1 = pk_<em>H^T\<br>c_2 = H</em>pk_\<br>c_3 = c_2<em>H^T\<br>c_4 = c_3+R\<br>c_5 = c_4^{-1}\<br>K = c_1</em>c_5</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p><p>d_1 = H<em>xk_\<br>d_2 = z-d_1\<br>d_3 = K</em>d_2\<br>x = xk_+d_3\<br> 航向 = control_psi (航向)\</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p><p>e_1 = K<em>H\<br>e_2 = e_1</em>pk_\<br>P = pk_-e_2</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 卡尔曼滤波系列算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 参数准备 </tag>
            
            <tag> 参数初始化 </tag>
            
            <tag> 函数定义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>封装</title>
      <link href="/2023/02/09/%E9%BB%91%E9%A9%ACcpp%E7%AC%94%E8%AE%B0/%E5%B0%81%E8%A3%85/"/>
      <url>/2023/02/09/%E9%BB%91%E9%A9%ACcpp%E7%AC%94%E8%AE%B0/%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="一-封装的意义"><a class="anchor" href="#一-封装的意义">#</a> 一。封装的意义</h2><h3 id="1-将属性和行为作为一个整体表现生活中的事物"><a class="anchor" href="#1-将属性和行为作为一个整体表现生活中的事物">#</a> 1. 将属性和行为作为一个整体，表现生活中的事物</h3><h3 id="2-将属性和行为加以权限控制"><a class="anchor" href="#2-将属性和行为加以权限控制">#</a> 2. 将属性和行为加以权限控制</h3><ul><li>语法：class 类名（访问权限：属性 / 行为）；</li><li>属性使用变量，行为使用函数</li></ul><h3 id="3-属性和行为放在不同的权限中加以控制"><a class="anchor" href="#3-属性和行为放在不同的权限中加以控制">#</a> 3. 属性和行为放在不同的权限中，加以控制</h3><p>访问权限有三种：public、protected、private</p><ol><li><p>public：类内外均可访问</p></li><li><p>protected: 类内可以访问，类外不可以访问 儿子可以访问父亲的保护内容</p></li><li><p>private：类内可以访问，类外不可以访问 儿子不可以访问父亲的私有内容</p></li></ol><h2 id="二-class和struct的区别"><a class="anchor" href="#二-class和struct的区别">#</a> 二. class 和 struct 的区别</h2><ol><li>struct 默认权限为公共</li><li>class 默认权限是私有</li></ol><h2 id="三-成员属性设置为私有"><a class="anchor" href="#三-成员属性设置为私有">#</a> 三。成员属性设置为私有</h2><ol><li>优点 1：将所有成员属性设置为私有，可以控制读写权限</li><li>优点 2：对于写权限，我们可以检测数据的有效性</li><li>类内给出设置和输出成员变量的函数，主函数可以通过设置函数和输出函数读写成员变量。<br>如下代码：</li></ol><pre><code class="language-c++">class Person{public:void setName(string name){m_Age = 0;m_Name = name;}string getName(){return m_Name;}int getAge(){return m_Age;}void setAge(int age){if(age&lt;0||age&gt;150){m_Age = 0;cout&lt;&lt;"你这个老妖精!"&lt;&lt;endl;return;}m_Age = age;}void setLover(string lover){m_Lover = lover;}private:string m_Name;int m_Age;string m_Lover;};</code></pre><h2 id="四-案例-设计立方体类"><a class="anchor" href="#四-案例-设计立方体类">#</a> 四。案例 -- 设计立方体类</h2><ul><li>求出立方体的面积和体积</li><li>分别用全局函数和成员函数判断两个立方体是否相等</li></ul><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/image-20230209202331391.png" alt="image-20230209202331391"></p><ul><li>全局函数判断是否相等：</li></ul><pre><code class="language-c++">bool isame(Cube &amp;c1, Cube &amp;c2){if(c1.getL() == c2.getL() &amp;&amp; (c1.getW() == c2.getW() &amp;&amp; (c1.getH() == c2.getH)){return true;}       return false;}</code></pre><ul><li>成员函数判断是否相等：</li></ul><pre><code class="language-c++">class Cube{public:int m_L;int m_W;int m_H;int getL()    {        return m_L;    }    int getW()    {        return m_W;    }    int getH()    {        return m_H;    }    int setL(int l)    {        m_L = l;    }     int setW(int w)    {        m_W = w;    }        int setH(int h)    {        m_H = h;    }   int size(){return 2*m_L*m_W+2*m_L*m_H+2*m_W*m_H;}int volume(){return m_W*m_H*m_L;}    bool isame(Cube &amp;c)    {if(m_L == c.getL() &amp;&amp; m_W == c.getW() &amp;&amp; m_H == c.getH()){return true;}       return false;    }};</code></pre><h2 id="五-案例-点和圆的关系"><a class="anchor" href="#五-案例-点和圆的关系">#</a> 五。案例 -- 点和圆的关系</h2><ul><li>根据点与圆心距离与半径比较，判断点和圆的关系</li><li>略。</li><li><strong>类中可以允许存在类成员变量和函数</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 黑马c++学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 封装的意义 </tag>
            
            <tag> class和struct的区别 </tag>
            
            <tag> 成员属性设置为私有 </tag>
            
            <tag> 案例-设计立方体类 </tag>
            
            <tag> 案例-点和圆的关系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水下威胁评估</title>
      <link href="/2023/02/09/710%E9%A1%B9%E7%9B%AE/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0%E6%80%BB%E7%BB%93/"/>
      <url>/2023/02/09/710%E9%A1%B9%E7%9B%AE/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="一-主要任务"><a class="anchor" href="#一-主要任务">#</a> 一、主要任务</h1><p>根据状态估计获得的目标的位置和运动状态信息，对水下运动目标（移动声靶、蛙人）进行威胁评估，给出目标对 AUV 的威胁程度。</p><h1 id="二-威胁评估指标选择"><a class="anchor" href="#二-威胁评估指标选择">#</a> 二、威胁评估指标选择</h1><p>距离（AUV 与目标）、碰撞风险、航向差、速度差、AUV 数量（同类目标数量）</p><h1 id="三-主要方法"><a class="anchor" href="#三-主要方法">#</a> 三、主要方法</h1><p><strong>基于结构熵的威胁要素权重评估、基于层次分析法威胁评估预测</strong></p><h2 id="31-数据准备"><a class="anchor" href="#31-数据准备">#</a> 3.1 数据准备</h2><p>给出某一时刻探测到目标信息：距离（AUV 与目标）、碰撞风险、航向差、速度差、AUV 数量</p><h2 id="32-基于结构熵的威胁要素权重评估"><a class="anchor" href="#32-基于结构熵的威胁要素权重评估">#</a> 3.2 基于结构熵的威胁要素权重评估</h2><p>设定 6 个专家，每个专家对 5 个指标的重要性进行排序</p><table><thead><tr><th></th><th>专家 1</th><th>专家 2</th><th>专家 3</th><th>专家 4</th><th>专家 5</th><th>专家 6</th></tr></thead><tbody><tr><td>距离（AUV 与目标）</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td></tr><tr><td>碰撞风险</td><td>2</td><td>1</td><td>4</td><td>3</td><td>6</td><td>5</td></tr><tr><td>航向差</td><td>2</td><td>3</td><td>1</td><td>4</td><td>6</td><td>5</td></tr><tr><td>速度差</td><td>3</td><td>2</td><td>1</td><td>4</td><td>5</td><td>6</td></tr><tr><td>AUV 数量</td><td>6</td><td>4</td><td>2</td><td>1</td><td>3</td><td>5</td></tr></tbody></table><p>给定认识度权重 ： imp_weight = [0.3,0.23,0.17,0.1,0.1,0.1]</p><h3 id="321-计算隶属度矩阵d"><a class="anchor" href="#321-计算隶属度矩阵d">#</a> 3.2.1 计算隶属度矩阵 D</h3><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> kk <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">6</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token keyword">for</span> jj <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span></pre></td></tr><tr><td data-num="3"></td><td><pre>            <span class="token function">F</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token function">imp_sort</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token function">imp_sort</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token function">imp_sort</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token function">D</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span><span class="token function">F</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token function">imp_sort</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token comment">%M(kk,jj) = log(m-imp_sort(kk,jj))/log(m-1)-1+(m-1)/(m-imp_sort(kk,jj));</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token keyword">end</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">end</span></pre></td></tr></tbody></table></figure><h3 id="322-计算每个指标的平均认识度c"><a class="anchor" href="#322-计算每个指标的平均认识度c">#</a> 3.2.2 计算每个指标的平均认识度 C</h3><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token keyword">for</span> nn <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">6</span></pre></td></tr><tr><td data-num="3"></td><td><pre>             <span class="token function">C</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">C</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">D</span><span class="token punctuation">(</span>nn<span class="token punctuation">,</span>mm<span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">imp_weight</span><span class="token punctuation">(</span>nn<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token keyword">end</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">end</span></pre></td></tr></tbody></table></figure><h3 id="323-计算每个指标的认识盲度b和总体认识度a"><a class="anchor" href="#323-计算每个指标的认识盲度b和总体认识度a">#</a> 3.2.3 计算每个指标的认识盲度 B 和总体认识度 A</h3><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token keyword">for</span> nn <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">6</span></pre></td></tr><tr><td data-num="3"></td><td><pre>             <span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">D</span><span class="token punctuation">(</span>nn<span class="token punctuation">,</span>mm<span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">C</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">imp_weight</span><span class="token punctuation">(</span>nn<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token keyword">end</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token function">A</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">C</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span><span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">end</span></pre></td></tr></tbody></table></figure><h3 id="324-对总体认识度a进行归一化得到目标威胁评估指标的权值"><a class="anchor" href="#324-对总体认识度a进行归一化得到目标威胁评估指标的权值">#</a> 3.2.4 对总体认识度 A 进行归一化，得到目标威胁评估指标的权值</h3><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token function">omega</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">A</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">end</span></pre></td></tr></tbody></table></figure><h3 id="325-结果"><a class="anchor" href="#325-结果">#</a> 3.2.5 结果</h3><p><strong>omega = (0.2039,0.1668,0.2382,0.1523,0.2389)</strong></p><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">% 使用一个函数实现</span></pre></td></tr><tr><td data-num="2"></td><td><pre>omega <span class="token operator">=</span> <span class="token function">weight_estimation</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 权重确定</span></pre></td></tr></tbody></table></figure><h2 id="33-基于层次分析法威胁评估预测"><a class="anchor" href="#33-基于层次分析法威胁评估预测">#</a> 3.3 基于层次分析法威胁评估预测</h2><h3 id="331-数据准备"><a class="anchor" href="#331-数据准备">#</a> 3.3.1 数据准备</h3><table><thead><tr><th>距离（AUV 与目标）</th><th>碰撞风险</th><th>航向差</th><th>速度差</th><th>AUV 数量（同类数量）</th></tr></thead><tbody><tr><td>13</td><td>14.34</td><td>0.924</td><td>0.047</td><td>1</td></tr><tr><td>12.25</td><td>14.25</td><td>1.1</td><td>0.047</td><td>1</td></tr><tr><td>13.04</td><td>15.04</td><td>1.281</td><td>0.047</td><td>1</td></tr><tr><td>11.05</td><td>13.05</td><td>1.462</td><td>0.049</td><td>1</td></tr><tr><td>11.81</td><td>13.81</td><td>1.635</td><td>0.049</td><td>2</td></tr><tr><td>11.67</td><td>13.67</td><td>1.656</td><td>0.0492</td><td>2</td></tr></tbody></table><h3 id="332-计算每个指标的判断矩阵"><a class="anchor" href="#332-计算每个指标的判断矩阵">#</a> 3.3.2 计算每个指标的判断矩阵</h3><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> t <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>n</pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">for</span> nn <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m</pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m</pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token keyword">if</span> t <span class="token operator">~=</span> <span class="token number">2</span> <span class="token operator">||</span> t <span class="token operator">~=</span>n</pre></td></tr><tr><td data-num="5"></td><td><pre>                matrix<span class="token punctuation">{</span>t<span class="token punctuation">}</span><span class="token punctuation">(</span>mm<span class="token punctuation">,</span>nn<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">new_data</span><span class="token punctuation">(</span>nn<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">new_data</span><span class="token punctuation">(</span>mm<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token keyword">else</span></pre></td></tr><tr><td data-num="7"></td><td><pre>                matrix<span class="token punctuation">{</span>t<span class="token punctuation">}</span><span class="token punctuation">(</span>mm<span class="token punctuation">,</span>nn<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">new_data</span><span class="token punctuation">(</span>mm<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">new_data</span><span class="token punctuation">(</span>nn<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token keyword">end</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token keyword">end</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">end</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">end</span></pre></td></tr></tbody></table></figure><h3 id="333-构造特征向量矩阵w"><a class="anchor" href="#333-构造特征向量矩阵w">#</a> 3.3.3 构造特征向量矩阵 W</h3><p>根据每个指标的判断矩阵计算这个指标的特征向量矩阵 W</p><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> t <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>n</pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m</pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token function">W</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span>matrix<span class="token punctuation">{</span>t<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>mm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token keyword">end</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">end</span></pre></td></tr></tbody></table></figure><ul><li><p>距离（AUV 与目标）判断矩阵</p><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/%E5%88%A4%E6%96%AD%E7%9F%A9%E9%98%B5.png" alt="判断矩阵"></p></li></ul><h3 id="334-计算威胁评估指标并进行排序"><a class="anchor" href="#334-计算威胁评估指标并进行排序">#</a> 3.3.4 计算威胁评估指标并进行排序</h3><p>每个指标的特征向量矩阵 W × 每个指标的权值 omega</p><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>threat_degree <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">for</span> uu <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m</pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token function">threat_degree</span><span class="token punctuation">(</span>uu<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">omega</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">W</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>uu<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">end</span></pre></td></tr></tbody></table></figure><h3 id="335-最终结果"><a class="anchor" href="#335-最终结果">#</a> 3.3.5 最终结果</h3><p>0.1924 ， 0.1843 ， 0.1676 ， 0.1623 ， 0.1487， 0.1447</p><h1 id="四-总结"><a class="anchor" href="#四-总结">#</a> 四、总结</h1><p>仿真层面：使用仿真系统获取到的数据，假定某一时刻的距离（AUV 与目标）、碰撞风险、航向差、速度差、AUV 数量，然后计算获得结果。</p><p>实际：需要 AUV 进行下海实验，获取真实目标的信息</p><p>验证：</p><ol><li><p>理解一：将本实验使用的层次分析法和其他方法（比如主成分分析法）进行对比，验证它的优势。</p></li><li><p>理解二：使用真实目标状态信息算出的威胁评估值和使用状态估计出来的目标状态信息进行比较。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> project_710 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习路线</title>
      <link href="/2023/02/06/others/C++%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
      <url>/2023/02/06/others/C++%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/C%2B%2B%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.png" alt="C++学习路线"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>论文写作技巧</title>
      <link href="/2023/02/06/Writing/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/"/>
      <url>/2023/02/06/Writing/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="一-学术论文两要素专业的知识-科学的表达"><a class="anchor" href="#一-学术论文两要素专业的知识-科学的表达">#</a> 一、学术论文两要素：专业的知识、科学的表达</h1><h2 id="1-专业的知识包括以下特点你写的这篇文章要具备的要素"><a class="anchor" href="#1-专业的知识包括以下特点你写的这篇文章要具备的要素">#</a> 1. 专业的知识包括以下特点（你写的这篇文章要具备的要素）</h2><ul><li><p>新颖性：创新点</p></li><li><p>普适性：提出的方法、理论、发现、实验等不仅适用于单一的情况</p></li><li><p>学术性：从项目中提炼科学问题</p></li></ul><h2 id="2-科学的表达"><a class="anchor" href="#2-科学的表达">#</a> 2. 科学的表达</h2><ul><li>清晰的表达思路：想好文章的中心思想，为了论证它怎么摆事实、讲道理；（围绕基于 xx 的一种方法，围绕方法进行验证，实验和结果展示（摆事实），这些结果说明了这个方法好（讲道理））</li><li>良好的文章结构：题目、摘要、前言、问题描述、方法、验证、结论</li><li>公认的科学语言：要用业内的专业术语来表述提出的方法或理论</li></ul><h1 id="二-论文选题"><a class="anchor" href="#二-论文选题">#</a> 二、论文选题</h1><h2 id="1-阅读国内外本领域高水平的大学博士论文"><a class="anchor" href="#1-阅读国内外本领域高水平的大学博士论文">#</a> 1. 阅读国内外本领域高水平的大学博士论文</h2><p>可以获得第一手全面的背景、方法、逻辑以及进展</p><h2 id="2-广泛阅读高水平期刊论文学会检索文献"><a class="anchor" href="#2-广泛阅读高水平期刊论文学会检索文献">#</a> 2. 广泛阅读高水平期刊论文（学会检索文献）</h2><p>看什么决定想什么，做什么，如何做</p><h2 id="3-确定论文的方向确定几个可能的内容"><a class="anchor" href="#3-确定论文的方向确定几个可能的内容">#</a> 3. 确定论文的方向，确定几个可能的内容</h2><ul><li>很难在选题阶段就将要做的内容 “算计” 很全面</li><li>关键是把握方向，研究过程中不停地修正</li><li>很多论文与选题报告相差甚远</li></ul><h1 id="三-选题建议"><a class="anchor" href="#三-选题建议">#</a> 三、选题建议</h1><p><strong>1. 本领域国际学术界研究热点但未能突破的问题</strong><br>模仿别人，跟风随大流，容易出成果，比较难出高水平成果（跟别人解决一样的问题，使用不同的方法，并且解决得比他好）</p><p><strong>2. 基于课题组的学术成果进行拓展延伸（做的好的论文可以进行拓展研究）</strong><br>可能并非当前热门的领域，但研究扎实，论文水平高<br><strong> 3. 当前工程中尚未解决的难题（项目过程中发现的问题）</strong><br>需要提炼科学问题，比较难，很有价值<br><strong> 4. 考虑课题组的实验条件、经费及个人兴趣</strong></p><h1 id="四-如何研究"><a class="anchor" href="#四-如何研究">#</a> 四、如何研究</h1><ol><li>尽快建立自己的信心和兴趣：建立正反馈机制，不断制定小目标然后实现，逐渐找到科研的感觉；</li><li><strong>要制定严格的计划</strong>：计划完不成可以修正，但没计划可能无限拖延；</li><li>不放过任何灵感：时刻记录下自己的想法，不成熟的可以完善，不可行的再放弃；</li><li>研究的内容可以并行：不要被一个点卡住就止步，先做别的，再回过头来想新的方法。</li></ol><h1 id="五-创新点"><a class="anchor" href="#五-创新点">#</a> 五、创新点</h1><p><strong>干了别人没干过的事，就是创新</strong></p><ol><li>发现别人没发现的现象</li><li>提出别人没提出的理论或方法</li><li>解决了别人没解决的问题</li><li>设计了别人没做过的实验</li></ol><h1 id="六-创新的境界"><a class="anchor" href="#六-创新的境界">#</a> 六、创新的境界</h1><ol><li>无中生有（最高境界）</li><li>标新立异：原始创新，发现新问题，提出新方法；<br>**3. 新瓶装旧酒，旧瓶装新酒：提出新方法解决旧问题，发现新问题使用旧方法解决。</li><li>移花接木：旧问题，旧方法，新的排列组合 **</li><li>批判式创新<br>指出别人文献中的问题，并对其作出了解释。</li></ol><h1 id="七-基本学术道德和规范必须遵守"><a class="anchor" href="#七-基本学术道德和规范必须遵守">#</a> 七、基本学术道德和规范必须遵守</h1><h1 id="八-文献检索"><a class="anchor" href="#八-文献检索">#</a> 八、文献检索</h1><ul><li>中文检索库：</li><li>中国知网、东北大学学位论文（<span class="exturl" data-url="aHR0cHM6Ly8yMDIuMTE4LjguMjQvJUVGJUJDJTg5">https://202.118.8.24/）</span></li><li>外文检索库：IEEE (IEEE Xplore)、Elsevier (www.sciencedi)、Springer (<span class="exturl" data-url="aHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS8=">https://link.springer.com/</span>)、SAGE(<span class="exturl" data-url="aHR0cHM6Ly9qb3VybmFscy5zYWdlcHViLmNvbS8=">https://journals.sagepub.com/</span>)、</li><li>SCI-Hub 论文下载：(<span class="exturl" data-url="aHR0cHM6Ly90b29sLnlvdmlzdW4uY29tLw==">https://tool.yovisun.com/</span>)</li></ul><ul><li>检索收录：<br>EI：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZW5naW5lZXJpbmd2aWxsYWdlLmNvbS8=">https://www.engineeringvillage.com/</span><br>SCI：web of science: <span class="exturl" data-url="aHR0cHM6Ly93d3cud2Vib2ZzY2llbmNlLmNvbS8=">https://www.webofscience.com/</span><br>SCI 分区：<span class="exturl" data-url="aHR0cDovL3d3dy5sZXRwdWIuY29tLmNuL2luZGV4LnBocD9wYWdlPWpvdXJuYWxhcHA=">http://www.letpub.com.cn/index.php?page=journalapp</span></li></ul><h1 id="九-阅读文献的目的"><a class="anchor" href="#九-阅读文献的目的">#</a> 九、阅读文献的目的</h1><ol><li>研究该领域的背景和进展</li><li>了解研究热点和前沿</li><li>寻找前人研究的不足、缺陷</li><li>学习论文的写作技巧</li><li>学习他人提出的优秀的方法</li></ol><p><strong>步骤：</strong></p><ol><li>找 5～10 篇中文的博士论文和综述型期刊论文<br>博士论文：主要了解领域的背景、进展、主要研究方法和手段等，<strong>3～7 天一篇，英文论文 1-2 周一篇，重点关注前言和用了哪些方法，具体方法的细节看不懂没关系</strong></li><li>研究型论文（顶刊顶会）<br>了解领域内的热点、前沿，学习先进新颖的想法、方法，学习写作技巧，<strong>1 周 1 篇到 1 天 - N 篇，复现 1-3 篇经典高质量论文</strong></li></ol><h1 id="十-研究型论文阅读方法"><a class="anchor" href="#十-研究型论文阅读方法">#</a> 十、研究型论文阅读方法</h1><ol><li>看题目，研究对象和方法（1）</li><li>看作者，有没有大牛（10s）</li><li>看摘要，具体是什么问题，用了什么方法，取得了什么效果 (5~10)</li><li>前言，建模，方法，验证统统过</li><li>看原理图，整体框架图（3～5）</li><li>方法和我们的方向关系密切的话就仔细看，公式推导和细节（20～30）</li><li>看图，是否表达了需要表达的信息（画得好的可以仿照着画，2～3）</li><li>看结论，贡献和效果</li></ol><h1 id="十一-引用论文的技巧"><a class="anchor" href="#十一-引用论文的技巧">#</a> 十一、引用论文的技巧</h1><ol><li>数量要多（全面），20 起步，30 合格，40 优秀</li><li>质量要高（水准）：<br>高水平 SCI 期刊论文：参考文献的主体构成<ul><li>权威会议的论文：不要过多引用，0～5 篇</li><li>经典、权威的英文专著：适当引用 1～2 部</li><li>中文文献和非 SCI 论文：能少则少</li></ul></li></ol><h1 id="十二-写作建议"><a class="anchor" href="#十二-写作建议">#</a> 十二、写作建议</h1><ol><li>一气呵成</li><li>写作和实践相结合：白天写论文，晚上做实验 / 调仿真</li><li>制定计划，严格执行，尽快完成初稿</li><li>反复修改（修改 10 遍）</li></ol><h1 id="十三-写作顺序"><a class="anchor" href="#十三-写作顺序">#</a> 十三、写作顺序</h1><ol><li>题目 / 摘要（初步写一个）</li><li>问题描述 / 建立模型</li><li>方法和验证分析</li><li>结论</li><li>前言</li><li>摘要（认真修改）：表述前因后果讲清楚、创新点更加详细、贡献更加突出<ul><li>描述对象 / 问题及其重要性</li><li>说明难点或者未解决的难题</li><li>本论文提出了什么方法</li><li>提出的方法是怎样实现的 / 解决问题的</li><li>方法取得了什么效果，有什么贡献，有哪些拓展应用，未来还能怎么研究等等</li></ul></li><li>题目（反复推敲）</li></ol><h1 id="十四-新手第一篇先抄袭再超越"><a class="anchor" href="#十四-新手第一篇先抄袭再超越">#</a> 十四、新手第一篇 —— 先抄袭再超越</h1><ol><li>找一篇与自己研究内容最类似的高水平论文</li><li>反复阅读（3～5 遍）</li><li>学习论文中的表达方式（问题描述、结果分析等）</li><li>对照着写论文（卡壳了就看看别人怎么写的）</li><li>过程中要想清楚自己的论文的优势</li><li>写完反复修改语言</li></ol><ul><li>题目：</li></ul><ol><li>对象 + 问题 + 方法<br> XXX（Method）of XXX (object) for XXX (problem)</li><li>对象 / 问题（可以简化）+ 方法（描述其创新性、独特性）<strong>用这个</strong><br> XXX（Method）of XXX（object/problem）with/based on/considering XXX (characteristics)</li><li>对象 / 问题 + 方法（描述其创新性和普适性）<br>XXX (Method) of XXX（object/problem）with/based on/considering XXX (characteristics) + ??(设计和实验)</li></ol><h1 id="十五-前言"><a class="anchor" href="#十五-前言">#</a> 十五、前言</h1><ol><li>交代研究背景</li><li>说明研究内容的重要性</li><li><strong>目前研究的不足</strong></li><li>提出研究的问题</li><li>简要说明解决方法</li><li>说明为什么用上述方法</li><li><strong>创新点和贡献</strong></li><li>给出文章结构</li></ol><p><strong>内容：</strong></p><ol><li>问题背景</li><li>研究进展</li><li>问题描述</li><li>动机和创新点</li><li>文章结构（有加有不加）</li></ol><h1 id="十六-介绍他人工作"><a class="anchor" href="#十六-介绍他人工作">#</a> 十六、介绍他人工作</h1><p>** 吹：** 正面积极地评价他人工作，使用修饰词，如 new、novel、firstly、greatly、effective、important 等，篇幅长<br><strong>黑：委婉</strong>前人研究的不足，引出本文的工作（研究的问题），少用 but, 用 however，不要直接评论他人工作不足，而是说某个问题前面研究没考虑。话不要说死，留后路，as far as authors/we know</p><h1 id="十七-建模和问题描述"><a class="anchor" href="#十七-建模和问题描述">#</a> 十七、建模和问题描述</h1><p><strong>归纳建立一个简洁又不失深度的问题 / 数学模型</strong><br><strong> 1. 建立模型</strong><br>自己提出的模型，要重点描述<br>引用别人的就简单描述<br>自己的改进的部分，重点描述改进的部分<br><strong> 2. 归纳问题</strong><br>科学问题，有学术性，专业的学术语言</p><h1 id="十八-仿真和实验"><a class="anchor" href="#十八-仿真和实验">#</a> 十八、仿真和实验</h1><p>设计一个有说服力的实验 / 仿真验证，选择具有代表性的，可以出好看的图片的实验<br>多进行<strong>消融实验</strong>，结果分析充分详尽（可以学习别人的）</p><h1 id="十九-结论"><a class="anchor" href="#十九-结论">#</a> 十九、结论</h1><p><strong>总结一个有学术价值的结论</strong><br>本文针对 XX 问题，提出了 XX 方法，从而解决了其中 XX 难题，取得了 XX 效果（有数据最好）。<br>本文的主要贡献在于：1）提出了 XX 方法，和之前研究相比有什么特点或创新；2）解决了什么问题，克服了哪些困难，取得了什么样的效果 3）该方法还能扩展应用到哪些方面。<br>本文工作还有哪些不足，未来工作将从哪几个方面进行。<strong>（要委婉）</strong></p>]]></content>
      
      
      <categories>
          
          <category> 论文写作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Typora使用方法</title>
      <link href="/2023/02/06/others/Typora%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2023/02/06/others/Typora%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="一-markdown纯文本基本语法"><a class="anchor" href="#一-markdown纯文本基本语法">#</a> 一、Markdown 纯文本基本语法</h1><h2 id="1-标题"><a class="anchor" href="#1-标题">#</a> 1. 标题</h2><pre><code># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><ul><li>注意事项：# 号后面要有空格</li></ul><h2 id="2-字体"><a class="anchor" href="#2-字体">#</a> 2. 字体</h2><pre><code>**加粗**__加粗__*倾斜*_倾斜_***加粗倾斜***~~加删除线~~</code></pre><ul><li>注意事项：强调也可以直接插在文字中间，但是如果你的 * 和 _ 两边都有空白的话，它们就只会被当成普通的符号。 如果要在文字前后直接插入普通的星号或底线，你可以用反斜线 \ 。</li></ul><h2 id="3-分割线"><a class="anchor" href="#3-分割线">#</a> 3. 分割线</h2><pre><code>* * ****************- - -__________________</code></pre><h2 id="4-引用"><a class="anchor" href="#4-引用">#</a> 4. 引用</h2><pre><code>&gt; xxxxxxxxx&gt;&gt; xxxxxxxxxx&gt;&gt;&gt; xxxxxxxxxxx........</code></pre><h2 id="5-列表"><a class="anchor" href="#5-列表">#</a> 5. 列表</h2><h3 id="51-有序列表"><a class="anchor" href="#51-有序列表">#</a> 5.1 有序列表</h3><pre><code>- 列表内容+ 列表内容* 列表内容注意：- + * 跟内容之间都要有一个空格</code></pre><h3 id="52-无序列表"><a class="anchor" href="#52-无序列表">#</a> 5.2 无序列表</h3><pre><code>1. 列表内容2. 列表内容3. 列表内容注意：序号跟内容之间要有空格</code></pre><h3 id="53-无序列表嵌套"><a class="anchor" href="#53-无序列表嵌套">#</a> 5.3  无序列表嵌套</h3><pre><code>* 一级无序列表内容   * 二级无序列表内容   * 二级无序列表内容   * 二级无序列表内容</code></pre><h2 id="6-表格"><a class="anchor" href="#6-表格">#</a> 6. 表格</h2><pre><code>表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略</code></pre><table><thead><tr><th>表头</th><th style="text-align:center">表头</th><th style="text-align:right">表头</th></tr></thead><tbody><tr><td>内容</td><td style="text-align:center">内容</td><td style="text-align:right">内容</td></tr><tr><td>内容</td><td style="text-align:center">内容</td><td style="text-align:right">内容</td></tr></tbody></table><h2 id="7-代码"><a class="anchor" href="#7-代码">#</a> 7. 代码</h2><pre><code>\```  代码...  代码...  代码...\```\ 是为了防止转译，实际是没有的。</code></pre><h1 id="二-markdown纯文本进阶语法"><a class="anchor" href="#二-markdown纯文本进阶语法">#</a> 二、Markdown 纯文本进阶语法</h1><h2 id="1-更改字体-大小-颜色"><a class="anchor" href="#1-更改字体-大小-颜色">#</a> 1. 更改字体、大小、颜色</h2><pre><code>&lt;font face="黑体"&gt;我是黑体字&lt;/font&gt;&lt;font face="微软雅黑"&gt;我是微软雅黑&lt;/font&gt;&lt;font face="STCAIYUN"&gt;我是华文彩云&lt;/font&gt;&lt;font color=red&gt;我是红色&lt;/font&gt;&lt;font color=#008000&gt;我是绿色&lt;/font&gt;&lt;font color=Blue&gt;我是蓝色&lt;/font&gt;&lt;font size=5&gt;我是尺寸&lt;/font&gt;&lt;font face="黑体" color=green size=5&gt;我是黑体，绿色，尺寸为5&lt;/font&gt;</code></pre><p>&lt;font face="黑体"&gt; 我是黑体字 &lt;/font&gt;<br>&lt;font face="微软雅黑"&gt; 我是微软雅黑 &lt;/font&gt;<br>&lt;font face="STCAIYUN"&gt; 我是华文彩云 &lt;/font&gt;<br>&lt;font color=red&gt; 我是红色 &lt;/font&gt;<br>&lt;font color=#008000&gt; 我是绿色 &lt;/font&gt;<br>&lt;font color=Blue&gt; 我是蓝色 &lt;/font&gt;<br>&lt;font size=5&gt; 我是尺寸 &lt;/font&gt;<br>&lt;font face="黑体" color=green size=5&gt; 我是黑体，绿色，尺寸为 5&lt;/font&gt;</p><h2 id="2-为文字添加背景色"><a class="anchor" href="#2-为文字添加背景色">#</a> 2. 为文字添加背景色</h2><pre><code>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=yellow&gt;背景色yellow&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</code></pre><p>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=yellow &gt; 背景色 yellow&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</p><h2 id="3-设置文字居中"><a class="anchor" href="#3-设置文字居中">#</a> 3. 设置文字居中</h2><pre><code>&lt;center&gt;居中&lt;/center&gt;&lt;p align="left"&gt;左对齐&lt;/p&gt;&lt;p align="right"&gt;右对齐&lt;/p&gt;</code></pre><p>&lt;center&gt; 居中 &lt;/center&gt;<br>&lt;p align="left"&gt; 左对齐 &lt;/p&gt;<br>&lt;p align="right"&gt; 右对齐 &lt;/p&gt;</p><h2 id="4-加入上下标"><a class="anchor" href="#4-加入上下标">#</a> 4. 加入上下标</h2><pre><code>H&lt;sub&gt;2&lt;/sub&gt;O  CO&lt;sub&gt;2&lt;/sub&gt;爆米&lt;sup&gt;TM&lt;/sup&gt;</code></pre><p>H&lt;sub&gt;2&lt;/sub&gt;O  CO&lt;sub&gt;2&lt;/sub&gt;<br> 爆米 &lt;sup&gt;TM&lt;/sup&gt;</p><h1 id="三-markdown进阶使用"><a class="anchor" href="#三-markdown进阶使用">#</a> 三、Markdown 进阶使用</h1><h2 id="1-超链接"><a class="anchor" href="#1-超链接">#</a> 1. 超链接</h2><h3 id="11-行内式"><a class="anchor" href="#11-行内式">#</a> 1.1 行内式</h3><pre><code>This is [an example](http://example.com/ "Title") inline link.[This link](http://example.net/) has no title attribute.</code></pre><p>This is <span class="exturl" data-url="aHR0cDovL2V4YW1wbGUuY29tLw==">an example</span> inline link.</p><p><span class="exturl" data-url="aHR0cDovL2V4YW1wbGUubmV0Lw==">This link</span> has no title attribute.</p><ul><li>如果想在新页面中打开的话用 html 语言的 a 标签代替</li></ul><pre><code>&lt;a href="www.baidu.com" target="_blank"&gt;超链接名&lt;/a&gt;</code></pre><p>&lt;a href="<span class="exturl" data-url="aHR0cDovL3d3dy5iYWlkdS5jb20=">www.baidu.com</span>"target="_blank"&gt; 超链接名 &lt;/a&gt;</p><h3 id="12-参考式"><a class="anchor" href="#12-参考式">#</a> 1.2 参考式</h3><pre><code>I get 10 times more traffic from [Google] [1] than from[Yahoo] [2] or [MSN] [3].  [1]: http://google.com/        "Google"  [2]: http://search.yahoo.com/  "Yahoo Search"  [3]: http://search.msn.com/    "MSN Search"</code></pre><pre><code>I get 10 times more traffic from [Google][] than from[Yahoo][] or [MSN][].  [google]: http://google.com/        "Google"  [yahoo]:  http://search.yahoo.com/  "Yahoo Search"  [msn]:    http://search.msn.com/    "MSN Search"</code></pre><h2 id="2-自动链接"><a class="anchor" href="#2-自动链接">#</a> 2. 自动链接</h2><pre><code>&lt;http://example.com/&gt;</code></pre><p><span class="exturl" data-url="aHR0cDovL2V4YW1wbGUuY29tLw==">http://example.com/</span></p><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/p2886693452.jpg" alt="p2886693452"></p><h2 id="3-插入并上传图片"><a class="anchor" href="#3-插入并上传图片">#</a> 3. 插入并上传图片</h2><ol><li>打开 typora 和 picgo</li><li>正常插入图片</li><li>右击上传图片 (github 的 resposibity 里的文件夹)</li></ol><h3 id="31-图片位置-居中左右"><a class="anchor" href="#31-图片位置-居中左右">#</a> 3.1 图片位置 -- 居中，左，右</h3><pre><code>&lt;div align=center&gt;![Alt pic] (http:...)如果想将图片位于右侧，只需要将center改为right</code></pre><h3 id="32-设置图片大小"><a class="anchor" href="#32-设置图片大小">#</a> 3.2 设置图片大小</h3><pre><code>&lt;img src="http:..." width = "100" height = "100" div align=right /&gt;</code></pre><h2 id="4-latex公式"><a class="anchor" href="#4-latex公式">#</a> 4. Latex 公式</h2><pre><code>$ X\stackrel{F}{\longrightarrow}Y $</code></pre><p>$ X\stackrel{F}{\longrightarrow}Y $</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>欢迎各位大佬观摩！</title>
      <link href="/2023/02/01/others/hello-world/"/>
      <url>/2023/02/01/others/hello-world/</url>
      
        <content type="html"><![CDATA[<p>​</p><p>没东西！唬人的！</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
