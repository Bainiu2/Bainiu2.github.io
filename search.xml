<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>对象特性</title>
      <link href="/2023/02/10/%E5%AF%B9%E8%B1%A1%E7%89%B9%E6%80%A7/"/>
      <url>/2023/02/10/%E5%AF%B9%E8%B1%A1%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="构造函数和析构函数">构造函数和析构函数</h2><p><strong>作用：对象的初始化和清理</strong> ### 1.构造函数语法：类名(){} + 构造函数，没有返回值也不写void +函数名称与类名相同 + 构造函数可以有参数，因此可以发生重载 +程序在调用对象时候自动调用构造，无需手动调用，而且只会调用一次</p><h3 id="析构函数语法类名">2. 析构函数语法：~类名()</h3><ul><li>析构函数，没有返回值也不写void</li><li>函数名称与类名相同，在名称前加上符号～</li><li>析构函数不可以有参数，因此不可以发生重载</li><li>对象在销毁前自动调用析构，无需手动调用，而且只会调用一次</li></ul>]]></content>
      
      
      <categories>
          
          <category> 黑马c++学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 构造函数和析构函数 </tag>
            
            <tag> 函数的分类以及调用 </tag>
            
            <tag> 拷贝构造函数调用时机 </tag>
            
            <tag> 构造函数调用规则 </tag>
            
            <tag> 深拷贝和浅拷贝 </tag>
            
            <tag> 初始化列表 </tag>
            
            <tag> 类对象作为类成员 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EKF算法（CTRV运动模型）</title>
      <link href="/2023/02/09/EKF/"/>
      <url>/2023/02/09/EKF/</url>
      
        <content type="html"><![CDATA[<h2 id="一参数准备">一、参数准备</h2><ul><li><p>控制变量矩阵 B = 0</p></li><li><p>状态控制向量 u = 0</p></li><li><p>卡尔曼增益 K （无需初始化）</p></li><li><p>观测值 z（外部输入，无需初始化）</p></li><li><p>先验估计协方差 P </p><pre class="line-numbers language-python" data-language="python"><code class="language-python">P <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 先验估计协方差</span><span class="token comment"># 主对角线是1，其他为0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p></p></li><li><p>滤波器输出状态 x = []</p></li><li><p>滤波器预测状态 G = []</p></li><li><p>状态转移矩阵 J_A = []<strong>与非线性系统的预测机制有关</strong></p></li><li><p>噪声协方差矩阵Q = []<strong>代表对控制系统的信任程度，预测过程上叠加一个高斯噪声，若希望跟踪的轨迹更光滑，可以调小</strong></p></li><li><p>观测矩阵H <strong>z = H * x, 状态：（坐标x, 坐标y, 速度x,速度y）,观测值：（坐标x, 坐标y）</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">H <span class="token operator">=</span> np<span class="token punctuation">.</span>eye<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>观测噪声协方差矩阵R<strong>代表对观测数据的信任程度，观测过程中存在一个高斯噪声，若观测结果中的值很准确，可以调小</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">R <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.6</span><span class="token comment"># 主对角线是1，其他为0</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="二参数初始化">二、参数初始化</h2><ul><li><p>B = 0</p></li><li><p>u = 0</p></li><li><p>K = null</p></li><li><p>z = null</p></li><li><p><span class="math display">\[P = \left[\matrix{  200 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\  0 &amp; 200 &amp; 0 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 10 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 10 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 0 &amp; 10\\}\right]\]</span></p></li><li><p><span class="math display">\[x = \left[\matrix{  坐标x &amp; 坐标y &amp; 速度 &amp; 航向 &amp; 航向角速度}\right]\]</span></p></li><li><p><span class="math display">\[G = \left[\matrix{  坐标x &amp; 坐标y &amp; 速度 &amp; 航向 &amp; 航向角速度}\right]\]</span></p></li><li><p><span class="math display">\[J\_A = \left[\matrix{  1 &amp; 0 &amp; \Delta t*cos(航向) &amp; -\Delta t*v*sin(航向) &amp;0\\  0 &amp; 1 &amp; \Delta t*sin(航向) &amp; \Delta t*v*cos(航向) &amp;0\\  0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 1 &amp; \Delta t\\  0 &amp; 0 &amp; 0 &amp; 0 &amp; 1}\right]\]</span></p></li><li><p>std_noise_a = 3 <strong>纵向加速度噪声</strong></p></li><li><p>std_noise_yaw_dd = 0.3 <strong>偏航角加速度噪声</strong></p></li><li><p><span class="math display">\[Q\_v = \left[\matrix{  (std\_noise\_a)^2  &amp; 0 \\  0 &amp; (std\_noise\_yaw\_dd)^2\\}\right]=\left[\matrix{  (\sigma_a)^2  &amp; 0 \\  0 &amp; (\sigma_{\psi}^{..})^2\\}\right]\]</span></p></li><li><p><span class="math display">\[temp = \left[\matrix{  0.5*(\Delta t)^2*cos(航向) &amp; 0\\  0.5*(\Delta t)^2*sin(航向) &amp; 0\\  \Delta t &amp; 0 \\  0 &amp; 0.5*(\Delta t)^2 \\  0 &amp; \Delta t \\}\right]\]</span></p></li><li><p><span class="math display">\[Q = (temp.*Q_v) * temp^{T}\]</span></p></li><li></li></ul><p><span class="math display">\[H = \left[\matrix{  1 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\  0 &amp; 1 &amp; 0 &amp; 0 &amp; 0\\}\right]\]</span></p><ul><li><span class="math display">\[R = \left[\matrix{  1 &amp; 0\\  0 &amp; 1\\}\right]\]</span></li></ul><h2 id="三函数定义">三、函数定义</h2><ol type="1"><li><p>控制航向角------psi角在 -pi ~ pi之间</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">control_psi</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>psi<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">while</span> <span class="token punctuation">(</span>psi <span class="token operator">&gt;</span> np<span class="token punctuation">.</span>pi <span class="token keyword">or</span> psi <span class="token operator">&lt;</span> <span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">if</span> psi <span class="token operator">&gt;</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">:</span>psi <span class="token operator">=</span> psi <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token keyword">if</span> psi <span class="token operator">&lt;</span> <span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">:</span>psi <span class="token operator">=</span> psi <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi<span class="token keyword">return</span> psi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>更新状态</p></li></ol><p></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>dt<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0.0001</span><span class="token punctuation">:</span><span class="token comment">#如果航向角速度很小</span>        v <span class="token operator">=</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment"># 速度</span>        heading <span class="token operator">=</span> self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 航向</span>           <span class="token comment">###########################################预测部分</span>        <span class="token comment"># xk_=g(xk,u)</span>        xk_ <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>v<span class="token operator">*</span>math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token operator">*</span>dt<span class="token operator">+</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        v<span class="token operator">*</span>math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token operator">*</span>dt<span class="token operator">+</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        v<span class="token punctuation">,</span>                        heading<span class="token punctuation">,</span>                        <span class="token number">0.0001</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                self<span class="token punctuation">.</span>G <span class="token operator">=</span> xk_        <span class="token comment">################更新####################</span>        v <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        heading <span class="token operator">=</span> self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>xk_<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        heading_rate <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>        <span class="token comment">###############使用新的航向计算J_A#############</span>        J_A02 <span class="token operator">=</span> dt<span class="token operator">*</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span>         J_A03 <span class="token operator">=</span> <span class="token operator">-</span>dt<span class="token operator">*</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span>        J_A04 <span class="token operator">=</span> <span class="token number">0</span>        J_A12 <span class="token operator">=</span> dt<span class="token operator">*</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span>        J_A13 <span class="token operator">=</span> dt<span class="token operator">**</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span>        J_A14 <span class="token operator">=</span> <span class="token number">0</span>           self<span class="token punctuation">.</span>J_A <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> J_A02<span class="token punctuation">,</span> J_A03<span class="token punctuation">,</span> J_A04<span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> J_A12<span class="token punctuation">,</span> J_A13<span class="token punctuation">,</span> J_A14<span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dt<span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token punctuation">]</span><span class="token punctuation">)</span>                        <span class="token keyword">else</span><span class="token punctuation">:</span>        one_divide_heading_rate <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>        heading_rate <span class="token operator">=</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>        v <span class="token operator">=</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        heading <span class="token operator">=</span> self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        xk_ <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>v <span class="token operator">*</span> one_divide_heading_rate <span class="token operator">*</span> math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading_rate <span class="token operator">*</span> dt<span class="token operator">+</span>heading<span class="token punctuation">)</span> <span class="token operator">-</span> v <span class="token operator">*</span> one_divide_heading_rate <span class="token operator">*</span> math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token operator">-</span>v <span class="token operator">*</span> one_divide_heading_rate <span class="token operator">*</span> math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading_rate <span class="token operator">*</span> dt<span class="token operator">+</span>heading<span class="token punctuation">)</span> <span class="token operator">+</span> v <span class="token operator">*</span> one_divide_heading_rate <span class="token operator">*</span> math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        v<span class="token punctuation">,</span>                        self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>heading_rate <span class="token operator">*</span> dt <span class="token operator">+</span> heading<span class="token punctuation">)</span><span class="token punctuation">,</span>                        heading_rate<span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>G <span class="token operator">=</span> xk_        <span class="token comment">#############更新##################</span>        v <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        heading <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>        heading_rate <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>        J_A02 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> heading_rate <span class="token operator">*</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">)</span>        J_A03 <span class="token operator">=</span> v <span class="token operator">/</span> heading_rate <span class="token operator">*</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">)</span>        J_A04 <span class="token operator">=</span> <span class="token punctuation">(</span>dt <span class="token operator">*</span> v <span class="token operator">/</span> heading_rate<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token punctuation">(</span>v <span class="token operator">/</span><span class="token punctuation">(</span>heading_rate <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>                    np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">)</span>        J_A12 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> heading_rate <span class="token operator">*</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span><span class="token punctuation">)</span>        J_A13 <span class="token operator">=</span> v <span class="token operator">/</span> heading_rate <span class="token operator">*</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">)</span>        J_A14 <span class="token operator">=</span> <span class="token punctuation">(</span>dt <span class="token operator">*</span> v <span class="token operator">/</span> heading_rate <span class="token punctuation">)</span><span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>v<span class="token operator">/</span><span class="token punctuation">(</span>heading_rate <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>                    np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>J_A <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> J_A02<span class="token punctuation">,</span> J_A03<span class="token punctuation">,</span> J_A04<span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> J_A12<span class="token punctuation">,</span> J_A13<span class="token punctuation">,</span> J_A14<span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dt<span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                            <span class="token punctuation">]</span><span class="token punctuation">)</span>    Q_v <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>std_noise_a <span class="token operator">*</span> self<span class="token punctuation">.</span>std_noise_a<span class="token punctuation">,</span> self<span class="token punctuation">.</span>std_noise_yaw_dd <span class="token operator">*</span> self<span class="token punctuation">.</span>std_noise_yaw_dd<span class="token punctuation">]</span><span class="token punctuation">)</span>    temp<span class="token operator">=</span>np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> dt <span class="token operator">*</span> dt <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span>    temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> dt <span class="token operator">*</span> dt <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span>    temp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> dt    temp<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> dt <span class="token operator">*</span> dt    temp<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> dt    <span class="token comment">############## 更新Q ########################</span>    self<span class="token punctuation">.</span>Q <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>temp<span class="token punctuation">,</span> Q_v<span class="token punctuation">)</span><span class="token punctuation">,</span> temp<span class="token punctuation">.</span>T<span class="token punctuation">)</span>    b1<span class="token operator">=</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>J_A<span class="token punctuation">,</span>self<span class="token punctuation">.</span>P<span class="token punctuation">)</span>    b2<span class="token operator">=</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>b1<span class="token punctuation">,</span>np<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>self<span class="token punctuation">.</span>J_A<span class="token punctuation">)</span><span class="token punctuation">)</span>    pk_<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token operator">+</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>self<span class="token punctuation">.</span>Q<span class="token punctuation">)</span>    <span class="token comment">############################################更新部分</span>    <span class="token comment"># Kk = Pk_*J_Hk'/(J_Hk*Pk_*Hk'+R)</span>    c1 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>pk_<span class="token punctuation">,</span> np<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>self<span class="token punctuation">.</span>H<span class="token punctuation">)</span><span class="token punctuation">)</span>    c2 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>H<span class="token punctuation">,</span> pk_<span class="token punctuation">)</span>    c3 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>c2<span class="token punctuation">,</span> np<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>self<span class="token punctuation">.</span>H<span class="token punctuation">)</span><span class="token punctuation">)</span>    c4 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>c3<span class="token punctuation">)</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>self<span class="token punctuation">.</span>R<span class="token punctuation">)</span>    c5 <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>matrix_power<span class="token punctuation">(</span>c4<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>    self<span class="token punctuation">.</span>K <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>c1<span class="token punctuation">,</span> c5<span class="token punctuation">)</span>       <span class="token comment"># Xk = Xk_+Kk(Zk-Hk*Xk_)</span>    d1 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>H<span class="token punctuation">,</span> xk_<span class="token punctuation">)</span>    d2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>self<span class="token punctuation">.</span>z<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>d1<span class="token punctuation">)</span>    d3 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>K<span class="token punctuation">,</span> d2<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>xk_<span class="token punctuation">)</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>d3<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span> self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># Pk = Pk_-Kk*J_Hk*Pk_</span>    e1 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>K<span class="token punctuation">,</span> self<span class="token punctuation">.</span>H<span class="token punctuation">)</span>    e2 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>e1<span class="token punctuation">,</span> pk_<span class="token punctuation">)</span>    self<span class="token punctuation">.</span>P <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>pk_<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>e2<span class="token punctuation">)</span>    <span class="token comment">#print(self.R)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p></p><ul><li><p><span class="math display">\[   航向角小于0.0001时，xk\_ = \left[   \matrix{     v*\Delta t*cos(航向)+x[0]\\     v*\Delta t*sin(航向)+x[1]\\     v\\     航向 \\     0.0001 \\   }   \right]   \]</span></p></li><li><p><span class="math display">\[   J\_A = \left[   \matrix{     1 &amp; 0 &amp; \Delta t*cos(航向) &amp; -\Delta t*v*sin(航向)&amp; 0\\     0 &amp; 1 &amp; \Delta t*sin(航向) &amp; \Delta t*v*cos(航向) &amp;0\\     0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\     0 &amp; 0 &amp; 0 &amp; 1 &amp; \Delta t\\     0 &amp; 0 &amp; 0 &amp; 0 &amp; 1   }   \right]   \]</span></p></li></ul><p>​</p><ul><li><p><span class="math display">\[航向角大于等于0.0001时，xk\_ = \left[\matrix{  v/航向角速度*sin(航向角速度*\Delta t+航向)-v *sin(航向)/航向角速度 +x[0]\\  -v/航向角速度 * cos(航向角速度 * \Delta t+航向) + v /航向角速度 *cos(航向) + x[1]\\  v\\  control\_psi(航向角速度*\Delta t+航向角)\\  航向角速度}\right]\]</span></p></li><li><div class="sourceCode" id="cb1"><pre class="sourceCode txt"><code class="sourceCode default"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>              J_A02 = 1 / 航向角速度 * (sin(dt * 航向角速度 + 航向) - sin(航向))</span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>              J_A03 = v / 航向角速度 * (cos(dt * 航向角速度 + 航向) - cos(航向))</span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>              J_A04 = (dt * v / 航向角速度) * sin(dt * 航向角速度 + 航向) -(v /(航向角速度 ** 2)) * (</span><span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>                          cos(dt * 航向角速度 + 航向) - cos(航向))</span><span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>              J_A12 = 1 / 航向角速度 * (cos(航向) - cos(dt * 航向角速度 + 航向))</span><span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>              J_A13 = v / 航向角速度 * (sin(dt * 航向角速度 + 航向) - sin(航向))</span><span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>              J_A14 = (dt * v / 航向角速度 )* cos(dt * 航向角速度 + 航向) - (v/(航向角速度 ** 2)) * (</span><span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>                          sin(航向) - sin(dt * 航向角速度 + 航向))</span></code></pre></div></li><li><p><span class="math display">\[J\_A = \left[\matrix{  1 &amp; 0 &amp; J\_A02 &amp; J\_A03 &amp; J\_A04\\  0 &amp; 1 &amp; J\_A12 &amp; J\_A13 &amp; J\_A14\\  0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 1 &amp; \Delta t\\  0 &amp; 0 &amp; 0 &amp; 0 &amp; 1}\right]\]</span></p></li><li><p><span class="math display">\[b_1 = J\_A*P\\b_2 = b_1*J\_A^{T}\\pk\_ = b_2+Q\]</span></p></li><li><p><span class="math display">\[c_1 = pk\_*H^T\\c_2 = H*pk\_\\c_3 = c_2*H^T\\c_4 = c_3+R\\c_5 = c_4^{-1}\\K = c_1*c_5\]</span></p></li><li><p><span class="math display">\[d_1 = H*xk\_\\d_2 = z-d_1\\d_3 = K*d_2\\x = xk\_+d_3\\航向 = control\_psi(航向)\\\]</span></p></li><li><p><span class="math display">\[e_1 = K*H\\e_2 = e_1*pk\_\\P = pk\_-e_2\]</span></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 卡尔曼滤波系列算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 参数准备 </tag>
            
            <tag> 参数初始化 </tag>
            
            <tag> 函数定义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>封装</title>
      <link href="/2023/02/09/%E5%B0%81%E8%A3%85/"/>
      <url>/2023/02/09/%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="一.-封装的意义">一. 封装的意义</h2><h3 id="将属性和行为作为一个整体表现生活中的事物">1.将属性和行为作为一个整体，表现生活中的事物</h3><h3 id="将属性和行为加以权限控制">2. 将属性和行为加以权限控制</h3><ul><li>语法：class 类名（访问权限：属性/行为）；</li><li>属性使用变量，行为使用函数</li></ul><h3 id="属性和行为放在不同的权限中加以控制">3.属性和行为放在不同的权限中，加以控制</h3><p>访问权限有三种：public、protected、private</p><ol type="1"><li><p>public：类内外均可访问</p></li><li><p>protected: 类内可以访问，类外不可以访问儿子可以访问父亲的保护内容</p></li><li><p>private：类内可以访问，类外不可以访问儿子不可以访问父亲的私有内容</p></li></ol><h2 id="二.-class和struct的区别">二. class和struct的区别</h2><ol type="1"><li>struct默认权限为公共</li><li>class默认权限是私有</li></ol><h2 id="三.-成员属性设置为私有">三. 成员属性设置为私有</h2><ol type="1"><li>优点1：将所有成员属性设置为私有，可以控制读写权限</li><li>优点2：对于写权限，我们可以检测数据的有效性</li><li>类内给出设置和输出成员变量的函数，主函数可以通过设置函数和输出函数读写成员变量。如下代码：</li></ol><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Person{public:void setName(string name){m_Age = 0;m_Name = name;}string getName(){return m_Name;}int getAge(){return m_Age;}void setAge(int age){if(age&lt;0||age&gt;150){m_Age = 0;cout&lt;&lt;"你这个老妖精!"&lt;&lt;endl;return;}m_Age = age;}void setLover(string lover){m_Lover = lover;}private:string m_Name;int m_Age;string m_Lover;};<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四.-案例--设计立方体类">四. 案例--设计立方体类</h2><ul><li>求出立方体的面积和体积</li><li>分别用全局函数和成员函数判断两个立方体是否相等</li></ul><figure><img src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/image-20230209202331391.png" alt="image-20230209202331391"><figcaption aria-hidden="true">image-20230209202331391</figcaption></figure><ul><li>全局函数判断是否相等：</li></ul><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">bool isame(Cube &amp;c1, Cube &amp;c2){if(c1.getL() == c2.getL() &amp;&amp; (c1.getW() == c2.getW() &amp;&amp; (c1.getH() == c2.getH)){return true;}       return false;}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>成员函数判断是否相等：</li></ul><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">class Cube{public:int m_L;int m_W;int m_H;int getL()    {        return m_L;    }    int getW()    {        return m_W;    }    int getH()    {        return m_H;    }    int setL(int l)    {        m_L = l;    }     int setW(int w)    {        m_W = w;    }        int setH(int h)    {        m_H = h;    }   int size(){return 2*m_L*m_W+2*m_L*m_H+2*m_W*m_H;}int volume(){return m_W*m_H*m_L;}    bool isame(Cube &amp;c)    {if(m_L == c.getL() &amp;&amp; m_W == c.getW() &amp;&amp; m_H == c.getH()){return true;}       return false;    }};<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五.-案例--点和圆的关系">五. 案例--点和圆的关系</h2><ul><li>根据点与圆心距离与半径比较，判断点和圆的关系</li><li>略。</li><li><strong>类中可以允许存在类成员变量和函数</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 黑马c++学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 封装的意义 </tag>
            
            <tag> class和struct的区别 </tag>
            
            <tag> 成员属性设置为私有 </tag>
            
            <tag> 案例-设计立方体类 </tag>
            
            <tag> 案例-点和圆的关系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水下威胁评估</title>
      <link href="/2023/02/09/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0%E6%80%BB%E7%BB%93/"/>
      <url>/2023/02/09/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="一主要任务">一、主要任务</h1><p>根据状态估计获得的目标的位置和运动状态信息，对水下运动目标（移动声靶、蛙人）进行威胁评估，给出目标对AUV的威胁程度。# 二、威胁评估指标选择距离（AUV与目标）、碰撞风险、航向差、速度差、深度差 # 三、主要方法<strong>基于结构熵的威胁要素权重评估、基于层次分析法威胁评估预测</strong>## 3.1 数据准备给出某一时刻探测到目标信息：距离（AUV与目标）、碰撞风险、航向差、速度差、AUV数量## 3.2 基于结构熵的威胁要素权重评估设定6个专家，每个专家对5个指标的重要性进行排序</p><table><thead><tr class="header"><th></th><th>专家1</th><th>专家2</th><th>专家3</th><th>专家4</th><th>专家5</th><th>专家6</th></tr></thead><tbody><tr class="odd"><td>距离（AUV与目标）</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td></tr><tr class="even"><td>碰撞风险</td><td>2</td><td>1</td><td>4</td><td>3</td><td>6</td><td>5</td></tr><tr class="odd"><td>航向差</td><td>2</td><td>3</td><td>1</td><td>4</td><td>6</td><td>5</td></tr><tr class="even"><td>速度差</td><td>3</td><td>2</td><td>1</td><td>4</td><td>5</td><td>6</td></tr><tr class="odd"><td>AUV数量</td><td>6</td><td>4</td><td>2</td><td>1</td><td>3</td><td>5</td></tr></tbody></table><p>给定认识度权重 ： imp_weight = [0.3,0.23,0.17,0.1,0.1,0.1] ### 3.2.1计算隶属度矩阵D </p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">for</span> kk <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">6</span>    <span class="token keyword">for</span> jj <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span>        <span class="token function">F</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token function">imp_sort</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token function">imp_sort</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token function">imp_sort</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">D</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span><span class="token function">F</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token function">imp_sort</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">%M(kk,jj) = log(m-imp_sort(kk,jj))/log(m-1)-1+(m-1)/(m-imp_sort(kk,jj));</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> ### 3.2.2 计算每个指标的平均认识度C<pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span>    <span class="token keyword">for</span> nn <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">6</span>         <span class="token function">C</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">C</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">D</span><span class="token punctuation">(</span>nn<span class="token punctuation">,</span>mm<span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">imp_weight</span><span class="token punctuation">(</span>nn<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre> ### 3.2.3 计算每个指标的认识盲度B和总体认识度A<pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span>    <span class="token keyword">for</span> nn <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">6</span>         <span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">D</span><span class="token punctuation">(</span>nn<span class="token punctuation">,</span>mm<span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">C</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">imp_weight</span><span class="token punctuation">(</span>nn<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span>    <span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">A</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">C</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span><span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> ### 3.2.4对总体认识度A进行归一化，得到目标威胁评估指标的权值 <pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span>    <span class="token function">omega</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">A</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre> ###3.2.5 结果 <strong>omega =(0.2039,0.1668,0.2382,0.1523,0.2389)</strong><p></p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token comment">%使用一个函数实现</span>omega <span class="token operator">=</span> <span class="token function">weight_estimation</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%权重确定</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="基于层次分析法威胁评估预测">3.3 基于层次分析法威胁评估预测</h2><h3 id="数据准备">3.3.1 数据准备</h3><table><thead><tr class="header"><th>距离（AUV与目标）</th><th>碰撞风险</th><th>航向差</th><th>速度差</th><th>AUV数量（同类数量）</th></tr></thead><tbody><tr class="odd"><td>13</td><td>14.34</td><td>0.924</td><td>0.047</td><td>1</td></tr><tr class="even"><td>12.25</td><td>14.25</td><td>1.1</td><td>0.047</td><td>1</td></tr><tr class="odd"><td>13.04</td><td>15.04</td><td>1.281</td><td>0.047</td><td>1</td></tr><tr class="even"><td>11.05</td><td>13.05</td><td>1.462</td><td>0.049</td><td>1</td></tr><tr class="odd"><td>11.81</td><td>13.81</td><td>1.635</td><td>0.049</td><td>2</td></tr><tr class="even"><td>11.67</td><td>13.67</td><td>1.656</td><td>0.0492</td><td>2</td></tr></tbody></table><h3 id="计算每个指标的判断矩阵">3.3.2 计算每个指标的判断矩阵</h3><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">for</span> t <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>n    <span class="token keyword">for</span> nn <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m        <span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m            <span class="token keyword">if</span> t <span class="token operator">~=</span> <span class="token number">2</span> <span class="token operator">||</span> t <span class="token operator">~=</span>n                matrix<span class="token punctuation">{</span>t<span class="token punctuation">}</span><span class="token punctuation">(</span>mm<span class="token punctuation">,</span>nn<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">new_data</span><span class="token punctuation">(</span>nn<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">new_data</span><span class="token punctuation">(</span>mm<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>                matrix<span class="token punctuation">{</span>t<span class="token punctuation">}</span><span class="token punctuation">(</span>mm<span class="token punctuation">,</span>nn<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">new_data</span><span class="token punctuation">(</span>mm<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">new_data</span><span class="token punctuation">(</span>nn<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">end</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="构造特征向量矩阵w">3.3.3 构造特征向量矩阵W</h3><p>根据每个指标的判断矩阵计算这个指标的特征向量矩阵W </p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">for</span> t <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>n    <span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m        <span class="token function">W</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span>matrix<span class="token punctuation">{</span>t<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>mm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre> +距离（AUV与目标）判断矩阵<p></p><p><img src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/%E5%88%A4%E6%96%AD%E7%9F%A9%E9%98%B5.png" alt="判断矩阵"> ### 3.3.4 计算威胁评估指标并进行排序每个指标的特征向量矩阵W × 每个指标的权值omega </p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">threat_degree <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> uu <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m    <span class="token function">threat_degree</span><span class="token punctuation">(</span>uu<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">omega</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">W</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>uu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre> ### 3.3.5最终结果 0.1924 ， 0.1843 ， 0.1676 ， 0.1623 ， 0.1487， 0.1447<p></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习路线</title>
      <link href="/2023/02/06/C++%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
      <url>/2023/02/06/C++%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<figure><img src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/C%2B%2B%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.png" alt="C++学习路线"><figcaption aria-hidden="true">C++学习路线</figcaption></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>论文写作技巧</title>
      <link href="/2023/02/06/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/"/>
      <url>/2023/02/06/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="一学术论文两要素专业的知识科学的表达">一、学术论文两要素：专业的知识、科学的表达</h1><h2 id="专业的知识包括以下特点你写的这篇文章要具备的要素">1.专业的知识包括以下特点（你写的这篇文章要具备的要素）</h2><ul><li><p>新颖性：创新点</p></li><li><p>普适性：提出的方法、理论、发现、实验等不仅适用于单一的情况</p></li><li><p>学术性：从项目中提炼科学问题</p></li></ul><h2 id="科学的表达">2. 科学的表达</h2><ul><li>清晰的表达思路：想好文章的中心思想，为了论证它怎么摆事实、讲道理；（围绕基于xx的一种方法，围绕方法进行验证，实验和结果展示（摆事实），这些结果说明了这个方法好（讲道理））</li><li>良好的文章结构：题目、摘要、前言、问题描述、方法、验证、结论</li><li>公认的科学语言：要用业内的专业术语来表述提出的方法或理论 #二、论文选题 ## 1. 阅读国内外本领域高水平的大学博士论文可以获得第一手全面的背景、方法、逻辑以及进展 ## 2.广泛阅读高水平期刊论文（学会检索文献） 看什么决定想什么，做什么，如何做## 3. 确定论文的方向，确定几个可能的内容</li><li>很难在选题阶段就将要做的内容“算计”很全面</li><li>关键是把握方向，研究过程中不停地修正</li><li>很多论文与选题报告相差甚远 # 三、选题建议 <strong>1.本领域国际学术界研究热点但未能突破的问题</strong>模仿别人，跟风随大流，容易出成果，比较难出高水平成果（跟别人解决一样的问题，使用不同的方法，并且解决得比他好）</li></ul><p><strong>2.基于课题组的学术成果进行拓展延伸（做的好的论文可以进行拓展研究）</strong>可能并非当前热门的领域，但研究扎实，论文水平高 <strong>3.当前工程中尚未解决的难题（项目过程中发现的问题）</strong>需要提炼科学问题，比较难，很有价值 <strong>4.考虑课题组的实验条件、经费及个人兴趣</strong> # 四、如何研究 1.尽快建立自己的信心和兴趣：建立正反馈机制，不断制定小目标然后实现，逐渐找到科研的感觉；2.<strong>要制定严格的计划</strong>：计划完不成可以修正，但没计划可能无限拖延；3.不放过任何灵感：时刻记录下自己的想法，不成熟的可以完善，不可行的再放弃；4.研究的内容可以并行：不要被一个点卡住就止步，先做别的，再回过头来想新的方法。# 五、创新点 <strong>干了别人没干过的事，就是创新</strong> 1.发现别人没发现的现象 2. 提出别人没提出的理论或方法 3.解决了别人没解决的问题 4. 设计了别人没做过的实验 # 六、创新的境界 1.无中生有（最高境界） 2. 标新立异：原始创新，发现新问题，提出新方法；<strong>3.新瓶装旧酒，旧瓶装新酒：提出新方法解决旧问题，发现新问题使用旧方法解决。4. 移花接木：旧问题，旧方法，新的排列组合</strong> 5. 批判式创新指出别人文献中的问题，并对其作出了解释。 #七、基本学术道德和规范必须遵守</p><h1 id="八文献检索">八、文献检索</h1><ul><li>中文检索库：</li><li>中国知网、东北大学学位论文（https://202.118.8.24/）</li><li>外文检索库：IEEE(IEEEXplore)、Elsevier(www.sciencedi)、Springer(https://link.springer.com/)、SAGE(https://journals.sagepub.com/)、</li><li>SCI-Hub论文下载：(https://tool.yovisun.com/)</li><li>检索收录： EI：https://www.engineeringvillage.com/ SCI：web ofscience: https://www.webofscience.com/SCI分区：http://www.letpub.com.cn/index.php?page=journalapp #九、阅读文献的目的</li></ul><ol type="1"><li>研究该领域的背景和进展</li><li>了解研究热点和前沿</li><li>寻找前人研究的不足、缺陷</li><li>学习论文的写作技巧</li><li>学习他人提出的优秀的方法</li></ol><p><strong>步骤：</strong> 1. 找5～10篇中文的博士论文和综述型期刊论文博士论文：主要了解领域的背景、进展、主要研究方法和手段等，<strong>3～7天一篇，英文论文1-2周一篇，重点关注前言和用了哪些方法，具体方法的细节看不懂没关系</strong>2. 研究型论文（顶刊顶会）了解领域内的热点、前沿，学习先进新颖的想法、方法，学习写作技巧，<strong>1周1篇到1天-N篇，复现1-3篇经典高质量论文</strong># 十、研究型论文阅读方法 1. 看题目，研究对象和方法（1） 2.看作者，有没有大牛（10s） 3.看摘要，具体是什么问题，用了什么方法，取得了什么效果(5~10) 4.前言，建模，方法，验证统统过 5. 看原理图，整体框架图（3～5） 6.方法和我们的方向关系密切的话就仔细看，公式推导和细节（20～30） 7.看图，是否表达了需要表达的信息（画得好的可以仿照着画，2～3） 8.看结论，贡献和效果</p><h1 id="十一引用论文的技巧">十一、引用论文的技巧</h1><ol type="1"><li>数量要多（全面），20起步，30合格，40优秀</li><li>质量要高（水准）： 高水平SCI期刊论文：参考文献的主体构成<ul><li>权威会议的论文：不要过多引用，0～5篇</li><li>经典、权威的英文专著：适当引用1～2部</li><li>中文文献和非SCI论文：能少则少</li></ul></li></ol><h1 id="十二写作建议">十二、写作建议</h1><ol type="1"><li>一气呵成</li><li>写作和实践相结合：白天写论文，晚上做实验/调仿真</li><li>制定计划，严格执行，尽快完成初稿</li><li>反复修改（修改10遍）</li></ol><h1 id="十三写作顺序">十三、写作顺序</h1><ol type="1"><li>题目/摘要（初步写一个）</li><li>问题描述/建立模型</li><li>方法和验证分析</li><li>结论</li><li>前言</li><li>摘要（认真修改）：表述前因后果讲清楚、创新点更加详细、贡献更加突出<ul><li>描述对象/问题及其重要性</li><li>说明难点或者未解决的难题</li><li>本论文提出了什么方法</li><li>提出的方法是怎样实现的/解决问题的</li><li>方法取得了什么效果，有什么贡献，有哪些拓展应用，未来还能怎么研究等等</li></ul></li><li>题目（反复推敲）</li></ol><h1 id="十四新手第一篇先抄袭再超越">十四、新手第一篇——先抄袭再超越</h1><ol type="1"><li>找一篇与自己研究内容最类似的高水平论文</li><li>反复阅读（3～5遍）</li><li>学习论文中的表达方式（问题描述、结果分析等）</li><li>对照着写论文（卡壳了就看看别人怎么写的）</li><li>过程中要想清楚自己的论文的优势</li><li>写完反复修改语言</li></ol><ul><li>题目：</li></ul><ol type="1"><li>对象+问题+方法 XXX（Method）of XXX (object) for XXX(problem)</li><li>对象/问题（可以简化）+方法（描述其创新性、独特性）<strong>用这个</strong>XXX（Method）of XXX（object/problem）with/based on/consideringXXX(characteristics)</li><li>对象/问题+方法（描述其创新性和普适性） XXX(Method) ofXXX（object/problem）with/based on/considering XXX(characteristics) +??(设计和实验)</li></ol><h1 id="十五前言">十五、前言</h1><ol type="1"><li>交代研究背景</li><li>说明研究内容的重要性</li><li><strong>目前研究的不足</strong></li><li>提出研究的问题</li><li>简要说明解决方法</li><li>说明为什么用上述方法</li><li><strong>创新点和贡献</strong></li><li>给出文章结构</li></ol><p><strong>内容：</strong> 1. 问题背景 2. 研究进展 3. 问题描述 4.动机和创新点 5. 文章结构（有加有不加）</p><h1 id="十六介绍他人工作">十六、介绍他人工作</h1><p><strong>吹：</strong>正面积极地评价他人工作，使用修饰词，如new、novel、firstly、greatly、effective、important等，篇幅长<strong>黑：委婉</strong>前人研究的不足，引出本文的工作（研究的问题），少用but,用however，不要直接评论他人工作不足，而是说某个问题前面研究没考虑。话不要说死，留后路，asfar as authors/we know</p><h1 id="十七建模和问题描述">十七、建模和问题描述</h1><p><strong>归纳建立一个简洁又不失深度的问题/数学模型</strong> <strong>1.建立模型</strong> 自己提出的模型，要重点描述 引用别人的就简单描述自己的改进的部分，重点描述改进的部分 <strong>2. 归纳问题</strong>科学问题，有学术性，专业的学术语言 # 十八、仿真和实验设计一个有说服力的实验/仿真验证，选择具有代表性的，可以出好看的图片的实验多进行<strong>消融实验</strong>，结果分析充分详尽（可以学习别人的） #十九、结论 <strong>总结一个有学术价值的结论</strong>本文针对XX问题，提出了XX方法，从而解决了其中XX难题，取得了XX效果（有数据最好）。本文的主要贡献在于：1）提出了XX方法，和之前研究相比有什么特点或创新；2）解决了什么问题，克服了哪些困难，取得了什么样的效果3）该方法还能扩展应用到哪些方面。本文工作还有哪些不足，未来工作将从哪几个方面进行。<strong>（要委婉）</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Typora使用方法</title>
      <link href="/2023/02/06/Typora%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2023/02/06/Typora%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="一markdown纯文本基本语法">一、Markdown纯文本基本语法</h1><h2 id="标题">1. 标题</h2><pre class="line-numbers language-none"><code class="language-none"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注意事项：#号后面要有空格 ## 2. 字体 <pre class="line-numbers language-none"><code class="language-none">**加粗**__加粗__*倾斜*_倾斜_***加粗倾斜***~~加删除线~~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>注意事项：强调也可以直接插在文字中间，但是如果你的 * 和 _两边都有空白的话，它们就只会被当成普通的符号。如果要在文字前后直接插入普通的星号或底线，你可以用反斜线 &nbsp;。 ## 3.分割线 <pre class="line-numbers language-none"><code class="language-none">* * ****************- - -__________________<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre> ## 4. 引用 <pre class="line-numbers language-none"><code class="language-none">&gt; xxxxxxxxx&gt;&gt; xxxxxxxxxx&gt;&gt;&gt; xxxxxxxxxxx........<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre> ## 5. 列表 ### 5.1有序列表 <pre class="line-numbers language-none"><code class="language-none">- 列表内容+ 列表内容* 列表内容注意：- + * 跟内容之间都要有一个空格<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre> ### 5.2 无序列表 <pre class="line-numbers language-none"><code class="language-none">1. 列表内容2. 列表内容3. 列表内容注意：序号跟内容之间要有空格<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre> ### 5.3无序列表嵌套 <pre class="line-numbers language-none"><code class="language-none">* 一级无序列表内容   * 二级无序列表内容   * 二级无序列表内容   * 二级无序列表内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre> ## 6. 表格 <pre class="line-numbers language-none"><code class="language-none">表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> 表头|表头|表头---|:--:|---: 内容|内容|内容 内容|内容|内容 ## 7. 代码 <pre class="line-numbers language-none"><code class="language-none">\```  代码...  代码...  代码...\```\ 是为了防止转译，实际是没有的。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre> #二、Markdown纯文本进阶语法 ## 1. 更改字体、大小、颜色 <pre class="line-numbers language-none"><code class="language-none">&lt;font face="黑体"&gt;我是黑体字&lt;/font&gt;&lt;font face="微软雅黑"&gt;我是微软雅黑&lt;/font&gt;&lt;font face="STCAIYUN"&gt;我是华文彩云&lt;/font&gt;&lt;font color=red&gt;我是红色&lt;/font&gt;&lt;font color=#008000&gt;我是绿色&lt;/font&gt;&lt;font color=Blue&gt;我是蓝色&lt;/font&gt;&lt;font size=5&gt;我是尺寸&lt;/font&gt;&lt;font face="黑体" color=green size=5&gt;我是黑体，绿色，尺寸为5&lt;/font&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><font face="黑体">我是黑体字</font><font face="微软雅黑">我是微软雅黑</font><font face="STCAIYUN">我是华文彩云</font><font color="red">我是红色</font> <font color="#008000">我是绿色</font><font color="Blue">我是蓝色</font> <font size="5">我是尺寸</font><font face="黑体" color="green" size="5">我是黑体，绿色，尺寸为5</font> ##2. 为文字添加背景色 <pre class="line-numbers language-none"><code class="language-none">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=yellow&gt;背景色yellow&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><tbody><tr><td bgcolor="yellow">背景色yellow</td></tr></tbody></table><h2 id="设置文字居中">3. 设置文字居中</h2><pre class="line-numbers language-none"><code class="language-none">&lt;center&gt;居中&lt;/center&gt;&lt;p align="left"&gt;左对齐&lt;/p&gt;&lt;p align="right"&gt;右对齐&lt;/p&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><center>居中</center><p align="left">左对齐</p><p align="right">右对齐</p><h2 id="加入上下标">4. 加入上下标</h2><pre class="line-numbers language-none"><code class="language-none">H&lt;sub&gt;2&lt;/sub&gt;O  CO&lt;sub&gt;2&lt;/sub&gt;爆米&lt;sup&gt;TM&lt;/sup&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>H<sub>2</sub>O CO<sub>2</sub> 爆米<sup>TM</sup></li></ul><h1 id="三markdown进阶使用">三、Markdown进阶使用</h1><h2 id="超链接">1. 超链接</h2><h3 id="行内式">1.1 行内式</h3><pre class="line-numbers language-none"><code class="language-none">This is [an example](http://example.com/ "Title") inline link.[This link](http://example.net/) has no title attribute.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>This is <a href="http://example.com/" title="Title">an example</a>inline link.</p><p><a href="http://example.net/">This link</a> has no titleattribute.</p><ul><li>如果想在新页面中打开的话用html语言的a标签代替 <pre class="line-numbers language-none"><code class="language-none">&lt;a href="www.baidu.com" target="_blank"&gt;超链接名&lt;/a&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><a href="www.baidu.com" target="_blank">超链接名</a></li></ul><h3 id="参考式">1.2 参考式</h3><pre class="line-numbers language-none"><code class="language-none">I get 10 times more traffic from [Google] [1] than from[Yahoo] [2] or [MSN] [3].  [1]: http://google.com/        "Google"  [2]: http://search.yahoo.com/  "Yahoo Search"  [3]: http://search.msn.com/    "MSN Search"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">I get 10 times more traffic from [Google][] than from[Yahoo][] or [MSN][].  [google]: http://google.com/        "Google"  [yahoo]:  http://search.yahoo.com/  "Yahoo Search"  [msn]:    http://search.msn.com/    "MSN Search"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自动链接">2. 自动链接</h2><pre class="line-numbers language-none"><code class="language-none">&lt;http://example.com/&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="http://example.com/" class="uri">http://example.com/</a></p><figure><img src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/p2886693452.jpg" alt="p2886693452"><figcaption aria-hidden="true">p2886693452</figcaption></figure><h2 id="插入并上传图片">3. 插入并上传图片</h2><ol type="1"><li>打开typora和picgo</li><li>正常插入图片</li><li>右击上传图片(github的resposibity里的文件夹) ### 3.1图片位置--居中，左，右 <pre class="line-numbers language-none"><code class="language-none">&lt;div align=center&gt;![Alt pic] (http:...)如果想将图片位于右侧，只需要将center改为right<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre> ### 3.2 设置图片大小<pre class="line-numbers language-none"><code class="language-none">&lt;img src="http:..." width = "100" height = "100" div align=right /&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> ## 4. Latex公式 <pre class="line-numbers language-none"><code class="language-none">$ X\stackrel{F}{\longrightarrow}Y $<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre> $ XY $</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/02/01/hello-world/"/>
      <url>/2023/02/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your veryfirst post. Check <a href="https://hexo.io/docs/">documentation</a> formore info. If you get any problems when using Hexo, you can find theanswer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> oryou can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
