<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>const限定符</title>
      <link href="/2023/02/13/cpp-primer%E7%AC%94%E8%AE%B0/const%E9%99%90%E5%AE%9A%E7%AC%A6/"/>
      <url>/2023/02/13/cpp-primer%E7%AC%94%E8%AE%B0/const%E9%99%90%E5%AE%9A%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="const初始化">const初始化</h2><div class="sourceCode" id="cb1"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> i <span class="op">=</span> <span class="dv">42</span><span class="op">;</span></span><span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> ci <span class="op">=</span> i<span class="op">;</span><span class="co">//将i的值拷贝给了ci</span></span><span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> j <span class="op">=</span> ci<span class="op">;</span><span class="co">//将ci的值拷贝给了j，只是拷贝了ci的值给j，不会影响ci</span></span></code></pre></div><ul><li>ci的常量特征仅仅在执行改变ci的操作时才会发生作用</li></ul><h3 id="默认状态下const对象只在文件内有效">默认状态下，const对象只在文件内有效</h3><p>不同文件中出现同名的const变量时，等价于分别定义了独立的变量。<strong>如果希望部分文件共享这个const对象，方法是：</strong><strong>一个文件定义，多个文件声明</strong></p><div class="sourceCode" id="cb2"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="co">//file.cc</span></span><span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="at">extern</span> <span class="at">const</span> <span class="dt">int</span> bufSize <span class="op">=</span> fcn<span class="op">();</span></span><span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="co">//file_1.h</span></span><span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="at">extern</span> <span class="at">const</span> <span class="dt">int</span> bufSize<span class="op">;</span></span></code></pre></div><h2 id="const的引用常量引用">const的引用（常量引用）</h2><div class="sourceCode" id="cb3"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> ci <span class="op">=</span> <span class="dv">1024</span><span class="op">;</span></span><span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">&amp;</span>rl <span class="op">=</span> ci<span class="op">;</span><span class="co">//常量 = 常量</span></span><span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>rl <span class="op">=</span> <span class="dv">42</span><span class="op">;</span>           <span class="co">//错误：rl是给常量起别名，实质是常量，不可以被赋值</span></span><span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> <span class="op">&amp;</span>r2 <span class="op">=</span> ci<span class="op">;</span>      <span class="co">//错误：不可以使用变量名作为常量的别名</span></span></code></pre></div><ul><li>使用<strong>整型常量</strong>作为<strong>double类型的变量</strong>的别名（类比别的类型）</li></ul><div class="sourceCode" id="cb4"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="dt">double</span> dval <span class="op">=</span> <span class="fl">3.14</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">&amp;</span>ri <span class="op">=</span> dval<span class="op">;</span></span><span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="op">==&gt;</span></span><span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a></span><span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> temp <span class="op">=</span> dval<span class="op">;</span></span><span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">&amp;</span>rl <span class="op">=</span> temp<span class="op">;</span></span></code></pre></div><ul><li>不可以使用<strong>整型变量</strong>作为<strong>double类型的变量</strong>的别名（类比别的类型）</li></ul><div class="sourceCode" id="cb5"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="co">//double a = 3.14;</span></span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="co">//int &amp;b = a;</span></span><span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="co">//错误</span></span></code></pre></div><ul><li>对const的引用可能引用一个并非const的对象</li></ul><pre><code>int i = 42;int &amp;rl = i;  //变量给变量其别名，r1可以修改i的值（可以变）const int &amp;r2 = i;//常量给变量起别名，r2不可以修改i的值（常量不能变）r1 = 0;         //正确r2 = 0;         //错误</code></pre><h2 id="指针和const">指针和const</h2><h3 id="指针常量顶层const必须初始化因为初始化的是它的地址">指针常量（顶层const）<strong>必须初始化,因为初始化的是它的地址</strong></h3><p><strong>指针类型的常量</strong>不可以改变指针指向，可以改变指向对象的值</p><div class="sourceCode" id="cb7"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> a<span class="op">;</span></span><span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> <span class="op">*</span><span class="at">const</span> p <span class="op">=</span> <span class="op">&amp;</span>a<span class="op">;</span></span></code></pre></div><h3 id="常量指针底层const">常量指针（底层const）</h3><p><strong>指向常量的指针</strong>不可以改变指向对象的值，可以改变指针指向</p><div class="sourceCode" id="cb8"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> a<span class="op">;</span></span><span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">*</span>p<span class="op">;</span></span></code></pre></div><h3 id="指向常量的指针常量">指向常量的指针常量</h3><p>不可以改变指向对象的值,也不可以改变指针指向</p><div class="sourceCode" id="cb9"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> a<span class="op">;</span></span><span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">*</span><span class="at">const</span> p<span class="op">;</span></span></code></pre></div><p>###　常量不可以　＝　变量的引用</p><div class="sourceCode" id="cb10"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> ci <span class="op">=</span> <span class="dv">42</span><span class="op">;</span></span><span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> <span class="op">&amp;</span>ri <span class="op">=</span> ci<span class="op">;</span><span class="co">//错误</span></span></code></pre></div><h3 id="顶层const和底层const">顶层const和底层const</h3><p>指针本身是一个常量（存放的地址是一个常量）<strong>顶层const</strong>指针指向的值是一个常量（指向的值是一个常量）<strong>底层const</strong></p><pre><code>int i = 0;int *const p1 = &amp;i; //p1地址不能改变，顶层constconst int ci = 42;  //不能改变ci的值，这是一个顶层constconst int *p2 = &amp;ci;//p2地址可以改变，底层constconst int *const p3 = p2;//靠右的const是顶层const,靠做的是底层constconst int &amp;r = ci;  //用于声明引用的const都是底层const</code></pre><p><strong>底层const需要注意：</strong></p><div class="sourceCode" id="cb12"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> <span class="op">*</span>p <span class="op">=</span> p3<span class="op">;</span>        <span class="co">//错误，p3包含底层const的定义，而p没有</span></span><span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a>p2 <span class="op">=</span> p3<span class="op">;</span>            <span class="co">//正确，p2和p3都是底层const</span></span><span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a>p2 <span class="op">=</span> <span class="op">&amp;</span>i<span class="op">;</span>            <span class="co">//正确，int*能转换成const int*</span></span><span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a><span class="dt">int</span> <span class="op">&amp;</span>r <span class="op">=</span> ci<span class="op">;</span>        <span class="co">//错误，常量不可以 = 变量的引用</span></span><span id="cb12-5"><a href="#cb12-5" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">&amp;</span>r2 <span class="op">=</span> i<span class="op">;</span>  <span class="co">//正确：const </span></span></code></pre></div><h2 id="constexpr变量">constexpr变量</h2><p><strong>作用：由编译器来验证变量的值是否是一个常量表达式</strong></p><ul><li>必须是constexpr函数才能给constexpr类型的变量初始化</li></ul><div class="sourceCode" id="cb13"><pre class="sourceCode cpp"><code class="sourceCode cpp"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a><span class="at">const</span> <span class="dt">int</span> <span class="op">*</span>p <span class="op">=</span> <span class="kw">nullptr</span><span class="op">;</span>  <span class="co">//p是一个指向整型常量的指针</span></span><span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a><span class="kw">constexpr</span> <span class="dt">int</span> <span class="op">*</span>q <span class="op">=</span> <span class="kw">nullptr</span><span class="op">;</span><span class="co">//q是一个指向整数的常量指针（常量指针） 所定义的变量置为了顶层                               //const</span></span></code></pre></div><p>constexpr指针既可以指向常量也可以指向一个非常量</p>]]></content>
      
      
      <categories>
          
          <category> c++ primer笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> const初始化 </tag>
            
            <tag> const引用（常量引用） </tag>
            
            <tag> 指针和const </tag>
            
            <tag> constexpr变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>指针常量和常量指针</title>
      <link href="/2023/02/13/cpp-primer%E7%AC%94%E8%AE%B0/%E5%A4%84%E7%90%86%E7%B1%BB%E5%9E%8B/"/>
      <url>/2023/02/13/cpp-primer%E7%AC%94%E8%AE%B0/%E5%A4%84%E7%90%86%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> c++ primer笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>指针常量和常量指针</title>
      <link href="/2023/02/10/cpp-primer%E7%AC%94%E8%AE%B0/%E6%8C%87%E9%92%88%E5%B8%B8%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F%E6%8C%87%E9%92%88/"/>
      <url>/2023/02/10/cpp-primer%E7%AC%94%E8%AE%B0/%E6%8C%87%E9%92%88%E5%B8%B8%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F%E6%8C%87%E9%92%88/</url>
      
        <content type="html"><![CDATA[<h2 id="指针常量顶层const"><a class="anchor" href="#指针常量顶层const">#</a> 指针常量（顶层 const）</h2><p><strong>指针类型的常量</strong><br>不可以改变指针指向，可以改变指向对象的值</p><pre><code class="language-c++">int a;int *const p = &amp;a;</code></pre><p><strong>必须初始化</strong></p><h2 id="常量指针底层const"><a class="anchor" href="#常量指针底层const">#</a> 常量指针（底层 const）</h2><p><strong>指向常量的指针</strong><br>不可以改变指向对象的值，可以改变指针指向</p><pre><code class="language-c++">int a;const int *p;</code></pre><h2 id="指向常量的指针常量"><a class="anchor" href="#指向常量的指针常量">#</a> 指向常量的指针常量</h2><p>不可以改变指向对象的值，也不可以改变指针指向</p><pre><code class="language-c++">int a;const int *const p;</code></pre><p>##　常量不可以　＝　变量的引用</p><pre><code class="language-c++">const int ci = 42;int &amp;ri = ci;//错误</code></pre>]]></content>
      
      
      <categories>
          
          <category> c++ primer笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 指针常量 </tag>
            
            <tag> 常量指针 </tag>
            
            <tag> 指向常量的指针常量 </tag>
            
            <tag> 常量不可以　＝　变量的引用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水下机器人技术</title>
      <link href="/2023/02/10/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%80%E6%9C%AF/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%80%E6%9C%AF/"/>
      <url>/2023/02/10/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%80%E6%9C%AF/%E6%B0%B4%E4%B8%8B%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="水下机器人结构"><a class="anchor" href="#水下机器人结构">#</a> 水下机器人结构</h2><ol><li>耐压舱<br>电池、导航、控制、传感器</li><li>推进器设计</li></ol><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-12%20201748.png" alt=""></p><ol start="3"><li>通信技术</li></ol><ul><li><p>有线通信</p><p>光纤通信、以太网通信、载波通信等</p></li><li><p>无线通信</p><p>水声通信、激光通讯、无线电通信、卫星通信等</p></li></ul><ol start="4"><li>导航定位技术</li></ol><ul><li><p>导航技术</p><p>（1） 基于外部信息的导航</p><p>GPS,USBL,LBL,SBL，<strong>适用于系统在水面航行或在水下航行但有水面支持母船的场合</strong></p><p>（2） 基于自身传感器的导航</p><p><strong>依靠系统内部传感器进行导航不需要外部信号</strong></p><p>捷联惯导系统、航位推算、地形匹配、重力场导航</p></li><li><p>定位技术</p><p>LBL,SBL,USBL<br><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-02-12%20203742.png" alt=""></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 水下机器人 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>对象特性</title>
      <link href="/2023/02/10/%E9%BB%91%E9%A9%ACcpp%E7%AC%94%E8%AE%B0/%E5%AF%B9%E8%B1%A1%E7%89%B9%E6%80%A7/"/>
      <url>/2023/02/10/%E9%BB%91%E9%A9%ACcpp%E7%AC%94%E8%AE%B0/%E5%AF%B9%E8%B1%A1%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="构造函数和析构函数"><a class="anchor" href="#构造函数和析构函数">#</a> 构造函数和析构函数</h2><p><strong>作用：对象的初始化和清理</strong></p><h3 id="1-构造函数语法类名"><a class="anchor" href="#1-构造函数语法类名">#</a> 1. 构造函数语法：类名 (){}</h3><ul><li>构造函数，没有返回值也不写 void</li><li>函数名称与类名相同</li><li>构造函数可以有参数，因此可以发生重载</li><li>程序在调用对象时候自动调用构造，无需手动调用，而且只会调用一次</li></ul><h3 id="2-析构函数语法~类名"><a class="anchor" href="#2-析构函数语法~类名">#</a> 2. 析构函数语法：~ 类名 (){}</h3><ul><li>析构函数，没有返回值也不写 void</li><li>函数名称与类名相同，在名称前加上符号～</li><li>析构函数不可以有参数，因此不可以发生重载</li><li>对象在销毁前自动调用析构，无需手动调用，而且只会调用一次</li></ul><h2 id="构造函数的分类和调用"><a class="anchor" href="#构造函数的分类和调用">#</a> 构造函数的分类和调用</h2><p>两种分类方式：</p><ul><li>按参数分为：有参构造和无参构造（默认构造）</li><li>按类型分为：普通构造和拷贝构造</li></ul><pre><code class="language-c++">class Person{public:    Person(const Person &amp;p)    {        //将传入的人身上所有属性，拷贝到我身上age = p.age;    }    private:int age;    };</code></pre><p>三种调用方法：</p><ul><li><p>括号法</p><pre><code class="language-c++">Person p1;//无参Person p2(10);//有参Person p3(p2);//拷贝</code></pre></li><li><p>显示法</p><pre><code class="language-c++">Person p1;//无参Person p2 = Person(10);//有参Person p3 = Person(p2);//拷贝Person(10);//匿名对象  特点：当前行执行结束后，系统会立即回收掉匿名对象</code></pre></li></ul><p>Person (p3);// 注意事项：不要利用拷贝构造函数 初始化匿名对象  编译器会认为 Person (p3) === Person p3 对象声明</p><pre><code>+ 隐式转换法```c++Person p4 = 10;//相当于Person p4 = Person(10)Person p5 = p4;//拷贝构造</code></pre><h2 id="拷贝构造函数调用时机"><a class="anchor" href="#拷贝构造函数调用时机">#</a> 拷贝构造函数调用时机</h2><ul><li><p>使用一个已经创建完毕的对象来初始化一个新对象</p></li><li><p>值传递的方式给函数传值</p><pre><code class="language-c++">void doWork(Person p){}void test02(){Person p;doWork(p);}</code></pre></li><li><p>以值方式返回局部对象</p></li></ul><pre><code class="language-c++">Person doWork2(){Person p1;return p1;//并不是返回p1,而是拷贝了一个p1返回}void test03(){Person p = doWork();}</code></pre><h2 id="构造函数调用规则"><a class="anchor" href="#构造函数调用规则">#</a> 构造函数调用规则</h2><p>默认提供三个函数：</p><ol><li>默认构造函数（无参，函数体为空）</li><li>默认析构函数（无参，函数体为空）</li><li>默认拷贝构造函数，对属性进行值拷贝</li></ol><p>构造函数调用规则：</p><ul><li>如果用户定义有参构造函数，c++ 不再提供默认无参构造，但是会提供默认拷贝构造</li><li>如果用户定义拷贝构造函数 c++ 不再提供其他构造函数</li></ul>]]></content>
      
      
      <categories>
          
          <category> 黑马c++学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 构造函数和析构函数 </tag>
            
            <tag> 构造函数的分类以及调用 </tag>
            
            <tag> 拷贝构造函数调用时机 </tag>
            
            <tag> 构造函数调用规则 </tag>
            
            <tag> 深拷贝和浅拷贝 </tag>
            
            <tag> 初始化列表 </tag>
            
            <tag> 类对象作为类成员 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EKF算法（CTRV运动模型）</title>
      <link href="/2023/02/09/EKF/EKF/"/>
      <url>/2023/02/09/EKF/EKF/</url>
      
        <content type="html"><![CDATA[<h2 id="一-参数准备"><a class="anchor" href="#一-参数准备">#</a> 一、参数准备</h2><ul><li>控制变量矩阵 B = 0</li><li>状态控制向量 u = 0</li><li>卡尔曼增益 K （无需初始化）</li><li>观测值 z（外部输入，无需初始化）</li><li>先验估计协方差 P</li></ul><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>P <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 先验估计协方差</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment"># 主对角线是 1，其他为 0</span></pre></td></tr></tbody></table></figure><ul><li><p>滤波器输出状态 x = []</p></li><li><p>滤波器预测状态 G = []</p></li><li><p>状态转移矩阵 J_A = []  <strong>与非线性系统的预测机制有关</strong></p></li><li><p>噪声协方差矩阵 Q = [] <strong>代表对控制系统的信任程度，预测过程上叠加一个高斯噪声，若希望跟踪的轨迹更光滑，可以调小</strong></p></li><li><p>观测矩阵 H <strong>z = H * x, 状态：（坐标 x, 坐标 y, 速度 x, 速度 y）, 观测值：（坐标 x, 坐标 y）</strong></p><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>H <span class="token operator">=</span> np<span class="token punctuation">.</span>eye<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span></pre></td></tr></tbody></table></figure></li><li><p>观测噪声协方差矩阵 R <strong>代表对观测数据的信任程度，观测过程中存在一个高斯噪声，若观测结果中的值很准确，可以调小</strong></p><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>R <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.6</span><span class="token comment"># 主对角线是 1，其他为 0</span></pre></td></tr></tbody></table></figure></li></ul><h2 id="二-参数初始化"><a class="anchor" href="#二-参数初始化">#</a> 二、参数初始化</h2><ul><li><p>B = 0</p></li><li><p>u = 0</p></li><li><p>K = null</p></li><li><p>z = null</p></li><li>P = \left[\matrix{  200 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\  0 &amp; 200 &amp; 0 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 10 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 10 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 0 &amp; 10\\}\right]</li><li>x = \left[\matrix{  坐标x &amp; 坐标y &amp; 速度 &amp; 航向 &amp; 航向角速度}\right]</li><li>G = \left[\matrix{  坐标x &amp; 坐标y &amp; 速度 &amp; 航向 &amp; 航向角速度}\right]</li><li>J\_A = \left[\matrix{  1 &amp; 0 &amp; \Delta t*cos(航向) &amp; -\Delta t*v*sin(航向) &amp; 0\\  0 &amp; 1 &amp; \Delta t*sin(航向) &amp; \Delta t*v*cos(航向) &amp; 0\\  0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 1 &amp; \Delta t\\  0 &amp; 0 &amp; 0 &amp; 0 &amp; 1}\right]</li><li><p>std_noise_a = 3 <strong>纵向加速度噪声</strong></p></li><li><p>std_noise_yaw_dd = 0.3 <strong>偏航角加速度噪声</strong></p></li><li>Q\_v = \left[\matrix{  (std\_noise\_a)^2  &amp; 0 \\  0 &amp; (std\_noise\_yaw\_dd)^2\\}\right]=\left[\matrix{  (\sigma_a)^2  &amp; 0 \\  0 &amp; (\sigma_{\psi}^{..})^2\\}\right]</li><li>temp = \left[\matrix{  0.5*(\Delta t)^2*cos(航向) &amp; 0\\  0.5*(\Delta t)^2*sin(航向) &amp; 0\\  \Delta t &amp; 0 \\  0 &amp; 0.5*(\Delta t)^2 \\  0 &amp; \Delta t \\}\right]</li><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>Q</mi><mo>=</mo><mo stretchy="false">(</mo><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant="normal">.</mi><mo>∗</mo><msub><mi>Q</mi><mi>v</mi></msub><mo stretchy="false">)</mo><mo>∗</mo><mi>t</mi><mi>e</mi><mi>m</mi><msup><mi>p</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">Q = (temp.*Q_v) * temp^{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0857709999999998em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></span></p></li><li></li></ul>H = \left[\matrix{  1 &amp; 0 &amp; 0 &amp; 0 &amp; 0\\  0 &amp; 1 &amp; 0 &amp; 0 &amp; 0\\}\right]<ul><li>R = \left[\matrix{  1 &amp; 0\\  0 &amp; 1\\}\right]</li></ul><h2 id="三-函数定义"><a class="anchor" href="#三-函数定义">#</a> 三、函数定义</h2><ol><li><p>控制航向角 ------psi 角在 -pi ~ pi 之间</p><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">def</span> <span class="token function">control_psi</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>psi<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">while</span> <span class="token punctuation">(</span>psi <span class="token operator">&gt;</span> np<span class="token punctuation">.</span>pi <span class="token keyword">or</span> psi <span class="token operator">&lt;</span> <span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">)</span><span class="token punctuation">:</span> </pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">if</span> psi <span class="token operator">&gt;</span> np<span class="token punctuation">.</span>pi<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="4"></td><td><pre>psi <span class="token operator">=</span> psi <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">if</span> psi <span class="token operator">&lt;</span> <span class="token operator">-</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="6"></td><td><pre>psi <span class="token operator">=</span> psi <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>pi</pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">return</span> psi</pre></td></tr></tbody></table></figure></li><li><p>更新状态</p></li></ol><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">def</span> <span class="token function">update</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>dt<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token keyword">if</span> np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">0.0001</span><span class="token punctuation">:</span><span class="token comment">#如果航向角速度很小</span></pre></td></tr><tr><td data-num="3"></td><td><pre>            v <span class="token operator">=</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment"># 速度</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            heading <span class="token operator">=</span> self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 航向</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token comment">########################################### 预测部分</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token comment"># xk_=g(xk,u)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            xk_ <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>v<span class="token operator">*</span>math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token operator">*</span>dt<span class="token operator">+</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>                            v<span class="token operator">*</span>math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token operator">*</span>dt<span class="token operator">+</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>                            v<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>                            heading<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>                            <span class="token number">0.0001</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            </pre></td></tr><tr><td data-num="14"></td><td><pre>            self<span class="token punctuation">.</span>G <span class="token operator">=</span> xk_</pre></td></tr><tr><td data-num="15"></td><td><pre>            <span class="token comment">################ 更新 ####################</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            v <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            heading <span class="token operator">=</span> self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>xk_<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            heading_rate <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            <span class="token comment">############### 使用新的航向计算 J_A#############</span></pre></td></tr><tr><td data-num="20"></td><td><pre>            J_A02 <span class="token operator">=</span> dt<span class="token operator">*</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="21"></td><td><pre>            J_A03 <span class="token operator">=</span> <span class="token operator">-</span>dt<span class="token operator">*</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre>            J_A04 <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="23"></td><td><pre>            J_A12 <span class="token operator">=</span> dt<span class="token operator">*</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            J_A13 <span class="token operator">=</span> dt<span class="token operator">**</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            J_A14 <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>            self<span class="token punctuation">.</span>J_A <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> J_A02<span class="token punctuation">,</span> J_A03<span class="token punctuation">,</span> J_A04<span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> J_A12<span class="token punctuation">,</span> J_A13<span class="token punctuation">,</span> J_A14<span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dt<span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="32"></td><td><pre>                                <span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre>                </pre></td></tr><tr><td data-num="34"></td><td><pre>            </pre></td></tr><tr><td data-num="35"></td><td><pre>        <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="36"></td><td><pre>            one_divide_heading_rate <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="37"></td><td><pre>            heading_rate <span class="token operator">=</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="38"></td><td><pre>            v <span class="token operator">=</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="39"></td><td><pre>            heading <span class="token operator">=</span> self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="40"></td><td><pre>            xk_ <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>v <span class="token operator">*</span> one_divide_heading_rate <span class="token operator">*</span> math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading_rate <span class="token operator">*</span> dt<span class="token operator">+</span>heading<span class="token punctuation">)</span> <span class="token operator">-</span> v <span class="token operator">*</span> one_divide_heading_rate <span class="token operator">*</span> math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="41"></td><td><pre>                            <span class="token operator">-</span>v <span class="token operator">*</span> one_divide_heading_rate <span class="token operator">*</span> math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading_rate <span class="token operator">*</span> dt<span class="token operator">+</span>heading<span class="token punctuation">)</span> <span class="token operator">+</span> v <span class="token operator">*</span> one_divide_heading_rate <span class="token operator">*</span> math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> <span class="token operator">+</span> self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="42"></td><td><pre>                            v<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="43"></td><td><pre>                            self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>heading_rate <span class="token operator">*</span> dt <span class="token operator">+</span> heading<span class="token punctuation">)</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                            heading_rate<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="45"></td><td><pre>            self<span class="token punctuation">.</span>G <span class="token operator">=</span> xk_</pre></td></tr><tr><td data-num="46"></td><td><pre>            <span class="token comment">############# 更新 ##################</span></pre></td></tr><tr><td data-num="47"></td><td><pre>            v <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="48"></td><td><pre>            heading <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="49"></td><td><pre>            heading_rate <span class="token operator">=</span> xk_<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="50"></td><td><pre>            J_A02 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> heading_rate <span class="token operator">*</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="51"></td><td><pre>            J_A03 <span class="token operator">=</span> v <span class="token operator">/</span> heading_rate <span class="token operator">*</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="52"></td><td><pre>            J_A04 <span class="token operator">=</span> <span class="token punctuation">(</span>dt <span class="token operator">*</span> v <span class="token operator">/</span> heading_rate<span class="token punctuation">)</span> <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token punctuation">(</span>v <span class="token operator">/</span><span class="token punctuation">(</span>heading_rate <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="53"></td><td><pre>                        np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="54"></td><td><pre>            J_A12 <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> heading_rate <span class="token operator">*</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="55"></td><td><pre>            J_A13 <span class="token operator">=</span> v <span class="token operator">/</span> heading_rate <span class="token operator">*</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="56"></td><td><pre>            J_A14 <span class="token operator">=</span> <span class="token punctuation">(</span>dt <span class="token operator">*</span> v <span class="token operator">/</span> heading_rate <span class="token punctuation">)</span><span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>v<span class="token operator">/</span><span class="token punctuation">(</span>heading_rate <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="57"></td><td><pre>                        np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>dt <span class="token operator">*</span> heading_rate <span class="token operator">+</span> heading<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="58"></td><td><pre>            self<span class="token punctuation">.</span>J_A <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> J_A02<span class="token punctuation">,</span> J_A03<span class="token punctuation">,</span> J_A04<span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="59"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> J_A12<span class="token punctuation">,</span> J_A13<span class="token punctuation">,</span> J_A14<span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="60"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="61"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> dt<span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="62"></td><td><pre>                                <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="63"></td><td><pre>                                <span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="64"></td><td><pre>        Q_v <span class="token operator">=</span> np<span class="token punctuation">.</span>diag<span class="token punctuation">(</span><span class="token punctuation">[</span>self<span class="token punctuation">.</span>std_noise_a <span class="token operator">*</span> self<span class="token punctuation">.</span>std_noise_a<span class="token punctuation">,</span> self<span class="token punctuation">.</span>std_noise_yaw_dd <span class="token operator">*</span> self<span class="token punctuation">.</span>std_noise_yaw_dd<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="65"></td><td><pre>        temp<span class="token operator">=</span>np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="66"></td><td><pre>        temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> dt <span class="token operator">*</span> dt <span class="token operator">*</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>heading<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="67"></td><td><pre>        temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> dt <span class="token operator">*</span> dt <span class="token operator">*</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>heading<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="68"></td><td><pre>        temp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> dt</pre></td></tr><tr><td data-num="69"></td><td><pre>        temp<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> dt <span class="token operator">*</span> dt</pre></td></tr><tr><td data-num="70"></td><td><pre>        temp<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> dt</pre></td></tr><tr><td data-num="71"></td><td><pre>        <span class="token comment">############## 更新 Q ########################</span></pre></td></tr><tr><td data-num="72"></td><td><pre>        self<span class="token punctuation">.</span>Q <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>temp<span class="token punctuation">,</span> Q_v<span class="token punctuation">)</span><span class="token punctuation">,</span> temp<span class="token punctuation">.</span>T<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="73"></td><td><pre>    </pre></td></tr><tr><td data-num="74"></td><td><pre>        b1<span class="token operator">=</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>J_A<span class="token punctuation">,</span>self<span class="token punctuation">.</span>P<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="75"></td><td><pre>        b2<span class="token operator">=</span>np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>b1<span class="token punctuation">,</span>np<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>self<span class="token punctuation">.</span>J_A<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="76"></td><td><pre>        pk_<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token operator">+</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>self<span class="token punctuation">.</span>Q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="77"></td><td><pre>        <span class="token comment">############################################ 更新部分</span></pre></td></tr><tr><td data-num="78"></td><td><pre>        <span class="token comment"># Kk = Pk_*J_Hk'/(J_Hk*Pk_*Hk'+R)</span></pre></td></tr><tr><td data-num="79"></td><td><pre>        c1 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>pk_<span class="token punctuation">,</span> np<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>self<span class="token punctuation">.</span>H<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="80"></td><td><pre>        c2 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>H<span class="token punctuation">,</span> pk_<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="81"></td><td><pre>        c3 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>c2<span class="token punctuation">,</span> np<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>self<span class="token punctuation">.</span>H<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="82"></td><td><pre>        c4 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>c3<span class="token punctuation">)</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>self<span class="token punctuation">.</span>R<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="83"></td><td><pre>        c5 <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>matrix_power<span class="token punctuation">(</span>c4<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="84"></td><td><pre>        self<span class="token punctuation">.</span>K <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>c1<span class="token punctuation">,</span> c5<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="85"></td><td><pre></pre></td></tr><tr><td data-num="86"></td><td><pre>        <span class="token comment"># Xk = Xk_+Kk(Zk-Hk*Xk_)</span></pre></td></tr><tr><td data-num="87"></td><td><pre>        d1 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>H<span class="token punctuation">,</span> xk_<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="88"></td><td><pre>        d2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>self<span class="token punctuation">.</span>z<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>d1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="89"></td><td><pre>        d3 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>K<span class="token punctuation">,</span> d2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="90"></td><td><pre>        self<span class="token punctuation">.</span>x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>xk_<span class="token punctuation">)</span> <span class="token operator">+</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>d3<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="91"></td><td><pre>        self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span> self<span class="token punctuation">.</span>control_psi<span class="token punctuation">(</span>self<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="92"></td><td><pre>        </pre></td></tr><tr><td data-num="93"></td><td><pre>        <span class="token comment"># Pk = Pk_-Kk*J_Hk*Pk_</span></pre></td></tr><tr><td data-num="94"></td><td><pre>        e1 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>self<span class="token punctuation">.</span>K<span class="token punctuation">,</span> self<span class="token punctuation">.</span>H<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="95"></td><td><pre>        e2 <span class="token operator">=</span> np<span class="token punctuation">.</span>dot<span class="token punctuation">(</span>e1<span class="token punctuation">,</span> pk_<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="96"></td><td><pre>        self<span class="token punctuation">.</span>P <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>pk_<span class="token punctuation">)</span> <span class="token operator">-</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>e2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="97"></td><td><pre>        <span class="token comment">#print(self.R)</span></pre></td></tr></tbody></table></figure><ul><li>   航向角小于0.0001时，xk\_ = \left[   \matrix{     v*\Delta t*cos(航向)+x[0]\\     v*\Delta t*sin(航向)+x[1]\\     v\\     航向 \\     0.0001 \\   }    \hspace{1cm}\right]</li><li>   J\_A = \left[   \matrix{     1 &amp; 0 &amp; \Delta t*cos(航向) &amp; -\Delta t*v*sin(航向) &amp; 0\\     0 &amp; 1 &amp; \Delta t*sin(航向) &amp; \Delta t*v*cos(航向) &amp; 0\\     0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\     0 &amp; 0 &amp; 0 &amp; 1 &amp; \Delta t\\     0 &amp; 0 &amp; 0 &amp; 0 &amp; 1   }   \right]</li></ul><p>​</p><p><strong>航向角大于等于 0.0001 时，</strong></p><ul><li>\small xk\_ = \left[\matrix{  v/航向角速度*sin(航向角速度*\Delta t+航向)-v *sin(航向)/航向角速度 + x[0]\\  -v/航向角速度 * cos(航向角速度 * \Delta t+航向) + v /航向角速度 * cos(航向) + x[1]\\  v\\  control\_psi(航向角速度*\Delta t+航向角)\\  航向角速度 }\hspace{3cm}\right]</li><li><figure class="highlight txt"><figcaption data-lang="txt"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>J_A02 = 1 / 航向角速度 * (sin(dt * 航向角速度 + 航向) - sin(航向))</pre></td></tr><tr><td data-num="2"></td><td><pre>        J_A03 = v / 航向角速度 * (cos(dt * 航向角速度 + 航向) - cos(航向))</pre></td></tr><tr><td data-num="3"></td><td><pre>        J_A04 = (dt * v / 航向角速度) * sin(dt * 航向角速度 + 航向) -(v /(航向角速度 ** 2)) * (cos(dt * 航向角速度 + 航向) - cos(航向))</pre></td></tr><tr><td data-num="4"></td><td><pre>        J_A12 = 1 / 航向角速度 * (cos(航向) - cos(dt * 航向角速度 + 航向))</pre></td></tr><tr><td data-num="5"></td><td><pre>        J_A13 = v / 航向角速度 * (sin(dt * 航向角速度 + 航向) - sin(航向))</pre></td></tr><tr><td data-num="6"></td><td><pre>        J_A14 = (dt * v / 航向角速度 )* cos(dt * 航向角速度 + 航向) - (v/(航向角速度 ** 2)) * (sin(航向) - sin(dt * 航向角速度 + 航向))</pre></td></tr><tr><td data-num="7"></td><td><pre>    ```</pre></td></tr></tbody></table></figure></li><li>J\_A = \left[\matrix{  1 &amp; 0 &amp; J\_A02 &amp; J\_A03 &amp; J\_A04\\  0 &amp; 1 &amp; J\_A12 &amp; J\_A13 &amp; J\_A14\\  0 &amp; 0 &amp; 1 &amp; 0 &amp; 0\\  0 &amp; 0 &amp; 0 &amp; 1 &amp; \Delta t\\  0 &amp; 0 &amp; 0 &amp; 0 &amp; 1}\right]</li><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>b</mi><mn>1</mn></msub><mo>=</mo><mi>J</mi><mi mathvariant="normal">_</mi><mi>A</mi><mo>∗</mo><mi>P</mi><mspace linebreak="newline"></mspace><msub><mi>b</mi><mn>2</mn></msub><mo>=</mo><msub><mi>b</mi><mn>1</mn></msub><mo>∗</mo><mi>J</mi><mi mathvariant="normal">_</mi><msup><mi>A</mi><mi>T</mi></msup><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">b_1 = J\_A*P\\b_2 = b_1*J\_A^{T}\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.99333em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.201331em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p><p>c_1 = pk_<em>H^T\<br>c_2 = H</em>pk_\<br>c_3 = c_2<em>H^T\<br>c_4 = c_3+R\<br>c_5 = c_4^{-1}\<br>K = c_1</em>c_5</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p><p>d_1 = H<em>xk_\<br>d_2 = z-d_1\<br>d_3 = K</em>d_2\<br>x = xk_+d_3\<br> 航向 = control_psi (航向)\</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p><p>e_1 = K<em>H\<br>e_2 = e_1</em>pk_\<br>P = pk_-e_2</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow></mrow><annotation encoding="application/x-tex"></annotation></semantics></math></span><span class="katex-html" aria-hidden="true"></span></span></span></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 卡尔曼滤波系列算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 参数准备 </tag>
            
            <tag> 参数初始化 </tag>
            
            <tag> 函数定义 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>封装</title>
      <link href="/2023/02/09/%E9%BB%91%E9%A9%ACcpp%E7%AC%94%E8%AE%B0/%E5%B0%81%E8%A3%85/"/>
      <url>/2023/02/09/%E9%BB%91%E9%A9%ACcpp%E7%AC%94%E8%AE%B0/%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="一-封装的意义"><a class="anchor" href="#一-封装的意义">#</a> 一。封装的意义</h2><h3 id="1-将属性和行为作为一个整体表现生活中的事物"><a class="anchor" href="#1-将属性和行为作为一个整体表现生活中的事物">#</a> 1. 将属性和行为作为一个整体，表现生活中的事物</h3><h3 id="2-将属性和行为加以权限控制"><a class="anchor" href="#2-将属性和行为加以权限控制">#</a> 2. 将属性和行为加以权限控制</h3><ul><li>语法：class 类名（访问权限：属性 / 行为）；</li><li>属性使用变量，行为使用函数</li></ul><h3 id="3-属性和行为放在不同的权限中加以控制"><a class="anchor" href="#3-属性和行为放在不同的权限中加以控制">#</a> 3. 属性和行为放在不同的权限中，加以控制</h3><p>访问权限有三种：public、protected、private</p><ol><li><p>public：类内外均可访问</p></li><li><p>protected: 类内可以访问，类外不可以访问 儿子可以访问父亲的保护内容</p></li><li><p>private：类内可以访问，类外不可以访问 儿子不可以访问父亲的私有内容</p></li></ol><h2 id="二-class和struct的区别"><a class="anchor" href="#二-class和struct的区别">#</a> 二. class 和 struct 的区别</h2><ol><li>struct 默认权限为公共</li><li>class 默认权限是私有</li></ol><h2 id="三-成员属性设置为私有"><a class="anchor" href="#三-成员属性设置为私有">#</a> 三。成员属性设置为私有</h2><ol><li>优点 1：将所有成员属性设置为私有，可以控制读写权限</li><li>优点 2：对于写权限，我们可以检测数据的有效性</li><li>类内给出设置和输出成员变量的函数，主函数可以通过设置函数和输出函数读写成员变量。<br>如下代码：</li></ol><pre><code class="language-c++">class Person{public:void setName(string name){m_Age = 0;m_Name = name;}string getName(){return m_Name;}int getAge(){return m_Age;}void setAge(int age){if(age&lt;0||age&gt;150){m_Age = 0;cout&lt;&lt;"你这个老妖精!"&lt;&lt;endl;return;}m_Age = age;}void setLover(string lover){m_Lover = lover;}private:string m_Name;int m_Age;string m_Lover;};</code></pre><h2 id="四-案例-设计立方体类"><a class="anchor" href="#四-案例-设计立方体类">#</a> 四。案例 -- 设计立方体类</h2><ul><li>求出立方体的面积和体积</li><li>分别用全局函数和成员函数判断两个立方体是否相等</li></ul><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/image-20230209202331391.png" alt="image-20230209202331391"></p><ul><li>全局函数判断是否相等：</li></ul><pre><code class="language-c++">bool isame(Cube &amp;c1, Cube &amp;c2){if(c1.getL() == c2.getL() &amp;&amp; (c1.getW() == c2.getW() &amp;&amp; (c1.getH() == c2.getH)){return true;}       return false;}</code></pre><ul><li>成员函数判断是否相等：</li></ul><pre><code class="language-c++">class Cube{public:int m_L;int m_W;int m_H;int getL()    {        return m_L;    }    int getW()    {        return m_W;    }    int getH()    {        return m_H;    }    int setL(int l)    {        m_L = l;    }     int setW(int w)    {        m_W = w;    }        int setH(int h)    {        m_H = h;    }   int size(){return 2*m_L*m_W+2*m_L*m_H+2*m_W*m_H;}int volume(){return m_W*m_H*m_L;}    bool isame(Cube &amp;c)    {if(m_L == c.getL() &amp;&amp; m_W == c.getW() &amp;&amp; m_H == c.getH()){return true;}       return false;    }};</code></pre><h2 id="五-案例-点和圆的关系"><a class="anchor" href="#五-案例-点和圆的关系">#</a> 五。案例 -- 点和圆的关系</h2><ul><li>根据点与圆心距离与半径比较，判断点和圆的关系</li><li>略。</li><li><strong>类中可以允许存在类成员变量和函数</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 黑马c++学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 封装的意义 </tag>
            
            <tag> class和struct的区别 </tag>
            
            <tag> 成员属性设置为私有 </tag>
            
            <tag> 案例-设计立方体类 </tag>
            
            <tag> 案例-点和圆的关系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水下威胁评估</title>
      <link href="/2023/02/09/710%E9%A1%B9%E7%9B%AE/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0%E6%80%BB%E7%BB%93/"/>
      <url>/2023/02/09/710%E9%A1%B9%E7%9B%AE/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0/%E6%B0%B4%E4%B8%8B%E7%9B%AE%E6%A0%87%E5%A8%81%E8%83%81%E8%AF%84%E4%BC%B0%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="一-主要任务"><a class="anchor" href="#一-主要任务">#</a> 一、主要任务</h1><p>根据状态估计获得的目标的位置和运动状态信息，对水下运动目标（移动声靶、蛙人）进行威胁评估，给出目标对 AUV 的威胁程度。</p><h1 id="二-威胁评估指标选择"><a class="anchor" href="#二-威胁评估指标选择">#</a> 二、威胁评估指标选择</h1><p>距离（AUV 与目标）、碰撞风险、航向差、速度差、AUV 数量（同类目标数量）</p><h1 id="三-主要方法"><a class="anchor" href="#三-主要方法">#</a> 三、主要方法</h1><p><strong>基于结构熵的威胁要素权重评估、基于层次分析法威胁评估预测</strong></p><h2 id="31-数据准备"><a class="anchor" href="#31-数据准备">#</a> 3.1 数据准备</h2><p>给出某一时刻探测到目标信息：距离（AUV 与目标）、碰撞风险、航向差、速度差、AUV 数量</p><h2 id="32-基于结构熵的威胁要素权重评估"><a class="anchor" href="#32-基于结构熵的威胁要素权重评估">#</a> 3.2 基于结构熵的威胁要素权重评估</h2><p>设定 6 个专家，每个专家对 5 个指标的重要性进行排序</p><table><thead><tr><th></th><th>专家 1</th><th>专家 2</th><th>专家 3</th><th>专家 4</th><th>专家 5</th><th>专家 6</th></tr></thead><tbody><tr><td>距离（AUV 与目标）</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td></tr><tr><td>碰撞风险</td><td>2</td><td>1</td><td>4</td><td>3</td><td>6</td><td>5</td></tr><tr><td>航向差</td><td>2</td><td>3</td><td>1</td><td>4</td><td>6</td><td>5</td></tr><tr><td>速度差</td><td>3</td><td>2</td><td>1</td><td>4</td><td>5</td><td>6</td></tr><tr><td>AUV 数量</td><td>6</td><td>4</td><td>2</td><td>1</td><td>3</td><td>5</td></tr></tbody></table><p>给定认识度权重 ： imp_weight = [0.3,0.23,0.17,0.1,0.1,0.1]</p><h3 id="321-计算隶属度矩阵d"><a class="anchor" href="#321-计算隶属度矩阵d">#</a> 3.2.1 计算隶属度矩阵 D</h3><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> kk <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">6</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token keyword">for</span> jj <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span></pre></td></tr><tr><td data-num="3"></td><td><pre>            <span class="token function">F</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token function">imp_sort</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token function">imp_sort</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token function">log</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token function">imp_sort</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token function">D</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span><span class="token function">F</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token function">imp_sort</span><span class="token punctuation">(</span>kk<span class="token punctuation">,</span>jj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token comment">%M(kk,jj) = log(m-imp_sort(kk,jj))/log(m-1)-1+(m-1)/(m-imp_sort(kk,jj));</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token keyword">end</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">end</span></pre></td></tr></tbody></table></figure><h3 id="322-计算每个指标的平均认识度c"><a class="anchor" href="#322-计算每个指标的平均认识度c">#</a> 3.2.2 计算每个指标的平均认识度 C</h3><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token keyword">for</span> nn <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">6</span></pre></td></tr><tr><td data-num="3"></td><td><pre>             <span class="token function">C</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">C</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">D</span><span class="token punctuation">(</span>nn<span class="token punctuation">,</span>mm<span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">imp_weight</span><span class="token punctuation">(</span>nn<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token keyword">end</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">end</span></pre></td></tr></tbody></table></figure><h3 id="323-计算每个指标的认识盲度b和总体认识度a"><a class="anchor" href="#323-计算每个指标的认识盲度b和总体认识度a">#</a> 3.2.3 计算每个指标的认识盲度 B 和总体认识度 A</h3><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token keyword">for</span> nn <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">6</span></pre></td></tr><tr><td data-num="3"></td><td><pre>             <span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">D</span><span class="token punctuation">(</span>nn<span class="token punctuation">,</span>mm<span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">C</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">imp_weight</span><span class="token punctuation">(</span>nn<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token keyword">end</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token function">A</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">C</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span><span class="token function">B</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">end</span></pre></td></tr></tbody></table></figure><h3 id="324-对总体认识度a进行归一化得到目标威胁评估指标的权值"><a class="anchor" href="#324-对总体认识度a进行归一化得到目标威胁评估指标的权值">#</a> 3.2.4 对总体认识度 A 进行归一化，得到目标威胁评估指标的权值</h3><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token function">omega</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">A</span><span class="token punctuation">(</span>mm<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">end</span></pre></td></tr></tbody></table></figure><h3 id="325-结果"><a class="anchor" href="#325-结果">#</a> 3.2.5 结果</h3><p><strong>omega = (0.2039,0.1668,0.2382,0.1523,0.2389)</strong></p><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token comment">% 使用一个函数实现</span></pre></td></tr><tr><td data-num="2"></td><td><pre>omega <span class="token operator">=</span> <span class="token function">weight_estimation</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 权重确定</span></pre></td></tr></tbody></table></figure><h2 id="33-基于层次分析法威胁评估预测"><a class="anchor" href="#33-基于层次分析法威胁评估预测">#</a> 3.3 基于层次分析法威胁评估预测</h2><h3 id="331-数据准备"><a class="anchor" href="#331-数据准备">#</a> 3.3.1 数据准备</h3><table><thead><tr><th>距离（AUV 与目标）</th><th>碰撞风险</th><th>航向差</th><th>速度差</th><th>AUV 数量（同类数量）</th></tr></thead><tbody><tr><td>13</td><td>14.34</td><td>0.924</td><td>0.047</td><td>1</td></tr><tr><td>12.25</td><td>14.25</td><td>1.1</td><td>0.047</td><td>1</td></tr><tr><td>13.04</td><td>15.04</td><td>1.281</td><td>0.047</td><td>1</td></tr><tr><td>11.05</td><td>13.05</td><td>1.462</td><td>0.049</td><td>1</td></tr><tr><td>11.81</td><td>13.81</td><td>1.635</td><td>0.049</td><td>2</td></tr><tr><td>11.67</td><td>13.67</td><td>1.656</td><td>0.0492</td><td>2</td></tr></tbody></table><h3 id="332-计算每个指标的判断矩阵"><a class="anchor" href="#332-计算每个指标的判断矩阵">#</a> 3.3.2 计算每个指标的判断矩阵</h3><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> t <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>n</pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">for</span> nn <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m</pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m</pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token keyword">if</span> t <span class="token operator">~=</span> <span class="token number">2</span> <span class="token operator">||</span> t <span class="token operator">~=</span>n</pre></td></tr><tr><td data-num="5"></td><td><pre>                matrix<span class="token punctuation">{</span>t<span class="token punctuation">}</span><span class="token punctuation">(</span>mm<span class="token punctuation">,</span>nn<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">new_data</span><span class="token punctuation">(</span>nn<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">new_data</span><span class="token punctuation">(</span>mm<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token keyword">else</span></pre></td></tr><tr><td data-num="7"></td><td><pre>                matrix<span class="token punctuation">{</span>t<span class="token punctuation">}</span><span class="token punctuation">(</span>mm<span class="token punctuation">,</span>nn<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">new_data</span><span class="token punctuation">(</span>mm<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">new_data</span><span class="token punctuation">(</span>nn<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token keyword">end</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token keyword">end</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">end</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">end</span></pre></td></tr></tbody></table></figure><h3 id="333-构造特征向量矩阵w"><a class="anchor" href="#333-构造特征向量矩阵w">#</a> 3.3.3 构造特征向量矩阵 W</h3><p>根据每个指标的判断矩阵计算这个指标的特征向量矩阵 W</p><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> t <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>n</pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">for</span> mm <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m</pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token function">W</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>mm<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span>matrix<span class="token punctuation">{</span>t<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>mm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token keyword">end</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">end</span></pre></td></tr></tbody></table></figure><ul><li><p>距离（AUV 与目标）判断矩阵</p><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/%E5%88%A4%E6%96%AD%E7%9F%A9%E9%98%B5.png" alt="判断矩阵"></p></li></ul><h3 id="334-计算威胁评估指标并进行排序"><a class="anchor" href="#334-计算威胁评估指标并进行排序">#</a> 3.3.4 计算威胁评估指标并进行排序</h3><p>每个指标的特征向量矩阵 W × 每个指标的权值 omega</p><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tbody><tr><td data-num="1"></td><td><pre>threat_degree <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">for</span> uu <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m</pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token function">threat_degree</span><span class="token punctuation">(</span>uu<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">omega</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">W</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span>uu<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">end</span></pre></td></tr></tbody></table></figure><h3 id="335-最终结果"><a class="anchor" href="#335-最终结果">#</a> 3.3.5 最终结果</h3><p>0.1924 ， 0.1843 ， 0.1676 ， 0.1623 ， 0.1487， 0.1447</p><h1 id="四-总结"><a class="anchor" href="#四-总结">#</a> 四、总结</h1><p>仿真层面：使用仿真系统获取到的数据，假定某一时刻的距离（AUV 与目标）、碰撞风险、航向差、速度差、AUV 数量，然后计算获得结果。</p><p>实际：需要 AUV 进行下海实验，获取真实目标的信息</p><p>验证：</p><ol><li><p>理解一：将本实验使用的层次分析法和其他方法（比如主成分分析法）进行对比，验证它的优势。</p></li><li><p>理解二：使用真实目标状态信息算出的威胁评估值和使用状态估计出来的目标状态信息进行比较。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
          <category> project_710 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习路线</title>
      <link href="/2023/02/06/others/C++%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/"/>
      <url>/2023/02/06/others/C++%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
      
        <content type="html"><![CDATA[<p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/C%2B%2B%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF.png" alt="C++学习路线"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>论文写作技巧</title>
      <link href="/2023/02/06/Writing/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/"/>
      <url>/2023/02/06/Writing/%E8%AE%BA%E6%96%87%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="一-学术论文两要素专业的知识-科学的表达"><a class="anchor" href="#一-学术论文两要素专业的知识-科学的表达">#</a> 一、学术论文两要素：专业的知识、科学的表达</h1><h2 id="1-专业的知识包括以下特点你写的这篇文章要具备的要素"><a class="anchor" href="#1-专业的知识包括以下特点你写的这篇文章要具备的要素">#</a> 1. 专业的知识包括以下特点（你写的这篇文章要具备的要素）</h2><ul><li><p>新颖性：创新点</p></li><li><p>普适性：提出的方法、理论、发现、实验等不仅适用于单一的情况</p></li><li><p>学术性：从项目中提炼科学问题</p></li></ul><h2 id="2-科学的表达"><a class="anchor" href="#2-科学的表达">#</a> 2. 科学的表达</h2><ul><li>清晰的表达思路：想好文章的中心思想，为了论证它怎么摆事实、讲道理；（围绕基于 xx 的一种方法，围绕方法进行验证，实验和结果展示（摆事实），这些结果说明了这个方法好（讲道理））</li><li>良好的文章结构：题目、摘要、前言、问题描述、方法、验证、结论</li><li>公认的科学语言：要用业内的专业术语来表述提出的方法或理论</li></ul><h1 id="二-论文选题"><a class="anchor" href="#二-论文选题">#</a> 二、论文选题</h1><h2 id="1-阅读国内外本领域高水平的大学博士论文"><a class="anchor" href="#1-阅读国内外本领域高水平的大学博士论文">#</a> 1. 阅读国内外本领域高水平的大学博士论文</h2><p>可以获得第一手全面的背景、方法、逻辑以及进展</p><h2 id="2-广泛阅读高水平期刊论文学会检索文献"><a class="anchor" href="#2-广泛阅读高水平期刊论文学会检索文献">#</a> 2. 广泛阅读高水平期刊论文（学会检索文献）</h2><p>看什么决定想什么，做什么，如何做</p><h2 id="3-确定论文的方向确定几个可能的内容"><a class="anchor" href="#3-确定论文的方向确定几个可能的内容">#</a> 3. 确定论文的方向，确定几个可能的内容</h2><ul><li>很难在选题阶段就将要做的内容 “算计” 很全面</li><li>关键是把握方向，研究过程中不停地修正</li><li>很多论文与选题报告相差甚远</li></ul><h1 id="三-选题建议"><a class="anchor" href="#三-选题建议">#</a> 三、选题建议</h1><p><strong>1. 本领域国际学术界研究热点但未能突破的问题</strong><br>模仿别人，跟风随大流，容易出成果，比较难出高水平成果（跟别人解决一样的问题，使用不同的方法，并且解决得比他好）</p><p><strong>2. 基于课题组的学术成果进行拓展延伸（做的好的论文可以进行拓展研究）</strong><br>可能并非当前热门的领域，但研究扎实，论文水平高<br><strong> 3. 当前工程中尚未解决的难题（项目过程中发现的问题）</strong><br>需要提炼科学问题，比较难，很有价值<br><strong> 4. 考虑课题组的实验条件、经费及个人兴趣</strong></p><h1 id="四-如何研究"><a class="anchor" href="#四-如何研究">#</a> 四、如何研究</h1><ol><li>尽快建立自己的信心和兴趣：建立正反馈机制，不断制定小目标然后实现，逐渐找到科研的感觉；</li><li><strong>要制定严格的计划</strong>：计划完不成可以修正，但没计划可能无限拖延；</li><li>不放过任何灵感：时刻记录下自己的想法，不成熟的可以完善，不可行的再放弃；</li><li>研究的内容可以并行：不要被一个点卡住就止步，先做别的，再回过头来想新的方法。</li></ol><h1 id="五-创新点"><a class="anchor" href="#五-创新点">#</a> 五、创新点</h1><p><strong>干了别人没干过的事，就是创新</strong></p><ol><li>发现别人没发现的现象</li><li>提出别人没提出的理论或方法</li><li>解决了别人没解决的问题</li><li>设计了别人没做过的实验</li></ol><h1 id="六-创新的境界"><a class="anchor" href="#六-创新的境界">#</a> 六、创新的境界</h1><ol><li>无中生有（最高境界）</li><li>标新立异：原始创新，发现新问题，提出新方法；<br>**3. 新瓶装旧酒，旧瓶装新酒：提出新方法解决旧问题，发现新问题使用旧方法解决。</li><li>移花接木：旧问题，旧方法，新的排列组合 **</li><li>批判式创新<br>指出别人文献中的问题，并对其作出了解释。</li></ol><h1 id="七-基本学术道德和规范必须遵守"><a class="anchor" href="#七-基本学术道德和规范必须遵守">#</a> 七、基本学术道德和规范必须遵守</h1><h1 id="八-文献检索"><a class="anchor" href="#八-文献检索">#</a> 八、文献检索</h1><ul><li>中文检索库：</li><li>中国知网、东北大学学位论文（<span class="exturl" data-url="aHR0cHM6Ly8yMDIuMTE4LjguMjQvJUVGJUJDJTg5">https://202.118.8.24/）</span></li><li>外文检索库：IEEE (IEEE Xplore)、Elsevier (www.sciencedi)、Springer (<span class="exturl" data-url="aHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS8=">https://link.springer.com/</span>)、SAGE(<span class="exturl" data-url="aHR0cHM6Ly9qb3VybmFscy5zYWdlcHViLmNvbS8=">https://journals.sagepub.com/</span>)、</li><li>SCI-Hub 论文下载：(<span class="exturl" data-url="aHR0cHM6Ly90b29sLnlvdmlzdW4uY29tLw==">https://tool.yovisun.com/</span>)</li></ul><ul><li>检索收录：<br>EI：<span class="exturl" data-url="aHR0cHM6Ly93d3cuZW5naW5lZXJpbmd2aWxsYWdlLmNvbS8=">https://www.engineeringvillage.com/</span><br>SCI：web of science: <span class="exturl" data-url="aHR0cHM6Ly93d3cud2Vib2ZzY2llbmNlLmNvbS8=">https://www.webofscience.com/</span><br>SCI 分区：<span class="exturl" data-url="aHR0cDovL3d3dy5sZXRwdWIuY29tLmNuL2luZGV4LnBocD9wYWdlPWpvdXJuYWxhcHA=">http://www.letpub.com.cn/index.php?page=journalapp</span></li></ul><h1 id="九-阅读文献的目的"><a class="anchor" href="#九-阅读文献的目的">#</a> 九、阅读文献的目的</h1><ol><li>研究该领域的背景和进展</li><li>了解研究热点和前沿</li><li>寻找前人研究的不足、缺陷</li><li>学习论文的写作技巧</li><li>学习他人提出的优秀的方法</li></ol><p><strong>步骤：</strong></p><ol><li>找 5～10 篇中文的博士论文和综述型期刊论文<br>博士论文：主要了解领域的背景、进展、主要研究方法和手段等，<strong>3～7 天一篇，英文论文 1-2 周一篇，重点关注前言和用了哪些方法，具体方法的细节看不懂没关系</strong></li><li>研究型论文（顶刊顶会）<br>了解领域内的热点、前沿，学习先进新颖的想法、方法，学习写作技巧，<strong>1 周 1 篇到 1 天 - N 篇，复现 1-3 篇经典高质量论文</strong></li></ol><h1 id="十-研究型论文阅读方法"><a class="anchor" href="#十-研究型论文阅读方法">#</a> 十、研究型论文阅读方法</h1><ol><li>看题目，研究对象和方法（1）</li><li>看作者，有没有大牛（10s）</li><li>看摘要，具体是什么问题，用了什么方法，取得了什么效果 (5~10)</li><li>前言，建模，方法，验证统统过</li><li>看原理图，整体框架图（3～5）</li><li>方法和我们的方向关系密切的话就仔细看，公式推导和细节（20～30）</li><li>看图，是否表达了需要表达的信息（画得好的可以仿照着画，2～3）</li><li>看结论，贡献和效果</li></ol><h1 id="十一-引用论文的技巧"><a class="anchor" href="#十一-引用论文的技巧">#</a> 十一、引用论文的技巧</h1><ol><li>数量要多（全面），20 起步，30 合格，40 优秀</li><li>质量要高（水准）：<br>高水平 SCI 期刊论文：参考文献的主体构成<ul><li>权威会议的论文：不要过多引用，0～5 篇</li><li>经典、权威的英文专著：适当引用 1～2 部</li><li>中文文献和非 SCI 论文：能少则少</li></ul></li></ol><h1 id="十二-写作建议"><a class="anchor" href="#十二-写作建议">#</a> 十二、写作建议</h1><ol><li>一气呵成</li><li>写作和实践相结合：白天写论文，晚上做实验 / 调仿真</li><li>制定计划，严格执行，尽快完成初稿</li><li>反复修改（修改 10 遍）</li></ol><h1 id="十三-写作顺序"><a class="anchor" href="#十三-写作顺序">#</a> 十三、写作顺序</h1><ol><li>题目 / 摘要（初步写一个）</li><li>问题描述 / 建立模型</li><li>方法和验证分析</li><li>结论</li><li>前言</li><li>摘要（认真修改）：表述前因后果讲清楚、创新点更加详细、贡献更加突出<ul><li>描述对象 / 问题及其重要性</li><li>说明难点或者未解决的难题</li><li>本论文提出了什么方法</li><li>提出的方法是怎样实现的 / 解决问题的</li><li>方法取得了什么效果，有什么贡献，有哪些拓展应用，未来还能怎么研究等等</li></ul></li><li>题目（反复推敲）</li></ol><h1 id="十四-新手第一篇先抄袭再超越"><a class="anchor" href="#十四-新手第一篇先抄袭再超越">#</a> 十四、新手第一篇 —— 先抄袭再超越</h1><ol><li>找一篇与自己研究内容最类似的高水平论文</li><li>反复阅读（3～5 遍）</li><li>学习论文中的表达方式（问题描述、结果分析等）</li><li>对照着写论文（卡壳了就看看别人怎么写的）</li><li>过程中要想清楚自己的论文的优势</li><li>写完反复修改语言</li></ol><ul><li>题目：</li></ul><ol><li>对象 + 问题 + 方法<br> XXX（Method）of XXX (object) for XXX (problem)</li><li>对象 / 问题（可以简化）+ 方法（描述其创新性、独特性）<strong>用这个</strong><br> XXX（Method）of XXX（object/problem）with/based on/considering XXX (characteristics)</li><li>对象 / 问题 + 方法（描述其创新性和普适性）<br>XXX (Method) of XXX（object/problem）with/based on/considering XXX (characteristics) + ??(设计和实验)</li></ol><h1 id="十五-前言"><a class="anchor" href="#十五-前言">#</a> 十五、前言</h1><ol><li>交代研究背景</li><li>说明研究内容的重要性</li><li><strong>目前研究的不足</strong></li><li>提出研究的问题</li><li>简要说明解决方法</li><li>说明为什么用上述方法</li><li><strong>创新点和贡献</strong></li><li>给出文章结构</li></ol><p><strong>内容：</strong></p><ol><li>问题背景</li><li>研究进展</li><li>问题描述</li><li>动机和创新点</li><li>文章结构（有加有不加）</li></ol><h1 id="十六-介绍他人工作"><a class="anchor" href="#十六-介绍他人工作">#</a> 十六、介绍他人工作</h1><p>** 吹：** 正面积极地评价他人工作，使用修饰词，如 new、novel、firstly、greatly、effective、important 等，篇幅长<br><strong>黑：委婉</strong>前人研究的不足，引出本文的工作（研究的问题），少用 but, 用 however，不要直接评论他人工作不足，而是说某个问题前面研究没考虑。话不要说死，留后路，as far as authors/we know</p><h1 id="十七-建模和问题描述"><a class="anchor" href="#十七-建模和问题描述">#</a> 十七、建模和问题描述</h1><p><strong>归纳建立一个简洁又不失深度的问题 / 数学模型</strong><br><strong> 1. 建立模型</strong><br>自己提出的模型，要重点描述<br>引用别人的就简单描述<br>自己的改进的部分，重点描述改进的部分<br><strong> 2. 归纳问题</strong><br>科学问题，有学术性，专业的学术语言</p><h1 id="十八-仿真和实验"><a class="anchor" href="#十八-仿真和实验">#</a> 十八、仿真和实验</h1><p>设计一个有说服力的实验 / 仿真验证，选择具有代表性的，可以出好看的图片的实验<br>多进行<strong>消融实验</strong>，结果分析充分详尽（可以学习别人的）</p><h1 id="十九-结论"><a class="anchor" href="#十九-结论">#</a> 十九、结论</h1><p><strong>总结一个有学术价值的结论</strong><br>本文针对 XX 问题，提出了 XX 方法，从而解决了其中 XX 难题，取得了 XX 效果（有数据最好）。<br>本文的主要贡献在于：1）提出了 XX 方法，和之前研究相比有什么特点或创新；2）解决了什么问题，克服了哪些困难，取得了什么样的效果 3）该方法还能扩展应用到哪些方面。<br>本文工作还有哪些不足，未来工作将从哪几个方面进行。<strong>（要委婉）</strong></p>]]></content>
      
      
      <categories>
          
          <category> 论文写作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Typora使用方法</title>
      <link href="/2023/02/06/others/Typora%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2023/02/06/others/Typora%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="一-markdown纯文本基本语法"><a class="anchor" href="#一-markdown纯文本基本语法">#</a> 一、Markdown 纯文本基本语法</h1><h2 id="1-标题"><a class="anchor" href="#1-标题">#</a> 1. 标题</h2><pre><code># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题</code></pre><ul><li>注意事项：# 号后面要有空格</li></ul><h2 id="2-字体"><a class="anchor" href="#2-字体">#</a> 2. 字体</h2><pre><code>**加粗**__加粗__*倾斜*_倾斜_***加粗倾斜***~~加删除线~~</code></pre><ul><li>注意事项：强调也可以直接插在文字中间，但是如果你的 * 和 _ 两边都有空白的话，它们就只会被当成普通的符号。 如果要在文字前后直接插入普通的星号或底线，你可以用反斜线 \ 。</li></ul><h2 id="3-分割线"><a class="anchor" href="#3-分割线">#</a> 3. 分割线</h2><pre><code>* * ****************- - -__________________</code></pre><h2 id="4-引用"><a class="anchor" href="#4-引用">#</a> 4. 引用</h2><pre><code>&gt; xxxxxxxxx&gt;&gt; xxxxxxxxxx&gt;&gt;&gt; xxxxxxxxxxx........</code></pre><h2 id="5-列表"><a class="anchor" href="#5-列表">#</a> 5. 列表</h2><h3 id="51-有序列表"><a class="anchor" href="#51-有序列表">#</a> 5.1 有序列表</h3><pre><code>- 列表内容+ 列表内容* 列表内容注意：- + * 跟内容之间都要有一个空格</code></pre><h3 id="52-无序列表"><a class="anchor" href="#52-无序列表">#</a> 5.2 无序列表</h3><pre><code>1. 列表内容2. 列表内容3. 列表内容注意：序号跟内容之间要有空格</code></pre><h3 id="53-无序列表嵌套"><a class="anchor" href="#53-无序列表嵌套">#</a> 5.3  无序列表嵌套</h3><pre><code>* 一级无序列表内容   * 二级无序列表内容   * 二级无序列表内容   * 二级无序列表内容</code></pre><h2 id="6-表格"><a class="anchor" href="#6-表格">#</a> 6. 表格</h2><pre><code>表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略</code></pre><table><thead><tr><th>表头</th><th style="text-align:center">表头</th><th style="text-align:right">表头</th></tr></thead><tbody><tr><td>内容</td><td style="text-align:center">内容</td><td style="text-align:right">内容</td></tr><tr><td>内容</td><td style="text-align:center">内容</td><td style="text-align:right">内容</td></tr></tbody></table><h2 id="7-代码"><a class="anchor" href="#7-代码">#</a> 7. 代码</h2><pre><code>\```  代码...  代码...  代码...\```\ 是为了防止转译，实际是没有的。</code></pre><h1 id="二-markdown纯文本进阶语法"><a class="anchor" href="#二-markdown纯文本进阶语法">#</a> 二、Markdown 纯文本进阶语法</h1><h2 id="1-更改字体-大小-颜色"><a class="anchor" href="#1-更改字体-大小-颜色">#</a> 1. 更改字体、大小、颜色</h2><pre><code>&lt;font face="黑体"&gt;我是黑体字&lt;/font&gt;&lt;font face="微软雅黑"&gt;我是微软雅黑&lt;/font&gt;&lt;font face="STCAIYUN"&gt;我是华文彩云&lt;/font&gt;&lt;font color=red&gt;我是红色&lt;/font&gt;&lt;font color=#008000&gt;我是绿色&lt;/font&gt;&lt;font color=Blue&gt;我是蓝色&lt;/font&gt;&lt;font size=5&gt;我是尺寸&lt;/font&gt;&lt;font face="黑体" color=green size=5&gt;我是黑体，绿色，尺寸为5&lt;/font&gt;</code></pre><p>&lt;font face="黑体"&gt; 我是黑体字 &lt;/font&gt;<br>&lt;font face="微软雅黑"&gt; 我是微软雅黑 &lt;/font&gt;<br>&lt;font face="STCAIYUN"&gt; 我是华文彩云 &lt;/font&gt;<br>&lt;font color=red&gt; 我是红色 &lt;/font&gt;<br>&lt;font color=#008000&gt; 我是绿色 &lt;/font&gt;<br>&lt;font color=Blue&gt; 我是蓝色 &lt;/font&gt;<br>&lt;font size=5&gt; 我是尺寸 &lt;/font&gt;<br>&lt;font face="黑体" color=green size=5&gt; 我是黑体，绿色，尺寸为 5&lt;/font&gt;</p><h2 id="2-为文字添加背景色"><a class="anchor" href="#2-为文字添加背景色">#</a> 2. 为文字添加背景色</h2><pre><code>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=yellow&gt;背景色yellow&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</code></pre><p>&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=yellow &gt; 背景色 yellow&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</p><h2 id="3-设置文字居中"><a class="anchor" href="#3-设置文字居中">#</a> 3. 设置文字居中</h2><pre><code>&lt;center&gt;居中&lt;/center&gt;&lt;p align="left"&gt;左对齐&lt;/p&gt;&lt;p align="right"&gt;右对齐&lt;/p&gt;</code></pre><p>&lt;center&gt; 居中 &lt;/center&gt;<br>&lt;p align="left"&gt; 左对齐 &lt;/p&gt;<br>&lt;p align="right"&gt; 右对齐 &lt;/p&gt;</p><h2 id="4-加入上下标"><a class="anchor" href="#4-加入上下标">#</a> 4. 加入上下标</h2><pre><code>H&lt;sub&gt;2&lt;/sub&gt;O  CO&lt;sub&gt;2&lt;/sub&gt;爆米&lt;sup&gt;TM&lt;/sup&gt;</code></pre><p>H&lt;sub&gt;2&lt;/sub&gt;O  CO&lt;sub&gt;2&lt;/sub&gt;<br> 爆米 &lt;sup&gt;TM&lt;/sup&gt;</p><h1 id="三-markdown进阶使用"><a class="anchor" href="#三-markdown进阶使用">#</a> 三、Markdown 进阶使用</h1><h2 id="1-超链接"><a class="anchor" href="#1-超链接">#</a> 1. 超链接</h2><h3 id="11-行内式"><a class="anchor" href="#11-行内式">#</a> 1.1 行内式</h3><pre><code>This is [an example](http://example.com/ "Title") inline link.[This link](http://example.net/) has no title attribute.</code></pre><p>This is <span class="exturl" data-url="aHR0cDovL2V4YW1wbGUuY29tLw==">an example</span> inline link.</p><p><span class="exturl" data-url="aHR0cDovL2V4YW1wbGUubmV0Lw==">This link</span> has no title attribute.</p><ul><li>如果想在新页面中打开的话用 html 语言的 a 标签代替</li></ul><pre><code>&lt;a href="www.baidu.com" target="_blank"&gt;超链接名&lt;/a&gt;</code></pre><p>&lt;a href="<span class="exturl" data-url="aHR0cDovL3d3dy5iYWlkdS5jb20=">www.baidu.com</span>"target="_blank"&gt; 超链接名 &lt;/a&gt;</p><h3 id="12-参考式"><a class="anchor" href="#12-参考式">#</a> 1.2 参考式</h3><pre><code>I get 10 times more traffic from [Google] [1] than from[Yahoo] [2] or [MSN] [3].  [1]: http://google.com/        "Google"  [2]: http://search.yahoo.com/  "Yahoo Search"  [3]: http://search.msn.com/    "MSN Search"</code></pre><pre><code>I get 10 times more traffic from [Google][] than from[Yahoo][] or [MSN][].  [google]: http://google.com/        "Google"  [yahoo]:  http://search.yahoo.com/  "Yahoo Search"  [msn]:    http://search.msn.com/    "MSN Search"</code></pre><h2 id="2-自动链接"><a class="anchor" href="#2-自动链接">#</a> 2. 自动链接</h2><pre><code>&lt;http://example.com/&gt;</code></pre><p><span class="exturl" data-url="aHR0cDovL2V4YW1wbGUuY29tLw==">http://example.com/</span></p><p><img data-src="https://raw.githubusercontent.com/bainiu2/pictures/main/pictures/p2886693452.jpg" alt="p2886693452"></p><h2 id="3-插入并上传图片"><a class="anchor" href="#3-插入并上传图片">#</a> 3. 插入并上传图片</h2><ol><li>打开 typora 和 picgo</li><li>正常插入图片</li><li>右击上传图片 (github 的 resposibity 里的文件夹)</li></ol><h3 id="31-图片位置-居中左右"><a class="anchor" href="#31-图片位置-居中左右">#</a> 3.1 图片位置 -- 居中，左，右</h3><pre><code>&lt;div align=center&gt;![Alt pic] (http:...)如果想将图片位于右侧，只需要将center改为right</code></pre><h3 id="32-设置图片大小"><a class="anchor" href="#32-设置图片大小">#</a> 3.2 设置图片大小</h3><pre><code>&lt;img src="http:..." width = "100" height = "100" div align=right /&gt;</code></pre><h2 id="4-latex公式"><a class="anchor" href="#4-latex公式">#</a> 4. Latex 公式</h2><pre><code>$ X\stackrel{F}{\longrightarrow}Y $</code></pre><p>$ X\stackrel{F}{\longrightarrow}Y $</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>欢迎各位大佬观摩！</title>
      <link href="/2023/02/01/others/hello-world/"/>
      <url>/2023/02/01/others/hello-world/</url>
      
        <content type="html"><![CDATA[<p>​</p><p>没东西！唬人的！</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
